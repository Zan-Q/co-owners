{"version":3,"file":"index.js","sources":["../../app/utils/env.server.ts","../../app/utils/nonce-provider.ts","../../app/utils/timing.server.ts","../../app/entry.server.tsx","../../app/assets/favicons/apple-touch-icon.png","../../app/assets/favicons/favicon.svg","../../app/utils/extended-theme.ts","../../app/utils/misc.tsx","../../app/components/error-boundary.tsx","../../app/components/ui/icons/sprite.svg","../../app/components/ui/icon.tsx","../../app/components/progress-bar.tsx","../../app/components/ui/input.tsx","../../app/components/ui/label.tsx","../../app/components/ui/button.tsx","../../app/components/ui/tooltip.tsx","../../app/components/ui/status-button.tsx","../../app/components/toaster.tsx","../../app/components/ui/dropdown-menu.tsx","../../app/components/ui/sonner.tsx","../../app/utils/request-info.ts","../../app/utils/client-hints.tsx","../../app/utils/theme.server.ts","../../app/routes/resources+/theme-switch.tsx","../../app/styles/tailwind.css?url","../../app/utils/toast.server.ts","../../app/utils/providers/google.server.ts","../../app/utils/connections.server.ts","../../app/utils/session.server.ts","../../app/api/config/axiosConfig.js","../../app/api/userAPI.js","../../app/utils/auth.server.ts","../../app/utils/honeypot.server.ts","../../app/utils/user.ts","../../app/root.tsx","../../app/routes/$.tsx","../../app/utils/connections.tsx","../../app/utils/redirect-cookie.server.ts","../../app/routes/_auth+/auth.$provider.ts","../../app/utils/providers/provider.ts","../../app/utils/verification.server.ts","../../app/routes/_auth+/login.server.ts","../../app/components/ui/checkbox.tsx","../../app/components/ui/input-otp.tsx","../../app/components/forms.tsx","../../app/components/spacer.tsx","../../app/utils/user-validation.ts","../../app/routes/_auth+/onboarding.tsx","../../app/routes/_auth+/onboarding_.$provider.tsx","../../app/routes/_auth+/auth.$provider.callback.ts","../../app/routes/settings+/profile.change-email.tsx","../../app/routes/settings+/profile.change-email.server.tsx","../../app/routes/settings+/profile.two-factor.tsx","../../app/routes/_auth+/onboarding.server.ts","../../app/routes/_auth+/reset-password.tsx","../../app/routes/_auth+/reset-password.server.ts","../../app/routes/_auth+/verify.tsx","../../app/routes/_auth+/verify.server.ts","../../app/routes/_auth+/forgot-password.tsx","../../app/routes/_auth+/login.tsx","../../app/routes/_auth+/logout.tsx","../../app/routes/_auth+/signup.tsx","../../app/routes/_marketing+/about.tsx","../../app/routes/_marketing+/logos/docker.svg","../../app/routes/_marketing+/logos/eslint.svg","../../app/routes/_marketing+/logos/faker.svg","../../app/routes/_marketing+/logos/fly.svg","../../app/routes/_marketing+/logos/github.svg","../../app/routes/_marketing+/logos/msw.svg","../../app/routes/_marketing+/logos/playwright.svg","../../app/routes/_marketing+/logos/prettier.svg","../../app/routes/_marketing+/logos/prisma.svg","../../app/routes/_marketing+/logos/radix.svg","../../app/routes/_marketing+/logos/react-email.svg","../../app/routes/_marketing+/logos/remix.svg","../../app/routes/_marketing+/logos/resend.svg","../../app/routes/_marketing+/logos/sentry.svg","../../app/routes/_marketing+/logos/shadcn-ui.svg","../../app/routes/_marketing+/logos/sqlite.svg","../../app/routes/_marketing+/logos/tailwind.svg","../../app/routes/_marketing+/logos/testing-library.png","../../app/routes/_marketing+/logos/typescript.svg","../../app/routes/_marketing+/logos/vitest.svg","../../app/routes/_marketing+/logos/zod.svg","../../app/routes/_marketing+/logos/logos.ts","../../app/api/generalAPI.js","../../app/routes/_marketing+/index.tsx","../../app/routes/_marketing+/privacy.tsx","../../app/routes/_marketing+/support.tsx","../../app/routes/_marketing+/tailwind-preset.ts","../../app/routes/_marketing+/tos.tsx","../../app/api/businessAPI.js","../../app/routes/admin+/createcompany.tsx","../../app/components/Sidebar/SidebarDropdown.tsx","../../app/components/Sidebar/SidebarItem.tsx","../../app/components/ClickOutside.tsx","../../app/components/Sidebar/index.tsx","../../app/components/dashboard/AccountBalance.tsx","../../app/components/dashboard/Valuation.tsx","../../app/components/dashboard/Watchlist.tsx","../../app/routes/dashboard+/index.tsx","../../app/routes/history+/index.tsx","../../app/api/leaderboardAPI.js","../../app/routes/leaderboard+/index.tsx","../../app/routes/me.tsx","../../app/routes/resources+/_seo+/robots[.]txt.ts","../../app/routes/resources+/_seo+/sitemap[.]xml.ts","../../app/routes/resources+/download-user-data.tsx","../../app/routes/send.ts","../../app/routes/settings+/profile.tsx","../../app/routes/settings+/profile.index.tsx","../../app/utils/db.server.ts","../../app/routes/settings+/profile.two-factor.disable.tsx","../../app/routes/settings+/profile.two-factor.verify.tsx","../../app/routes/settings+/profile.two-factor.index.tsx","../../app/api/transactionAPI.js","../../app/routes/stocks+/$id.tsx","../../app/hooks/userLocation.js","../../app/routes/stocks+/index.tsx","../../app/routes/stripe+/index.tsx","../../app/routes/transact+/index.tsx","../../app/routes/upload+/index.tsx","../../app/routes/upload+/receipt.tsx","../../app/routes/user+/index.tsx"],"sourcesContent":["import { z } from 'zod'\n\nconst schema = z.object({\n\tNODE_ENV: z.enum(['production', 'development', 'test'] as const),\n\tDATABASE_PATH: z.string(),\n\tDATABASE_URL: z.string(),\n\tSESSION_SECRET: z.string(),\n\tINTERNAL_COMMAND_TOKEN: z.string(),\n\tHONEYPOT_SECRET: z.string(),\n\tCACHE_DATABASE_PATH: z.string(),\n\t// If you plan on using Sentry, uncomment this line\n\t// SENTRY_DSN: z.string(),\n\t// If you plan to use Resend, uncomment this line\n\t// RESEND_API_KEY: z.string(),\n\t// If you plan to use GitHub auth, remove the default:\n\tGITHUB_CLIENT_ID: z.string().default('MOCK_GITHUB_CLIENT_ID'),\n\tGITHUB_CLIENT_SECRET: z.string().default('MOCK_GITHUB_CLIENT_SECRET'),\n\tGITHUB_TOKEN: z.string().default('MOCK_GITHUB_TOKEN'),\n\tALLOW_INDEXING: z.enum(['true', 'false']).optional(),\n})\n\ndeclare global {\n\tnamespace NodeJS {\n\t\tinterface ProcessEnv extends z.infer<typeof schema> {}\n\t}\n}\n\nexport function init() {\n\tconst parsed = schema.safeParse(process.env)\n\n\tif (parsed.success === false) {\n\t\tconsole.error(\n\t\t\t'‚ùå Invalid environment variables:',\n\t\t\tparsed.error.flatten().fieldErrors,\n\t\t)\n\n\t\tthrow new Error('Invalid environment variables')\n\t}\n}\n\n/**\n * This is used in both `entry.server.ts` and `root.tsx` to ensure that\n * the environment variables are set and globally available before the app is\n * started.\n *\n * NOTE: Do *not* add any environment variables in here that you do not wish to\n * be included in the client.\n * @returns all public ENV variables\n */\nexport function getEnv() {\n\treturn {\n\t\tMODE: process.env.NODE_ENV,\n\t\tSENTRY_DSN: process.env.SENTRY_DSN,\n\t\tALLOW_INDEXING: process.env.ALLOW_INDEXING,\n\t}\n}\n\ntype ENV = ReturnType<typeof getEnv>\n\ndeclare global {\n\tvar ENV: ENV\n\tinterface Window {\n\t\tENV: ENV\n\t}\n}\n","import * as React from 'react'\n\nexport const NonceContext = React.createContext<string>('')\nexport const NonceProvider = NonceContext.Provider\nexport const useNonce = () => React.useContext(NonceContext)\n","import { type CreateReporter } from '@epic-web/cachified'\n\nexport type Timings = Record<\n\tstring,\n\tArray<\n\t\t{ desc?: string } & (\n\t\t\t| { time: number; start?: never }\n\t\t\t| { time?: never; start: number }\n\t\t)\n\t>\n>\n\nexport function makeTimings(type: string, desc?: string) {\n\tconst timings: Timings = {\n\t\t[type]: [{ desc, start: performance.now() }],\n\t}\n\tObject.defineProperty(timings, 'toString', {\n\t\tvalue: function () {\n\t\t\treturn getServerTimeHeader(timings)\n\t\t},\n\t\tenumerable: false,\n\t})\n\treturn timings\n}\n\nfunction createTimer(type: string, desc?: string) {\n\tconst start = performance.now()\n\treturn {\n\t\tend(timings: Timings) {\n\t\t\tlet timingType = timings[type]\n\n\t\t\tif (!timingType) {\n\t\t\t\ttimingType = timings[type] = []\n\t\t\t}\n\t\t\ttimingType.push({ desc, time: performance.now() - start })\n\t\t},\n\t}\n}\n\nexport async function time<ReturnType>(\n\tfn: Promise<ReturnType> | (() => ReturnType | Promise<ReturnType>),\n\t{\n\t\ttype,\n\t\tdesc,\n\t\ttimings,\n\t}: {\n\t\ttype: string\n\t\tdesc?: string\n\t\ttimings?: Timings\n\t},\n): Promise<ReturnType> {\n\tconst timer = createTimer(type, desc)\n\tconst promise = typeof fn === 'function' ? fn() : fn\n\tif (!timings) return promise\n\n\tconst result = await promise\n\n\ttimer.end(timings)\n\treturn result\n}\n\nexport function getServerTimeHeader(timings?: Timings) {\n\tif (!timings) return ''\n\treturn Object.entries(timings)\n\t\t.map(([key, timingInfos]) => {\n\t\t\tconst dur = timingInfos\n\t\t\t\t.reduce((acc, timingInfo) => {\n\t\t\t\t\tconst time = timingInfo.time ?? performance.now() - timingInfo.start\n\t\t\t\t\treturn acc + time\n\t\t\t\t}, 0)\n\t\t\t\t.toFixed(1)\n\t\t\tconst desc = timingInfos\n\t\t\t\t.map((t) => t.desc)\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.join(' & ')\n\t\t\treturn [\n\t\t\t\tkey.replaceAll(/(:| |@|=|;|,|\\/|\\\\)/g, '_'),\n\t\t\t\tdesc ? `desc=${JSON.stringify(desc)}` : null,\n\t\t\t\t`dur=${dur}`,\n\t\t\t]\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.join(';')\n\t\t})\n\t\t.join(',')\n}\n\nexport function combineServerTimings(headers1: Headers, headers2: Headers) {\n\tconst newHeaders = new Headers(headers1)\n\tnewHeaders.append('Server-Timing', headers2.get('Server-Timing') ?? '')\n\treturn newHeaders.get('Server-Timing') ?? ''\n}\n\nexport function cachifiedTimingReporter<Value>(\n\ttimings?: Timings,\n): undefined | CreateReporter<Value> {\n\tif (!timings) return\n\n\treturn ({ key }) => {\n\t\tconst cacheRetrievalTimer = createTimer(\n\t\t\t`cache:${key}`,\n\t\t\t`${key} cache retrieval`,\n\t\t)\n\t\tlet getFreshValueTimer: ReturnType<typeof createTimer> | undefined\n\t\treturn (event) => {\n\t\t\tswitch (event.name) {\n\t\t\t\tcase 'getFreshValueStart':\n\t\t\t\t\tgetFreshValueTimer = createTimer(\n\t\t\t\t\t\t`getFreshValue:${key}`,\n\t\t\t\t\t\t`request forced to wait for a fresh ${key} value`,\n\t\t\t\t\t)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'getFreshValueSuccess':\n\t\t\t\t\tgetFreshValueTimer?.end(timings)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'done':\n\t\t\t\t\tcacheRetrievalTimer.end(timings)\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n}\n","import { PassThrough } from 'node:stream'\nimport {\n\tcreateReadableStreamFromReadable,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n\ttype HandleDocumentRequestFunction,\n} from '@remix-run/node'\nimport { RemixServer } from '@remix-run/react'\nimport * as Sentry from '@sentry/remix'\nimport chalk from 'chalk'\nimport { isbot } from 'isbot'\nimport { renderToPipeableStream } from 'react-dom/server'\nimport { getEnv, init } from './utils/env.server.ts'\nimport { getInstanceInfo } from './utils/litefs.server.ts'\nimport { NonceProvider } from './utils/nonce-provider.ts'\nimport { makeTimings } from './utils/timing.server.ts'\nimport fs from 'fs';\n\nconst ABORT_DELAY = 5000\n\ninit()\nglobal.ENV = getEnv()\n\ntype DocRequestArgs = Parameters<HandleDocumentRequestFunction>\n\nexport default async function handleRequest(...args: DocRequestArgs) {\n\tconst [\n\t\trequest,\n\t\tresponseStatusCode,\n\t\tresponseHeaders,\n\t\tremixContext,\n\t\tloadContext,\n\t] = args\n\tconst { currentInstance, primaryInstance } = await getInstanceInfo()\n\tresponseHeaders.set('fly-region', process.env.FLY_REGION ?? 'unknown')\n\tresponseHeaders.set('fly-app', process.env.FLY_APP_NAME ?? 'unknown')\n\tresponseHeaders.set('fly-primary-instance', primaryInstance)\n\tresponseHeaders.set('fly-instance', currentInstance)\n\n\tif (process.env.NODE_ENV === 'production' && process.env.SENTRY_DSN) {\n\t\tresponseHeaders.append('Document-Policy', 'js-profiling')\n\t}\n\n\tconst callbackName = isbot(request.headers.get('user-agent'))\n\t\t? 'onAllReady'\n\t\t: 'onShellReady'\n\n\tconst nonce = loadContext.cspNonce?.toString() ?? ''\n\treturn new Promise(async (resolve, reject) => {\n\t\tlet didError = false\n\t\t// NOTE: this timing will only include things that are rendered in the shell\n\t\t// and will not include suspended components and deferred loaders\n\t\tconst timings = makeTimings('render', 'renderToPipeableStream')\n\n\t\tconst { pipe, abort } = renderToPipeableStream(\n\t\t\t<NonceProvider value={nonce}>\n\t\t\t\t<RemixServer context={remixContext} url={request.url} />\n\t\t\t</NonceProvider>,\n\t\t\t{\n\t\t\t\t[callbackName]: () => {\n\t\t\t\t\tconst body = new PassThrough()\n\t\t\t\t\tresponseHeaders.set('Content-Type', 'text/html')\n\t\t\t\t\tresponseHeaders.append('Server-Timing', timings.toString())\n\t\t\t\t\tresolve(\n\t\t\t\t\t\tnew Response(createReadableStreamFromReadable(body), {\n\t\t\t\t\t\t\theaders: responseHeaders,\n\t\t\t\t\t\t\tstatus: didError ? 500 : responseStatusCode,\n\t\t\t\t\t\t}),\n\t\t\t\t\t)\n\t\t\t\t\tpipe(body)\n\t\t\t\t},\n\t\t\t\tonShellError: (err: unknown) => {\n\t\t\t\t\treject(err)\n\t\t\t\t},\n\t\t\t\tonError: () => {\n\t\t\t\t\tdidError = true\n\t\t\t\t},\n\t\t\t\tnonce,\n\t\t\t},\n\t\t)\n\n\t\tsetTimeout(abort, ABORT_DELAY)\n\t})\n}\n\nexport async function handleDataRequest(response: Response) {\n\tconst { currentInstance, primaryInstance } = await getInstanceInfo()\n\tresponse.headers.set('fly-region', process.env.FLY_REGION ?? 'unknown')\n\tresponse.headers.set('fly-app', process.env.FLY_APP_NAME ?? 'unknown')\n\tresponse.headers.set('fly-primary-instance', primaryInstance)\n\tresponse.headers.set('fly-instance', currentInstance)\n\n\treturn response\n}\n\nexport function handleError(\n\terror: unknown,\n\t{ request }: LoaderFunctionArgs | ActionFunctionArgs,\n): void {\n\t// Skip capturing if the request is aborted as Remix docs suggest\n\t// Ref: https://remix.run/docs/en/main/file-conventions/entry.server#handleerror\n\tif (request.signal.aborted) {\n\t\treturn\n\t}\n\tif (error instanceof Error) {\n\t\tconsole.error(chalk.red(error.stack))\n\t\tvoid Sentry.captureRemixServerException(\n\t\t\terror,\n\t\t\t'remix.server',\n\t\t\trequest,\n\t\t\ttrue,\n\t\t)\n\t} else {\n\t\tconsole.error(error)\n\t\tSentry.captureException(error)\n\t}\n}\n","export default \"__VITE_ASSET__DhSICqjw__\"","export default \"__VITE_ASSET__B7S9ERV7__\"","import { type Config } from 'tailwindcss'\n\nexport const extendedTheme = {\n\tcolors: {\n\t\tborder: 'hsl(var(--border))',\n\t\tinput: {\n\t\t\tDEFAULT: 'hsl(var(--input))',\n\t\t\tinvalid: 'hsl(var(--input-invalid))',\n\t\t},\n\t\tring: {\n\t\t\tDEFAULT: 'hsl(var(--ring))',\n\t\t\tinvalid: 'hsl(var(--foreground-destructive))',\n\t\t},\n\t\tbackground: 'hsl(var(--background))',\n\t\tforeground: {\n\t\t\tDEFAULT: 'hsl(var(--foreground))',\n\t\t\tdestructive: 'hsl(var(--foreground-destructive))',\n\t\t},\n\t\tprimary: {\n\t\t\tDEFAULT: 'hsl(var(--primary))',\n\t\t\tforeground: 'hsl(var(--primary-foreground))',\n\t\t},\n\t\tsecondary: {\n\t\t\tDEFAULT: 'hsl(var(--secondary))',\n\t\t\tforeground: 'hsl(var(--secondary-foreground))',\n\t\t},\n\t\tdestructive: {\n\t\t\tDEFAULT: 'hsl(var(--destructive))',\n\t\t\tforeground: 'hsl(var(--destructive-foreground))',\n\t\t},\n\t\tmuted: {\n\t\t\tDEFAULT: 'hsl(var(--muted))',\n\t\t\tforeground: 'hsl(var(--muted-foreground))',\n\t\t},\n\t\taccent: {\n\t\t\tDEFAULT: 'hsl(var(--accent))',\n\t\t\tforeground: 'hsl(var(--accent-foreground))',\n\t\t},\n\t\tpopover: {\n\t\t\tDEFAULT: 'hsl(var(--popover))',\n\t\t\tforeground: 'hsl(var(--popover-foreground))',\n\t\t},\n\t\tcard: {\n\t\t\tDEFAULT: 'hsl(var(--card))',\n\t\t\tforeground: 'hsl(var(--card-foreground))',\n\t\t},\n\t},\n\tborderColor: {\n\t\tDEFAULT: 'hsl(var(--border))',\n\t},\n\tborderRadius: {\n\t\tlg: 'var(--radius)',\n\t\tmd: 'calc(var(--radius) - 2px)',\n\t\tsm: 'calc(var(--radius) - 4px)',\n\t},\n\tfontSize: {\n\t\t// 1rem = 16px\n\t\t/** 80px size / 84px high / bold */\n\t\tmega: ['5rem', { lineHeight: '5.25rem', fontWeight: '700' }],\n\t\t/** 56px size / 62px high / bold */\n\t\th1: ['3.5rem', { lineHeight: '3.875rem', fontWeight: '700' }],\n\t\t/** 40px size / 48px high / bold */\n\t\th2: ['2.5rem', { lineHeight: '3rem', fontWeight: '700' }],\n\t\t/** 32px size / 36px high / bold */\n\t\th3: ['2rem', { lineHeight: '2.25rem', fontWeight: '700' }],\n\t\t/** 28px size / 36px high / bold */\n\t\th4: ['1.75rem', { lineHeight: '2.25rem', fontWeight: '700' }],\n\t\t/** 24px size / 32px high / bold */\n\t\th5: ['1.5rem', { lineHeight: '2rem', fontWeight: '700' }],\n\t\t/** 16px size / 20px high / bold */\n\t\th6: ['1rem', { lineHeight: '1.25rem', fontWeight: '700' }],\n\n\t\t/** 32px size / 36px high / normal */\n\t\t'body-2xl': ['2rem', { lineHeight: '2.25rem' }],\n\t\t/** 28px size / 36px high / normal */\n\t\t'body-xl': ['1.75rem', { lineHeight: '2.25rem' }],\n\t\t/** 24px size / 32px high / normal */\n\t\t'body-lg': ['1.5rem', { lineHeight: '2rem' }],\n\t\t/** 20px size / 28px high / normal */\n\t\t'body-md': ['1.25rem', { lineHeight: '1.75rem' }],\n\t\t/** 16px size / 20px high / normal */\n\t\t'body-sm': ['1rem', { lineHeight: '1.25rem' }],\n\t\t/** 14px size / 18px high / normal */\n\t\t'body-xs': ['0.875rem', { lineHeight: '1.125rem' }],\n\t\t/** 12px size / 16px high / normal */\n\t\t'body-2xs': ['0.75rem', { lineHeight: '1rem' }],\n\n\t\t/** 18px size / 24px high / semibold */\n\t\tcaption: ['1.125rem', { lineHeight: '1.5rem', fontWeight: '600' }],\n\t\t/** 12px size / 16px high / bold */\n\t\tbutton: ['0.75rem', { lineHeight: '1rem', fontWeight: '700' }],\n\t},\n\tkeyframes: {\n\t\t'caret-blink': {\n\t\t\t'0%,70%,100%': { opacity: '1' },\n\t\t\t'20%,50%': { opacity: '0' },\n\t\t},\n\t},\n\tanimation: {\n\t\t'caret-blink': 'caret-blink 1.25s ease-out infinite',\n\t},\n} satisfies Config['theme']\n","import { useFormAction, useNavigation } from '@remix-run/react'\nimport { clsx, type ClassValue } from 'clsx'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { useSpinDelay } from 'spin-delay'\nimport { extendTailwindMerge } from 'tailwind-merge'\nimport { extendedTheme } from './extended-theme.ts'\n\nexport function getUserImgSrc(imageUrl?: string | null) {\n\treturn imageUrl ? `${imageUrl}` : '/img/user.png'\n}\n\nexport function getNoteImgSrc(imageId: string) {\n\treturn `/resources/note-images/${imageId}`\n}\n\nexport function getErrorMessage(error: unknown) {\n\tif (typeof error === 'string') return error\n\tif (\n\t\terror &&\n\t\ttypeof error === 'object' &&\n\t\t'message' in error &&\n\t\ttypeof error.message === 'string'\n\t) {\n\t\treturn error.message\n\t}\n\tconsole.error('Unable to get error message for error', error)\n\treturn 'Unknown Error'\n}\n\nfunction formatColors() {\n\tconst colors = []\n\tfor (const [key, color] of Object.entries(extendedTheme.colors)) {\n\t\tif (typeof color === 'string') {\n\t\t\tcolors.push(key)\n\t\t} else {\n\t\t\tconst colorGroup = Object.keys(color).map((subKey) =>\n\t\t\t\tsubKey === 'DEFAULT' ? '' : subKey,\n\t\t\t)\n\t\t\tcolors.push({ [key]: colorGroup })\n\t\t}\n\t}\n\treturn colors\n}\n\nconst customTwMerge = extendTailwindMerge<string, string>({\n\textend: {\n\t\ttheme: {\n\t\t\tcolors: formatColors(),\n\t\t\tborderRadius: Object.keys(extendedTheme.borderRadius),\n\t\t},\n\t\tclassGroups: {\n\t\t\t'font-size': [\n\t\t\t\t{\n\t\t\t\t\ttext: Object.keys(extendedTheme.fontSize),\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t},\n})\n\nexport function cn(...inputs: ClassValue[]) {\n\treturn customTwMerge(clsx(inputs))\n}\n\nexport function getDomainUrl(request: Request) {\n\tconst host =\n\t\trequest.headers.get('X-Forwarded-Host') ??\n\t\trequest.headers.get('host') ??\n\t\tnew URL(request.url).host\n\tconst protocol = request.headers.get('X-Forwarded-Proto') ?? 'http'\n\treturn `${protocol}://${host}`\n}\n\nexport function getReferrerRoute(request: Request) {\n\t// spelling errors and whatever makes this annoyingly inconsistent\n\t// in my own testing, `referer` returned the right value, but ü§∑‚Äç‚ôÇÔ∏è\n\tconst referrer =\n\t\trequest.headers.get('referer') ??\n\t\trequest.headers.get('referrer') ??\n\t\trequest.referrer\n\tconst domain = getDomainUrl(request)\n\tif (referrer?.startsWith(domain)) {\n\t\treturn referrer.slice(domain.length)\n\t} else {\n\t\treturn '/'\n\t}\n}\n\n/**\n * Merge multiple headers objects into one (uses set so headers are overridden)\n */\nexport function mergeHeaders(\n\t...headers: Array<ResponseInit['headers'] | null | undefined>\n) {\n\tconst merged = new Headers()\n\tfor (const header of headers) {\n\t\tif (!header) continue\n\t\tfor (const [key, value] of new Headers(header).entries()) {\n\t\t\tmerged.set(key, value)\n\t\t}\n\t}\n\treturn merged\n}\n\n/**\n * Combine multiple header objects into one (uses append so headers are not overridden)\n */\nexport function combineHeaders(\n\t...headers: Array<ResponseInit['headers'] | null | undefined>\n) {\n\tconst combined = new Headers()\n\tfor (const header of headers) {\n\t\tif (!header) continue\n\t\tfor (const [key, value] of new Headers(header).entries()) {\n\t\t\tcombined.append(key, value)\n\t\t}\n\t}\n\treturn combined\n}\n\n/**\n * Combine multiple response init objects into one (uses combineHeaders)\n */\nexport function combineResponseInits(\n\t...responseInits: Array<ResponseInit | null | undefined>\n) {\n\tlet combined: ResponseInit = {}\n\tfor (const responseInit of responseInits) {\n\t\tcombined = {\n\t\t\t...responseInit,\n\t\t\theaders: combineHeaders(combined.headers, responseInit?.headers),\n\t\t}\n\t}\n\treturn combined\n}\n\n/**\n * Returns true if the current navigation is submitting the current route's\n * form. Defaults to the current route's form action and method POST.\n *\n * Defaults state to 'non-idle'\n *\n * NOTE: the default formAction will include query params, but the\n * navigation.formAction will not, so don't use the default formAction if you\n * want to know if a form is submitting without specific query params.\n */\nexport function useIsPending({\n\tformAction,\n\tformMethod = 'POST',\n\tstate = 'non-idle',\n}: {\n\tformAction?: string\n\tformMethod?: 'POST' | 'GET' | 'PUT' | 'PATCH' | 'DELETE'\n\tstate?: 'submitting' | 'loading' | 'non-idle'\n} = {}) {\n\tconst contextualFormAction = useFormAction()\n\tconst navigation = useNavigation()\n\tconst isPendingState =\n\t\tstate === 'non-idle'\n\t\t\t? navigation.state !== 'idle'\n\t\t\t: navigation.state === state\n\treturn (\n\t\tisPendingState &&\n\t\tnavigation.formAction === (formAction ?? contextualFormAction) &&\n\t\tnavigation.formMethod === formMethod\n\t)\n}\n\n/**\n * This combines useSpinDelay (from https://npm.im/spin-delay) and useIsPending\n * from our own utilities to give you a nice way to show a loading spinner for\n * a minimum amount of time, even if the request finishes right after the delay.\n *\n * This avoids a flash of loading state regardless of how fast or slow the\n * request is.\n */\nexport function useDelayedIsPending({\n\tformAction,\n\tformMethod,\n\tdelay = 400,\n\tminDuration = 300,\n}: Parameters<typeof useIsPending>[0] &\n\tParameters<typeof useSpinDelay>[1] = {}) {\n\tconst isPending = useIsPending({ formAction, formMethod })\n\tconst delayedIsPending = useSpinDelay(isPending, {\n\t\tdelay,\n\t\tminDuration,\n\t})\n\treturn delayedIsPending\n}\n\nfunction callAll<Args extends Array<unknown>>(\n\t...fns: Array<((...args: Args) => unknown) | undefined>\n) {\n\treturn (...args: Args) => fns.forEach((fn) => fn?.(...args))\n}\n\n/**\n * Use this hook with a button and it will make it so the first click sets a\n * `doubleCheck` state to true, and the second click will actually trigger the\n * `onClick` handler. This allows you to have a button that can be like a\n * \"are you sure?\" experience for the user before doing destructive operations.\n */\nexport function useDoubleCheck() {\n\tconst [doubleCheck, setDoubleCheck] = useState(false)\n\n\tfunction getButtonProps(\n\t\tprops?: React.ButtonHTMLAttributes<HTMLButtonElement>,\n\t) {\n\t\tconst onBlur: React.ButtonHTMLAttributes<HTMLButtonElement>['onBlur'] =\n\t\t\t() => setDoubleCheck(false)\n\n\t\tconst onClick: React.ButtonHTMLAttributes<HTMLButtonElement>['onClick'] =\n\t\t\tdoubleCheck\n\t\t\t\t? undefined\n\t\t\t\t: (e) => {\n\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\tsetDoubleCheck(true)\n\t\t\t\t\t}\n\n\t\tconst onKeyUp: React.ButtonHTMLAttributes<HTMLButtonElement>['onKeyUp'] = (\n\t\t\te,\n\t\t) => {\n\t\t\tif (e.key === 'Escape') {\n\t\t\t\tsetDoubleCheck(false)\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t...props,\n\t\t\tonBlur: callAll(onBlur, props?.onBlur),\n\t\t\tonClick: callAll(onClick, props?.onClick),\n\t\t\tonKeyUp: callAll(onKeyUp, props?.onKeyUp),\n\t\t}\n\t}\n\n\treturn { doubleCheck, getButtonProps }\n}\n\n/**\n * Simple debounce implementation\n */\nfunction debounce<Callback extends (...args: Parameters<Callback>) => void>(\n\tfn: Callback,\n\tdelay: number,\n) {\n\tlet timer: ReturnType<typeof setTimeout> | null = null\n\treturn (...args: Parameters<Callback>) => {\n\t\tif (timer) clearTimeout(timer)\n\t\ttimer = setTimeout(() => {\n\t\t\tfn(...args)\n\t\t}, delay)\n\t}\n}\n\n/**\n * Debounce a callback function\n */\nexport function useDebounce<\n\tCallback extends (...args: Parameters<Callback>) => ReturnType<Callback>,\n>(callback: Callback, delay: number) {\n\tconst callbackRef = useRef(callback)\n\tuseEffect(() => {\n\t\tcallbackRef.current = callback\n\t})\n\treturn useMemo(\n\t\t() =>\n\t\t\tdebounce(\n\t\t\t\t(...args: Parameters<Callback>) => callbackRef.current(...args),\n\t\t\t\tdelay,\n\t\t\t),\n\t\t[delay],\n\t)\n}\n\nexport async function downloadFile(url: string, retries: number = 0) {\n\tconst MAX_RETRIES = 3\n\ttry {\n\t\tconst response = await fetch(url)\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`Failed to fetch image with status ${response.status}`)\n\t\t}\n\t\tconst contentType = response.headers.get('content-type') ?? 'image/jpg'\n\t\tconst blob = Buffer.from(await response.arrayBuffer())\n\t\treturn { contentType, blob }\n\t} catch (e) {\n\t\tif (retries > MAX_RETRIES) throw e\n\t\treturn downloadFile(url, retries + 1)\n\t}\n}\n","import {\n\ttype ErrorResponse,\n\tisRouteErrorResponse,\n\tuseParams,\n\tuseRouteError,\n} from '@remix-run/react'\nimport { captureRemixErrorBoundaryError } from '@sentry/remix'\nimport { getErrorMessage } from '#app/utils/misc.tsx'\n\ntype StatusHandler = (info: {\n\terror: ErrorResponse\n\tparams: Record<string, string | undefined>\n}) => JSX.Element | null\n\nexport function GeneralErrorBoundary({\n\tdefaultStatusHandler = ({ error }) => (\n\t\t<p>\n\t\t\t{error.status} {error.data}\n\t\t</p>\n\t),\n\tstatusHandlers,\n\tunexpectedErrorHandler = (error) => <p>{getErrorMessage(error)}</p>,\n}: {\n\tdefaultStatusHandler?: StatusHandler\n\tstatusHandlers?: Record<number, StatusHandler>\n\tunexpectedErrorHandler?: (error: unknown) => JSX.Element | null\n}) {\n\tconst error = useRouteError()\n\tcaptureRemixErrorBoundaryError(error)\n\tconst params = useParams()\n\n\tif (typeof document !== 'undefined') {\n\t\tconsole.error(error)\n\t}\n\n\treturn (\n\t\t<div className=\"container flex items-center justify-center p-20 text-h2\">\n\t\t\t{isRouteErrorResponse(error)\n\t\t\t\t? (statusHandlers?.[error.status] ?? defaultStatusHandler)({\n\t\t\t\t\t\terror,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t})\n\t\t\t\t: unexpectedErrorHandler(error)}\n\t\t</div>\n\t)\n}\n","export default \"__VITE_ASSET__0pJmlING__\"","import { type SVGProps } from 'react'\nimport { cn } from '#app/utils/misc.tsx'\nimport href from './icons/sprite.svg'\nimport { type IconName } from '@/icon-name'\n\nexport { href }\nexport { IconName }\n\nconst sizeClassName = {\n\tfont: 'w-[1em] h-[1em]',\n\txs: 'w-3 h-3',\n\tsm: 'w-4 h-4',\n\tmd: 'w-5 h-5',\n\tlg: 'w-6 h-6',\n\txl: 'w-7 h-7',\n} as const\n\ntype Size = keyof typeof sizeClassName\n\nconst childrenSizeClassName = {\n\tfont: 'gap-1.5',\n\txs: 'gap-1.5',\n\tsm: 'gap-1.5',\n\tmd: 'gap-2',\n\tlg: 'gap-2',\n\txl: 'gap-3',\n} satisfies Record<Size, string>\n\n/**\n * Renders an SVG icon. The icon defaults to the size of the font. To make it\n * align vertically with neighboring text, you can pass the text as a child of\n * the icon and it will be automatically aligned.\n * Alternatively, if you're not ok with the icon being to the left of the text,\n * you need to wrap the icon and text in a common parent and set the parent to\n * display \"flex\" (or \"inline-flex\") with \"items-center\" and a reasonable gap.\n *\n * Pass `title` prop to the `Icon` component to get `<title>` element rendered\n * in the SVG container, providing this way for accessibility.\n */\nexport function Icon({\n\tname,\n\tsize = 'font',\n\tclassName,\n\ttitle,\n\tchildren,\n\t...props\n}: SVGProps<SVGSVGElement> & {\n\tname: IconName\n\tsize?: Size\n\ttitle?: string\n}) {\n\tif (children) {\n\t\treturn (\n\t\t\t<span\n\t\t\t\tclassName={`inline-flex items-center ${childrenSizeClassName[size]}`}\n\t\t\t>\n\t\t\t\t<Icon\n\t\t\t\t\tname={name}\n\t\t\t\t\tsize={size}\n\t\t\t\t\tclassName={className}\n\t\t\t\t\ttitle={title}\n\t\t\t\t\t{...props}\n\t\t\t\t/>\n\t\t\t\t{children}\n\t\t\t</span>\n\t\t)\n\t}\n\treturn (\n\t\t<svg\n\t\t\t{...props}\n\t\t\tclassName={cn(sizeClassName[size], 'inline self-center', className)}\n\t\t>\n\t\t\t{title ? <title>{title}</title> : null}\n\t\t\t<use href={`${href}#${name}`} />\n\t\t</svg>\n\t)\n}\n","import { useNavigation } from '@remix-run/react'\nimport { useEffect, useRef, useState } from 'react'\nimport { useSpinDelay } from 'spin-delay'\nimport { cn } from '#app/utils/misc.tsx'\nimport { Icon } from './ui/icon.tsx'\n\nfunction EpicProgress() {\n\tconst transition = useNavigation()\n\tconst busy = transition.state !== 'idle'\n\tconst delayedPending = useSpinDelay(busy, {\n\t\tdelay: 600,\n\t\tminDuration: 400,\n\t})\n\tconst ref = useRef<HTMLDivElement>(null)\n\tconst [animationComplete, setAnimationComplete] = useState(true)\n\n\tuseEffect(() => {\n\t\tif (!ref.current) return\n\t\tif (delayedPending) setAnimationComplete(false)\n\n\t\tconst animationPromises = ref.current\n\t\t\t.getAnimations()\n\t\t\t.map(({ finished }) => finished)\n\n\t\tvoid Promise.allSettled(animationPromises).then(() => {\n\t\t\tif (!delayedPending) setAnimationComplete(true)\n\t\t})\n\t}, [delayedPending])\n\n\treturn (\n\t\t<div\n\t\t\trole=\"progressbar\"\n\t\t\taria-hidden={delayedPending ? undefined : true}\n\t\t\taria-valuetext={delayedPending ? 'Loading' : undefined}\n\t\t\tclassName=\"fixed inset-x-0 left-0 top-0 z-50 h-[0.20rem] animate-pulse\"\n\t\t>\n\t\t\t<div\n\t\t\t\tref={ref}\n\t\t\t\tclassName={cn(\n\t\t\t\t\t'h-full w-0 bg-foreground duration-500 ease-in-out',\n\t\t\t\t\ttransition.state === 'idle' &&\n\t\t\t\t\t\t(animationComplete\n\t\t\t\t\t\t\t? 'transition-none'\n\t\t\t\t\t\t\t: 'w-full opacity-0 transition-all'),\n\t\t\t\t\tdelayedPending && transition.state === 'submitting' && 'w-5/12',\n\t\t\t\t\tdelayedPending && transition.state === 'loading' && 'w-8/12',\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t{delayedPending && (\n\t\t\t\t<div className=\"absolute flex items-center justify-center\">\n\t\t\t\t\t<Icon\n\t\t\t\t\t\tname=\"update\"\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\tclassName=\"m-1 animate-spin text-foreground\"\n\t\t\t\t\t\taria-hidden\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport { EpicProgress }\n","import * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nexport interface InputProps\n\textends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n\t({ className, type, ...props }, ref) => {\n\t\treturn (\n\t\t\t<input\n\t\t\t\ttype={type}\n\t\t\t\tclassName={cn(\n\t\t\t\t\t'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-base file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 aria-[invalid]:border-input-invalid md:text-sm md:file:text-sm',\n\t\t\t\t\tclassName,\n\t\t\t\t)}\n\t\t\t\tref={ref}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t)\n\t},\n)\nInput.displayName = 'Input'\n\nexport { Input }\n","import * as LabelPrimitive from '@radix-ui/react-label'\nimport { cva, type VariantProps } from 'class-variance-authority'\nimport * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nconst labelVariants = cva(\n\t'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n)\n\nconst Label = React.forwardRef<\n\tReact.ElementRef<typeof LabelPrimitive.Root>,\n\tReact.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n\t\tVariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n\t<LabelPrimitive.Root\n\t\tref={ref}\n\t\tclassName={cn(labelVariants(), className)}\n\t\t{...props}\n\t/>\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","import { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\nimport * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nconst buttonVariants = cva(\n\t'inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors outline-none focus-visible:ring-2 focus-within:ring-2 ring-ring ring-offset-2 disabled:pointer-events-none disabled:opacity-50',\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault: 'bg-primary text-primary-foreground hover:bg-primary/80',\n\t\t\t\tdestructive:\n\t\t\t\t\t'bg-destructive text-destructive-foreground hover:bg-destructive/80',\n\t\t\t\toutline:\n\t\t\t\t\t'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tsecondary:\n\t\t\t\t\t'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n\t\t\t\tghost: 'hover:bg-accent hover:text-accent-foreground',\n\t\t\t\tlink: 'text-primary underline-offset-4 hover:underline',\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: 'h-10 px-4 py-2',\n\t\t\t\twide: 'px-24 py-5',\n\t\t\t\tsm: 'h-9 rounded-md px-3',\n\t\t\t\tlg: 'h-11 rounded-md px-8',\n\t\t\t\tpill: 'px-12 py-3 leading-3',\n\t\t\t\ticon: 'h-10 w-10',\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: 'default',\n\t\t\tsize: 'default',\n\t\t},\n\t},\n)\n\nexport interface ButtonProps\n\textends React.ButtonHTMLAttributes<HTMLButtonElement>,\n\t\tVariantProps<typeof buttonVariants> {\n\tasChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n\t({ className, variant, size, asChild = false, ...props }, ref) => {\n\t\tconst Comp = asChild ? Slot : 'button'\n\t\treturn (\n\t\t\t<Comp\n\t\t\t\tclassName={cn(buttonVariants({ variant, size, className }))}\n\t\t\t\tref={ref}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t)\n\t},\n)\nButton.displayName = 'Button'\n\nexport { Button, buttonVariants }\n","import * as TooltipPrimitive from '@radix-ui/react-tooltip'\nimport * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n\tReact.ElementRef<typeof TooltipPrimitive.Content>,\n\tReact.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n\t<TooltipPrimitive.Content\n\t\tref={ref}\n\t\tsideOffset={sideOffset}\n\t\tclassName={cn(\n\t\t\t'z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t/>\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","import * as React from 'react'\nimport { useSpinDelay } from 'spin-delay'\nimport { cn } from '#app/utils/misc.tsx'\nimport { Button, type ButtonProps } from './button.tsx'\nimport { Icon } from './icon.tsx'\nimport {\n\tTooltip,\n\tTooltipContent,\n\tTooltipProvider,\n\tTooltipTrigger,\n} from './tooltip.tsx'\n\nexport const StatusButton = React.forwardRef<\n\tHTMLButtonElement,\n\tButtonProps & {\n\t\tstatus: 'pending' | 'success' | 'error' | 'idle'\n\t\tmessage?: string | null\n\t\tspinDelay?: Parameters<typeof useSpinDelay>[1]\n\t}\n>(({ message, status, className, children, spinDelay, ...props }, ref) => {\n\tconst delayedPending = useSpinDelay(status === 'pending', {\n\t\tdelay: 400,\n\t\tminDuration: 300,\n\t\t...spinDelay,\n\t})\n\tconst companion = {\n\t\tpending: delayedPending ? (\n\t\t\t<div\n\t\t\t\trole=\"status\"\n\t\t\t\tclassName=\"inline-flex h-6 w-6 items-center justify-center\"\n\t\t\t>\n\t\t\t\t<Icon name=\"update\" className=\"animate-spin\" title=\"loading\" />\n\t\t\t</div>\n\t\t) : null,\n\t\tsuccess: (\n\t\t\t<div\n\t\t\t\trole=\"status\"\n\t\t\t\tclassName=\"inline-flex h-6 w-6 items-center justify-center\"\n\t\t\t>\n\t\t\t\t<Icon name=\"check\" title=\"success\" />\n\t\t\t</div>\n\t\t),\n\t\terror: (\n\t\t\t<div\n\t\t\t\trole=\"status\"\n\t\t\t\tclassName=\"inline-flex h-6 w-6 items-center justify-center rounded-full bg-destructive\"\n\t\t\t>\n\t\t\t\t<Icon\n\t\t\t\t\tname=\"cross-1\"\n\t\t\t\t\tclassName=\"text-destructive-foreground\"\n\t\t\t\t\ttitle=\"error\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t),\n\t\tidle: null,\n\t}[status]\n\n\treturn (\n\t\t<Button\n\t\t\tref={ref}\n\t\t\tclassName={cn('flex justify-center gap-4', className)}\n\t\t\t{...props}\n\t\t>\n\t\t\t<div>{children}</div>\n\t\t\t{message ? (\n\t\t\t\t<TooltipProvider>\n\t\t\t\t\t<Tooltip>\n\t\t\t\t\t\t<TooltipTrigger>{companion}</TooltipTrigger>\n\t\t\t\t\t\t<TooltipContent>{message}</TooltipContent>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</TooltipProvider>\n\t\t\t) : (\n\t\t\t\tcompanion\n\t\t\t)}\n\t\t</Button>\n\t)\n})\nStatusButton.displayName = 'Button'\n","import { useEffect } from 'react'\nimport { toast as showToast } from 'sonner'\nimport { type Toast } from '#app/utils/toast.server.ts'\n\nexport function useToast(toast?: Toast | null) {\n\tuseEffect(() => {\n\t\tif (toast) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tshowToast[toast.type](toast.title, {\n\t\t\t\t\tid: toast.id,\n\t\t\t\t\tdescription: toast.description,\n\t\t\t\t})\n\t\t\t}, 0)\n\t\t}\n\t}, [toast])\n}\n","import * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu'\nimport * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n\t\tinset?: boolean\n\t}\n>(({ className, inset, children, ...props }, ref) => (\n\t<DropdownMenuPrimitive.SubTrigger\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'flex select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent',\n\t\t\tinset && 'pl-8',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t>\n\t\t{children}\n\t\t<span className=\"ml-auto h-4 w-4\">‚ñ∂Ô∏è</span>\n\t</DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n\tDropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n\t<DropdownMenuPrimitive.SubContent\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t/>\n))\nDropdownMenuSubContent.displayName =\n\tDropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.Content>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n\t<DropdownMenuPrimitive.Portal>\n\t\t<DropdownMenuPrimitive.Content\n\t\t\tref={ref}\n\t\t\tsideOffset={sideOffset}\n\t\t\tclassName={cn(\n\t\t\t\t'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t</DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.Item>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n\t\tinset?: boolean\n\t}\n>(({ className, inset, ...props }, ref) => (\n\t<DropdownMenuPrimitive.Item\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'relative flex select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n\t\t\tinset && 'pl-8',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t/>\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n\t<DropdownMenuPrimitive.CheckboxItem\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'relative flex select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n\t\t\tclassName,\n\t\t)}\n\t\tchecked={checked}\n\t\t{...props}\n\t>\n\t\t<span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n\t\t\t<DropdownMenuPrimitive.ItemIndicator>\n\t\t\t\t<span className=\"h-4 w-4\">\n\t\t\t\t\t<svg viewBox=\"0 0 8 8\">\n\t\t\t\t\t\t<path\n\t\t\t\t\t\t\td=\"M1,4 L3,6 L7,2\"\n\t\t\t\t\t\t\tstroke=\"black\"\n\t\t\t\t\t\t\tstrokeWidth=\"1\"\n\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</svg>\n\t\t\t\t</span>\n\t\t\t</DropdownMenuPrimitive.ItemIndicator>\n\t\t</span>\n\t\t{children}\n\t</DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n\tDropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n\t<DropdownMenuPrimitive.RadioItem\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'relative flex select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t>\n\t\t<span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n\t\t\t<DropdownMenuPrimitive.ItemIndicator>\n\t\t\t\t<span className=\"h-2 w-2\">‚ö™</span>\n\t\t\t</DropdownMenuPrimitive.ItemIndicator>\n\t\t</span>\n\t\t{children}\n\t</DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.Label>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n\t\tinset?: boolean\n\t}\n>(({ className, inset, ...props }, ref) => (\n\t<DropdownMenuPrimitive.Label\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'px-2 py-1.5 text-sm font-semibold',\n\t\t\tinset && 'pl-8',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t/>\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n\tReact.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n\tReact.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n\t<DropdownMenuPrimitive.Separator\n\t\tref={ref}\n\t\tclassName={cn('-mx-1 my-1 h-px bg-muted', className)}\n\t\t{...props}\n\t/>\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n\tclassName,\n\t...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n\treturn (\n\t\t<span\n\t\t\tclassName={cn('ml-auto text-xs tracking-widest opacity-60', className)}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\nDropdownMenuShortcut.displayName = 'DropdownMenuShortcut'\n\nexport {\n\tDropdownMenu,\n\tDropdownMenuTrigger,\n\tDropdownMenuContent,\n\tDropdownMenuItem,\n\tDropdownMenuCheckboxItem,\n\tDropdownMenuRadioItem,\n\tDropdownMenuLabel,\n\tDropdownMenuSeparator,\n\tDropdownMenuShortcut,\n\tDropdownMenuGroup,\n\tDropdownMenuPortal,\n\tDropdownMenuSub,\n\tDropdownMenuSubContent,\n\tDropdownMenuSubTrigger,\n\tDropdownMenuRadioGroup,\n}\n","import { Toaster as Sonner } from 'sonner'\n\ntype ToasterProps = React.ComponentProps<typeof Sonner>\n\nconst EpicToaster = ({ theme, ...props }: ToasterProps) => {\n\treturn (\n\t\t<Sonner\n\t\t\ttheme={theme}\n\t\t\tclassName=\"toaster group\"\n\t\t\ttoastOptions={{\n\t\t\t\tclassNames: {\n\t\t\t\t\ttoast:\n\t\t\t\t\t\t'group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg',\n\t\t\t\t\tdescription: 'group-[.toast]:text-muted-foreground',\n\t\t\t\t\tactionButton:\n\t\t\t\t\t\t'group-[.toast]:bg-primary group-[.toast]:text-primary-foreground',\n\t\t\t\t\tcancelButton:\n\t\t\t\t\t\t'group-[.toast]:bg-muted group-[.toast]:text-muted-foreground',\n\t\t\t\t},\n\t\t\t}}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\n\nexport { EpicToaster }\n","import { invariant } from '@epic-web/invariant'\nimport { useRouteLoaderData } from '@remix-run/react'\nimport { type loader as rootLoader } from '#app/root.tsx'\n\n/**\n * @returns the request info from the root loader\n */\nexport function useRequestInfo() {\n\tconst data = useRouteLoaderData<typeof rootLoader>('root')\n\tinvariant(data?.requestInfo, 'No requestInfo found in root loader')\n\n\treturn data.requestInfo\n}\n","/**\n * This file contains utilities for using client hints for user preference which\n * are needed by the server, but are only known by the browser.\n */\nimport { getHintUtils } from '@epic-web/client-hints'\nimport {\n\tclientHint as colorSchemeHint,\n\tsubscribeToSchemeChange,\n} from '@epic-web/client-hints/color-scheme'\nimport { clientHint as timeZoneHint } from '@epic-web/client-hints/time-zone'\nimport { useRevalidator } from '@remix-run/react'\nimport * as React from 'react'\nimport { useRequestInfo } from './request-info.ts'\n\nconst hintsUtils = getHintUtils({\n\ttheme: colorSchemeHint,\n\ttimeZone: timeZoneHint,\n\t// add other hints here\n})\n\nexport const { getHints } = hintsUtils\n\n/**\n * @returns an object with the client hints and their values\n */\nexport function useHints() {\n\tconst requestInfo = useRequestInfo()\n\treturn requestInfo.hints\n}\n\n/**\n * @returns inline script element that checks for client hints and sets cookies\n * if they are not set then reloads the page if any cookie was set to an\n * inaccurate value.\n */\nexport function ClientHintCheck({ nonce }: { nonce: string }) {\n\tconst { revalidate } = useRevalidator()\n\tReact.useEffect(\n\t\t() => subscribeToSchemeChange(() => revalidate()),\n\t\t[revalidate],\n\t)\n\n\treturn (\n\t\t<script\n\t\t\tnonce={nonce}\n\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t__html: hintsUtils.getClientHintCheckScript(),\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import * as cookie from 'cookie'\n\nconst cookieName = 'en_theme'\nexport type Theme = 'light' | 'dark'\n\nexport function getTheme(request: Request): Theme | null {\n\tconst cookieHeader = request.headers.get('cookie')\n\tconst parsed = cookieHeader ? cookie.parse(cookieHeader)[cookieName] : 'light'\n\tif (parsed === 'light' || parsed === 'dark') return parsed\n\treturn null\n}\n\nexport function setTheme(theme: Theme | 'system') {\n\tif (theme === 'system') {\n\t\treturn cookie.serialize(cookieName, '', { path: '/', maxAge: -1 })\n\t} else {\n\t\treturn cookie.serialize(cookieName, theme, { path: '/', maxAge: 31536000 })\n\t}\n}\n","import { useForm, getFormProps } from '@conform-to/react'\nimport { parseWithZod } from '@conform-to/zod'\nimport { invariantResponse } from '@epic-web/invariant'\nimport { json, type ActionFunctionArgs } from '@remix-run/node'\nimport { redirect, useFetcher, useFetchers } from '@remix-run/react'\nimport { ServerOnly } from 'remix-utils/server-only'\nimport { z } from 'zod'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { useHints } from '#app/utils/client-hints.tsx'\nimport { useRequestInfo } from '#app/utils/request-info.ts'\nimport { type Theme, setTheme } from '#app/utils/theme.server.ts'\n\nconst ThemeFormSchema = z.object({\n\ttheme: z.enum(['system', 'light', 'dark']),\n\t// this is useful for progressive enhancement\n\tredirectTo: z.string().optional(),\n})\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst formData = await request.formData()\n\tconst submission = parseWithZod(formData, {\n\t\tschema: ThemeFormSchema,\n\t})\n\n\tinvariantResponse(submission.status === 'success', 'Invalid theme received')\n\n\tconst { theme, redirectTo } = submission.value\n\n\tconst responseInit = {\n\t\theaders: { 'set-cookie': setTheme(theme) },\n\t}\n\tif (redirectTo) {\n\t\treturn redirect(redirectTo, responseInit)\n\t} else {\n\t\treturn json({ result: submission.reply() }, responseInit)\n\t}\n}\n\nexport function ThemeSwitch({\n\tuserPreference,\n}: {\n\tuserPreference?: Theme | null\n}) {\n\tconst fetcher = useFetcher<typeof action>()\n\tconst requestInfo = useRequestInfo()\n\n\tconst [form] = useForm({\n\t\tid: 'theme-switch',\n\t\tlastResult: fetcher.data?.result,\n\t})\n\n\tconst optimisticMode = useOptimisticThemeMode()\n\tconst mode = optimisticMode ?? userPreference ?? 'system'\n\tconst nextMode =\n\t\tmode === 'system' ? 'light' : mode === 'light' ? 'dark' : 'system'\n\tconst modeLabel = {\n\t\tlight: (\n\t\t\t<Icon name=\"sun\">\n\t\t\t\t<span className=\"sr-only\">Light</span>\n\t\t\t</Icon>\n\t\t),\n\t\tdark: (\n\t\t\t<Icon name=\"moon\">\n\t\t\t\t<span className=\"sr-only\">Dark</span>\n\t\t\t</Icon>\n\t\t),\n\t\tsystem: (\n\t\t\t<Icon name=\"laptop\">\n\t\t\t\t<span className=\"sr-only\">System</span>\n\t\t\t</Icon>\n\t\t),\n\t}\n\n\treturn (\n\t\t<fetcher.Form\n\t\t\tmethod=\"POST\"\n\t\t\t{...getFormProps(form)}\n\t\t\taction=\"/resources/theme-switch\"\n\t\t>\n\t\t\t<ServerOnly>\n\t\t\t\t{() => (\n\t\t\t\t\t<input type=\"hidden\" name=\"redirectTo\" value={requestInfo.path} />\n\t\t\t\t)}\n\t\t\t</ServerOnly>\n\t\t\t<input type=\"hidden\" name=\"theme\" value={nextMode} />\n\t\t\t<div className=\"flex gap-2\">\n\t\t\t\t<button\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tclassName=\"flex h-8 w-8 cursor-pointer items-center justify-center\"\n\t\t\t\t>\n\t\t\t\t\t{modeLabel[mode]}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</fetcher.Form>\n\t)\n}\n\n/**\n * If the user's changing their theme mode preference, this will return the\n * value it's being changed to.\n */\nexport function useOptimisticThemeMode() {\n\tconst fetchers = useFetchers()\n\tconst themeFetcher = fetchers.find(\n\t\t(f) => f.formAction === '/resources/theme-switch',\n\t)\n\n\tif (themeFetcher && themeFetcher.formData) {\n\t\tconst submission = parseWithZod(themeFetcher.formData, {\n\t\t\tschema: ThemeFormSchema,\n\t\t})\n\n\t\tif (submission.status === 'success') {\n\t\t\treturn submission.value.theme\n\t\t}\n\t}\n}\n\n/**\n * @returns the user's theme preference, or the client hint theme if the user\n * has not set a preference.\n */\nexport function useTheme() {\n\tconst hints = useHints()\n\tconst requestInfo = useRequestInfo()\n\tconst optimisticMode = useOptimisticThemeMode()\n\tif (optimisticMode) {\n\t\treturn optimisticMode === 'system' ? hints.theme : optimisticMode\n\t}\n\treturn requestInfo.userPrefs.theme ?? hints.theme\n}\n","import \"/Users/zan/Zan/Remix-workspace/co-owners/app/styles/tailwind.css?transform-only\";export default \"__VITE_CSS_URL__2f55736572732f7a616e2f5a616e2f52656d69782d776f726b73706163652f636f2d6f776e6572732f6170702f7374796c65732f7461696c77696e642e6373733f7472616e73666f726d2d6f6e6c79__\"","import { createId as cuid } from '@paralleldrive/cuid2'\nimport { createCookieSessionStorage, redirect } from '@remix-run/node'\nimport { z } from 'zod'\nimport { combineHeaders } from './misc.tsx'\n\nexport const toastKey = 'toast'\n\nconst ToastSchema = z.object({\n\tdescription: z.string(),\n\tid: z.string().default(() => cuid()),\n\ttitle: z.string().optional(),\n\ttype: z.enum(['message', 'success', 'error']).default('message'),\n})\n\nexport type Toast = z.infer<typeof ToastSchema>\nexport type ToastInput = z.input<typeof ToastSchema>\n\nexport const toastSessionStorage = createCookieSessionStorage({\n\tcookie: {\n\t\tname: 'en_toast',\n\t\tsameSite: 'lax',\n\t\tpath: '/',\n\t\thttpOnly: true,\n\t\tsecrets: process.env.SESSION_SECRET.split(','),\n\t\tsecure: process.env.NODE_ENV === 'production',\n\t},\n})\n\nexport async function redirectWithToast(\n\turl: string,\n\ttoast: ToastInput,\n\tinit?: ResponseInit,\n) {\n\treturn redirect(url, {\n\t\t...init,\n\t\theaders: combineHeaders(init?.headers, await createToastHeaders(toast)),\n\t})\n}\n\nexport async function createToastHeaders(toastInput: ToastInput) {\n\tconst session = await toastSessionStorage.getSession()\n\tconst toast = ToastSchema.parse(toastInput)\n\tsession.flash(toastKey, toast)\n\tconst cookie = await toastSessionStorage.commitSession(session)\n\treturn new Headers({ 'set-cookie': cookie })\n}\n\nexport async function getToast(request: Request) {\n\tconst session = await toastSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst result = ToastSchema.safeParse(session.get(toastKey))\n\tconst toast = result.success ? result.data : null\n\treturn {\n\t\ttoast,\n\t\theaders: toast\n\t\t\t? new Headers({\n\t\t\t\t\t'set-cookie': await toastSessionStorage.destroySession(session),\n\t\t\t\t})\n\t\t\t: null,\n\t}\n}\n","import { createId as cuid } from '@paralleldrive/cuid2'\nimport { redirect } from '@remix-run/node'\nimport { OIDCStrategy } from 'web-oidc/remix'\nimport { connectionSessionStorage } from '../connections.server.ts'\nimport { redirectWithToast } from '../toast.server.ts'\nimport { type AuthProvider } from './provider.ts'\n\nconst shouldMock = process.env.GOOGLE_CLIENT_ID?.startsWith('MOCK_')\n\nexport class GoogleProvider implements AuthProvider {\n\tgetAuthStrategy() {\n\t\treturn new OIDCStrategy(\n\t\t\t{\n\t\t\t\tclient_id: process.env.GOOGLE_CLIENT_ID!,\n\t\t\t\tclient_secret: process.env.GOOGLE_CLIENT_SECRET,\n\t\t\t\tredirect_uri: 'http://localhost:3000/auth/google/callback',\n\t\t\t\tauthorizationParams: {\n\t\t\t\t\tscope: ['openid', 'email'],\n\t\t\t\t},\n\t\t\t\tissuer: 'https://accounts.google.com',\n\t\t\t\tresponse_type: 'code',\n\t\t\t},\n\t\t\tasync ({ profile }) => {\n\t\t\t\tif (!profile.email || !profile.email_verified) {\n\t\t\t\t\tthrow redirectWithToast('/login', {\n\t\t\t\t\t\ttitle: 'Cannot connect Google Account',\n\t\t\t\t\t\tdescription: 'Your Google Email is Unverified',\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\temail: profile.email,\n\t\t\t\t\tid: profile.sub,\n\t\t\t\t\tusername: profile.preferred_username,\n\t\t\t\t\tname: profile.given_name,\n\t\t\t\t\timageUrl: profile.picture,\n\t\t\t\t}\n\t\t\t},\n\t\t)\n\t}\n\tasync resolveConnectionData(providerId: string) {\n\t\t// You may consider making a fetch request to Google to get the user's\n\t\t// profile or something similar here.\n\t\treturn { displayName: providerId, link: null } as const\n\t}\n\t// This is used to mock the Google OAuth flow in development.\n\tasync handleMockAction(request: Request) {\n\t\tif (!shouldMock) return\n\t\tconst connectionSession = await connectionSessionStorage.getSession(\n\t\t\trequest.headers.get('cookie'),\n\t\t)\n\t\tconst state = cuid()\n\t\tconnectionSession.set('oidc:state', state)\n\t\tconst code = 'MOCK_CODE_GOOGLE_KODY'\n\t\tconst searchParams = new URLSearchParams({ code, state })\n\t\tthrow redirect(`/auth/google/callback?${searchParams}`, {\n\t\t\theaders: {\n\t\t\t\t'set-cookie':\n\t\t\t\t\tawait connectionSessionStorage.commitSession(connectionSession),\n\t\t\t},\n\t\t})\n\t}\n}","import { createCookieSessionStorage } from '@remix-run/node'\nimport { type ProviderName } from './connections.tsx'\nimport { GitHubProvider } from './providers/github.server.ts'\nimport { GoogleProvider } from './providers/google.server.ts'\nimport { type AuthProvider } from './providers/provider.ts'\nimport { type Timings } from './timing.server.ts'\n\nexport const connectionSessionStorage = createCookieSessionStorage({\n\tcookie: {\n\t\tname: 'en_connection',\n\t\tsameSite: 'lax', // CSRF protection is advised if changing to 'none'\n\t\tpath: '/',\n\t\thttpOnly: true,\n\t\tmaxAge: 60 * 10, // 10 minutes\n\t\tsecrets: process.env.SESSION_SECRET.split(','),\n\t\tsecure: process.env.NODE_ENV === 'production',\n\t},\n})\n\nexport const providers: Record<ProviderName, AuthProvider> = {\n\tgoogle: new GoogleProvider(),\n\t/*github: new GitHubProvider(),*/\n}\n\nexport function handleMockAction(providerName: ProviderName, request: Request) {\n\treturn providers[providerName].handleMockAction(request)\n}\n\nexport function resolveConnectionData(\n\tproviderName: ProviderName,\n\tproviderId: string,\n\toptions?: { timings?: Timings },\n) {\n\treturn providers[providerName].resolveConnectionData(providerId, options)\n}\n","import { createCookieSessionStorage } from '@remix-run/node'\n\n\nexport const authSessionStorage = createCookieSessionStorage({\n\tcookie: {\n\t\tname: 'en_session',\n\t\tsameSite: 'lax', // CSRF protection is advised if changing to 'none'\n\t\tpath: '/',\n\t\thttpOnly: true,\n\t\tsecrets: process.env.SESSION_SECRET.split(','),\n\t\tsecure: process.env.NODE_ENV === 'production',\n\t},\n})\n\n// we have to do this because every time you commit the session you overwrite it\n// so we store the expiration time in the cookie and reset it every time we commit\nconst originalCommitSession = authSessionStorage.commitSession\n\nObject.defineProperty(authSessionStorage, 'commitSession', {\n\tvalue: async function commitSession(\n\t\t...args: Parameters<typeof originalCommitSession>\n\t) {\n\t\tconst [session, options] = args\n\n\t\tif (options?.expires) {\n\t\t\tsession.set('expires', options.expires)\n\t\t}\n\t\tif (options?.maxAge) {\n\t\t\tsession.set('expires', new Date(Date.now() + options.maxAge * 1000))\n\t\t}\n\t\t\n\t\tconst expires = session.has('expires')\n\t\t\t? new Date(session.get('expires'))\n\t\t\t: undefined\n\t\tconst setCookieHeader = await originalCommitSession(session, {\n\t\t\t...options,\n\t\t\texpires,\n\t\t})\n\t\treturn setCookieHeader\n\t},\n})\n\n","import axios from \"axios\"\n\nexport const api = axios.create({\n  withCredentials: true,\n  //baseURL: \"http://localhost:8000/v1/\",\n  baseURL: \"https://prod.co-owners.ca:8000/v1/\",\n})\n\n\n// defining a custom error handler for all APIs\nconst errorHandler = (error) => {\n  const statusCode = error.response?.status\n\n  // logging only errors that are not 401\n  if (statusCode && statusCode !== 401) {\n    //console.log(error)\n  }\n\n  return Promise.reject(error)\n}\n\n// registering the custom error handler to the\n// \"api\" axios instance\napi.interceptors.response.use(undefined, (error) => {\n  return errorHandler(error)\n})","import { api } from \"./config/axiosConfig\";\n\n//Toast\nimport { toast as showToast, toast } from 'sonner'\n\nexport const userAPI = {\n\n  checkExistingEmail: async function (email) {\n    \n    const response = await api.request({\n      url: `/auth/checkExistingUser`,\n      method: \"POST\",\n      data: {\n        email: email,\n      },\n    })\n\n    // returning the product returned by the API\n    return response.data\n  },\n\n  login: async function (email, password) {\n\n    try {\n      const response = await api.request({\n        url: `/auth/login`,\n        method: \"POST\",\n        data: {\n          email: email,\n          password: password,\n        },\n      })\n\n      // returning the product returned by the API\n      return response;\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n    \n        showToast.error(\"Login Failed\", {\n          description: 'Invalid email or password',\n        })        \n      }\n    }\n  },\n\n  register: async function (username, name, email, password) {\n\n    const response = await api.request({\n      url: `/auth/register`,\n      method: \"POST\",\n      data: {\n        username: username,\n        name: name,\n        email: email,\n        password: password\n      },\n    })\n    \n    // returning the product returned by the API\n    return response\n  },\n\n  signUpWithGoogle: async function (email, username, name, providerId, providerName, imageUrl) {\n\n    const response = await api.request({\n      url: `/auth/signUpWithGoogle`,\n      method: \"POST\",\n      data: {\n        email,\n        username,\n        name,\n        providerId,\n        providerName,\n        imageUrl\n      },\n    })\n\n    // returning the product returned by the API\n    return response\n  },\n\n  // Persistent Login - checking user token\n  checklogintoken: async function (token) {\n\n    try {\n      const response = await api.request({\n        url: `/auth/checklogintoken`,\n        method: \"POST\",\n        data: {\n          token: token,\n        },\n      })\n      \n      // returning the product returned by the API\n      return response.data;\n    } catch (error) {\n      \n    }\n  },\n\n  // User Login - via Google\n  checkGoogleLogin: async function (email) {\n\n    const response = await api.request({\n      url: `/auth/check-login`,\n      method: \"POST\",\n      data: {\n        email: email,\n      },\n    })\n    \n    // returning the product returned by the API\n    return response\n  },\n\n  //Send Email Verification\n  sendEmailVerification: async function (email, code, codeURL) {\n\n    const response = await api.request({\n      url: `/users/sendVerificationEmail`,\n      method: \"POST\",\n      data: {\n        email: email,\n        code: code,\n        codeURL: codeURL\n      },\n    })\n\n    // returning the product returned by the API\n    return response\n  },\n\n  //Verify Email Code\n  verifyEmailCode: async function (email, code) {\n\n    try {\n      const response = await api.request({\n        url: `/users/confirmVerificationCode`,\n        method: \"POST\",\n        data: {\n          email: email,\n          code: code\n        },\n      })\n\n      // returning the product returned by the API\n      return response\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n      \n        showToast.error(\"Verification Failed\", {\n          description: 'Invalid code',\n        })     \n      }\n    }\n  },\n\n  resetPassword: async function (token, password) {\n\n    const response = await api.request({\n      url: `/auth/reset-password`,\n      method: \"POST\",\n      params: {\n        token: token,\n      },\n      data: {\n        password: password,\n      },\n    })\n\n    // returning the product returned by the API\n    return response\n  },\n\n  forgotPassword: async function (email) {\n\n    const response = await api.request({\n      url: `/auth/forgot-password`,\n      method: \"POST\",\n      data: {\n        email: email,\n      },\n    })\n\n    // returning the product returned by the API\n    return response\n  },\n\n  updateProfile: async function (id, name, username, email) {\n\n    const response = await api.request({\n      url: `/auth/update-profile`,\n      method: \"POST\",\n      data: {\n        userId: id,\n        name: name,\n        username: username,\n        email: email,\n      },\n    })\n\n    // returning the product returned by the API\n    return response\n  },\n\n  updatePassword: async function (username, password) {\n\n    const response = await api.request({\n      url: `/auth/update-password`,\n      method: \"POST\",\n      data: {\n        username: username,\n        password: password,\n      },\n    })\n\n    // returning the product returned by the API\n    return response\n  },\n\n  getUserById: async function (id) {\n\n    const response = await api.request({\n      url: `/auth/getUserById`,\n      method: \"POST\",\n      data: {\n        id: id,\n      },\n    })\n\n    // returning the product returned by the API\n    return response\n  },\n\n  getUserOwnedStocks: async function (sessionToken, businessId) {\n\n    const response = await api.request({\n      url: `/business/getUserOwnedStocks`,\n      method: \"POST\",\n      data: {\n        sessionToken: sessionToken,\n        businessId: businessId,\n      },\n    })\n\n    // returning the product returned by the API\n    return response.data\n  },\n\n  /**\n   * Top Panel UI for User Dashboard\n   * @param {*} sessionToken \n   * @returns \n   */\n  getUserBalanceStocks: async function (sessionToken) {\n\n    const response = await api.request({\n      url: `/business/getUserBalancePorfolio`,\n      method: \"POST\",\n      data: {\n        sessionToken: sessionToken,\n      },\n    })\n\n    // returning the product returned by the API\n    return response.data\n  },\n\n  /**\n   * Middle Panel UI for Dashboard\n   * @param {} sessionToken \n   * @returns \n   */\n  getUserProfitValuation: async function (sessionToken) {\n\n    const response = await api.request({\n      url: `/business/getUserProfitValuation`,\n      method: \"POST\",\n      data: {\n        sessionToken: sessionToken,\n      },\n    })\n    \n    // returning the product returned by the API\n    return response.data\n  },\n\n  /**\n   * Bottom Panel UI for Dashboard\n   */\n  getUserWatchList: async function (sessionToken) {\n\n    try {\n      const response = await api.request({\n        url: `/users/getUserWatchlist`,\n        method: \"POST\",\n        data: {\n          sessionToken: sessionToken,\n        },\n      });\n  \n      // returning the product returned by the API\n      return response.data;\n    } catch (error) {\n      \n      showToast.error(\"Authorization Error\", {\n        description: error.response.data.message,\n      })     \n    }\n  },\n\n};","import { type Connection, type Password, type User } from '@prisma/client'\nimport { redirect } from '@remix-run/node'\nimport bcrypt from 'bcryptjs'\nimport { Authenticator } from 'remix-auth'\nimport { safeRedirect } from 'remix-utils/safe-redirect'\nimport { connectionSessionStorage, providers } from './connections.server.ts'\nimport { prisma } from './db.server.ts'\nimport { combineHeaders, downloadFile } from './misc.tsx'\nimport { type ProviderUser } from './providers/provider.ts'\nimport { authSessionStorage } from './session.server.ts' \nimport { createToastHeaders } from '#app/utils/toast.server.ts'\n\n//API\n// @ts-ignore\nimport { userAPI } from '../api/userAPI'\n\nexport const SESSION_EXPIRATION_TIME = 1000 * 60 * 60 * 24 * 30\nexport const getSessionExpirationDate = () =>\n\tnew Date(Date.now() + SESSION_EXPIRATION_TIME)\n\nexport const sessionKey = 'sessionId'\n\nexport const authenticator = new Authenticator<ProviderUser>(\n\tconnectionSessionStorage,\n)\n\nfor (const [providerName, provider] of Object.entries(providers)) {\n\tauthenticator.use(provider.getAuthStrategy(), providerName)\n}\n\nexport async function getUserId(request: Request) {\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst sessionId = authSession.get(sessionKey);\n\n\tif (!sessionId) return null\n\n\tconst user = await userAPI.checklogintoken(sessionId);\n\n\treturn user;\n}\n\nexport async function requireUserId(\n\trequest: Request,\n\t{ redirectTo }: { redirectTo?: string | null } = {},\n) {\n\tconst user = await getUserId(request)\n\n\tif (!user) {\n\t\tconst requestUrl = new URL(request.url)\n\t\tredirectTo =\n\t\t\tredirectTo === null\n\t\t\t\t? null\n\t\t\t\t: (redirectTo ?? `${requestUrl.pathname}${requestUrl.search}`)\n\t\tconst loginParams = redirectTo ? new URLSearchParams({ redirectTo }) : null\n\t\tconst loginRedirect = ['/login', loginParams?.toString()]\n\t\t\t.filter(Boolean)\n\t\t\t.join('?')\n\t\tthrow redirect(loginRedirect)\n\t}\n\treturn user\n}\n\nexport async function requireAnonymous(request: Request) {\n\tconst user = await getUserId(request)\n\tif (user) {\n\t\tthrow redirect('/')\n\t}\n}\n\nexport async function login({\n\tusername,\n\tpassword,\n}: {\n\tusername: User['username']\n\tpassword: string\n}) {\n\t\n\tconst user = await userAPI.login(username, password);\n\n\tif (!user) return null\n\treturn user.data;\n}\n\nexport async function resetUserPassword({\n\tusername,\n\tpassword,\n}: {\n\tusername: User['username']\n\tpassword: string\n}) {\n\t\n\treturn userAPI.updatePassword( username, password );\n}\n\nexport async function signup({\n\temail,\n\tusername,\n\tpassword,\n\tname,\n}: {\n\temail: User['email']\n\tusername: User['username']\n\tname: User['name']\n\tpassword: string\n}) {\n\t//const hashedPassword = await getPasswordHash(password)\n\n\tconst data = userAPI.register(username, name, email, password);\n\n\treturn data\n}\n\nexport async function signupWithConnection({\n\temail,\n\tusername,\n\tname,\n\tproviderId,\n\tproviderName,\n\timageUrl,\n}: {\n\temail: User['email']\n\tusername: User['username']\n\tname: User['name']\n\tproviderId: Connection['providerId']\n\tproviderName: Connection['providerName']\n\timageUrl?: string\n}) {\n \n\tconst data = userAPI.signUpWithGoogle(email, username, name, providerId, providerName, imageUrl);\n\n\treturn data\n}\n\nexport async function logout(\n\t{\n\t\trequest,\n\t\tredirectTo = '/',\n\t}: {\n\t\trequest: Request\n\t\tredirectTo?: string\n\t},\n\tresponseInit?: ResponseInit,\n) {\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst sessionId = authSession.get(sessionKey)\n\t\n\treturn redirect(safeRedirect(redirectTo), {\n\t\t...responseInit,\n\t\theaders: combineHeaders(\n\t\t\t{ 'set-cookie': await authSessionStorage.destroySession(authSession) },\n\t\t\tresponseInit?.headers,\n\t\t),\n\t});\n}\n\nexport async function getPasswordHash(password: string) {\n\tconst hash = await bcrypt.hash(password, 10)\n\treturn hash\n}\n\n","import { Honeypot, SpamError } from 'remix-utils/honeypot/server'\n\nexport const honeypot = new Honeypot({\n\tvalidFromFieldName: process.env.NODE_ENV === 'test' ? null : undefined,\n\tencryptionSeed: process.env.HONEYPOT_SECRET,\n})\n\nexport function checkHoneypot(formData: FormData) {\n\ttry {\n\t\thoneypot.check(formData)\n\t} catch (error) {\n\t\tif (error instanceof SpamError) {\n\t\t\tthrow new Response('Form not submitted properly', { status: 400 })\n\t\t}\n\t\tthrow error\n\t}\n}\n","import { type SerializeFrom } from '@remix-run/node'\nimport { useRouteLoaderData } from '@remix-run/react'\nimport { type loader as rootLoader } from '#app/root.tsx'\n\nfunction isUser(user: any): user is SerializeFrom<typeof rootLoader>['user'] {\n\n\treturn user && typeof user === 'object' && typeof user.id === 'string'\n}\n\nexport function useOptionalUser() {\n\tconst data = useRouteLoaderData<typeof rootLoader>('root')\n\n\tif (!data || !isUser(data.user)) {\n\t\treturn undefined\n\t}\n\n\treturn data.user\n}\n\nexport function useUser() {\n\tconst maybeUser = useOptionalUser()\n\tif (!maybeUser) {\n\t\tthrow new Error(\n\t\t\t'No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.',\n\t\t)\n\t}\n\treturn maybeUser\n}\n\ntype Action = 'create' | 'read' | 'update' | 'delete'\ntype Entity = 'user' | 'note'\ntype Access = 'own' | 'any' | 'own,any' | 'any,own'\nexport type PermissionString =\n\t| `${Action}:${Entity}`\n\t| `${Action}:${Entity}:${Access}`\n\nexport function parsePermissionString(permissionString: PermissionString) {\n\tconst [action, entity, access] = permissionString.split(':') as [\n\t\tAction,\n\t\tEntity,\n\t\tAccess | undefined,\n\t]\n\treturn {\n\t\taction,\n\t\tentity,\n\t\taccess: access ? (access.split(',') as Array<Access>) : undefined,\n\t}\n}\n\nexport function userHasPermission(\n\tuser: Pick<ReturnType<typeof useUser>, 'roles'> | null | undefined,\n\tpermission: PermissionString,\n) {\n\tif (!user) return false\n\tconst { action, entity, access } = parsePermissionString(permission)\n\treturn user.roles.some((role: { permissions: Array<{ entity: Entity, action: Action, access: Access }> }) =>\n\t\trole.permissions.some(\n\t\t\t(permission) =>\n\t\t\t\tpermission.entity === entity &&\n\t\t\t\tpermission.action === action &&\n\t\t\t\t(!access || access.includes(permission.access)),\n\t\t),\n\t)\n}\n\nexport function userHasRole(\n\tuser: Pick<ReturnType<typeof useUser>, 'roles'> | null,\n\trole: string,\n) {\n\tif (!user) return false\n\treturn user.roles.some((r: { name: string }) => r.name === role)\n}\n","import {\n\tjson,\n\ttype LoaderFunctionArgs,\n\ttype HeadersFunction,\n\ttype LinksFunction,\n\ttype MetaFunction,\n} from '@remix-run/node'\nimport {\n\tForm,\n\tLink,\n\tLinks,\n\tMeta,\n\tOutlet,\n\tScripts,\n\tScrollRestoration,\n\tuseLoaderData,\n\tuseMatches,\n\tuseSubmit,\n} from '@remix-run/react'\nimport { withSentry } from '@sentry/remix'\nimport { useRef } from 'react'\nimport { HoneypotProvider } from 'remix-utils/honeypot/react'\nimport appleTouchIconAssetUrl from './assets/favicons/apple-touch-icon.png'\nimport faviconAssetUrl from './assets/favicons/favicon.svg'\nimport { GeneralErrorBoundary } from './components/error-boundary.tsx'\nimport { EpicProgress } from './components/progress-bar.tsx'\nimport { SearchBar } from './components/search-bar.tsx'\nimport { useToast } from './components/toaster.tsx'\nimport { Button } from './components/ui/button.tsx'\nimport {\n\tDropdownMenu,\n\tDropdownMenuContent,\n\tDropdownMenuItem,\n\tDropdownMenuPortal,\n\tDropdownMenuTrigger,\n} from './components/ui/dropdown-menu.tsx'\nimport { Icon, href as iconsHref } from './components/ui/icon.tsx'\nimport { EpicToaster } from './components/ui/sonner.tsx'\nimport { ThemeSwitch, useTheme } from './routes/resources+/theme-switch.tsx'\nimport tailwindStyleSheetUrl from './styles/tailwind.css?url'\nimport { getUserId, logout } from './utils/auth.server.ts'\nimport { ClientHintCheck, getHints } from './utils/client-hints.tsx'\nimport { getEnv } from './utils/env.server.ts'\nimport { honeypot } from './utils/honeypot.server.ts'\nimport { combineHeaders, getDomainUrl, getUserImgSrc } from './utils/misc.tsx'\nimport { useNonce } from './utils/nonce-provider.ts'\nimport { type Theme, getTheme } from './utils/theme.server.ts'\nimport { makeTimings, time } from './utils/timing.server.ts'\nimport { getToast } from './utils/toast.server.ts'\nimport { useOptionalUser, useUser } from './utils/user.ts'\nimport { useNavigate, useNavigationType, NavigationType } from 'react-router-dom'\nimport { MantineProvider } from '@mantine/core';\n\nexport const links: LinksFunction = () => {\n\treturn [\n\t\t// Preload svg sprite as a resource to avoid render blocking\n\t\t{ rel: 'preload', href: iconsHref, as: 'image' },\n\t\t{\n\t\t\trel: 'icon',\n\t\t\thref: '/favicon.ico',\n\t\t\tsizes: '48x48',\n\t\t},\n\t\t{ rel: 'icon', type: 'image/svg+xml', href: faviconAssetUrl },\n\t\t{ rel: 'apple-touch-icon', href: appleTouchIconAssetUrl },\n\t\t{\n\t\t\trel: 'manifest',\n\t\t\thref: '/site.webmanifest',\n\t\t\tcrossOrigin: 'use-credentials',\n\t\t} as const, // necessary to make typescript happy\n\t\t{ rel: 'stylesheet', href: tailwindStyleSheetUrl },\n\t].filter(Boolean)\n}\n\nexport const meta: MetaFunction<typeof loader> = ({ data }) => {\n\treturn [\n\t\t{ title: data ? 'Co Owners' : 'Error | Co Owners' },\n\t\t{ name: 'description', content: `CommUnity Owners Platform` },\n\t]\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst timings = makeTimings('root loader')\n\n\tconst user = await time(() => getUserId(request), {\n\t\ttimings,\n\t\ttype: 'getUserId',\n\t\tdesc: 'getUserId in root',\n\t})\n\n\tif (!user) {\n\t\t//Remove cookie and redirect to login page\n\t\tawait logout({ request, redirectTo: '/' })\n\t}\n\tconst { toast, headers: toastHeaders } = await getToast(request)\n\tconst honeyProps = honeypot.getInputProps()\n\n\treturn json(\n\t\t{\n\t\t\tuser,\n\t\t\trequestInfo: {\n\t\t\t\thints: getHints(request),\n\t\t\t\torigin: getDomainUrl(request),\n\t\t\t\tpath: new URL(request.url).pathname,\n\t\t\t\tuserPrefs: {\n\t\t\t\t\ttheme: getTheme(request),\n\t\t\t\t},\n\t\t\t},\n\t\t\tENV: getEnv(),\n\t\t\ttoast,\n\t\t\thoneyProps,\n\t\t},\n\t\t{\n\t\t\theaders: combineHeaders(\n\t\t\t\t{ 'Server-Timing': timings.toString() },\n\t\t\t\ttoastHeaders,\n\t\t\t),\n\t\t},\n\t)\n}\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n\tconst headers = {\n\t\t'Server-Timing': loaderHeaders.get('Server-Timing') ?? '',\n\t}\n\treturn headers\n}\n\nfunction Document({\n\tchildren,\n\tnonce,\n\ttheme = 'light',\n\tenv = {},\n\tallowIndexing = true,\n}: {\n\tchildren: React.ReactNode\n\tnonce: string\n\ttheme?: Theme\n\tenv?: Record<string, string>\n\tallowIndexing?: boolean\n}) {\n\treturn (\n\t\t<html lang=\"en\" className={`${theme} h-full overflow-x-hidden`}>\n\t\t\t<head>\n\t\t\t\t<ClientHintCheck nonce={nonce} />\n\t\t\t\t<Meta />\n\t\t\t\t<meta charSet=\"utf-8\" />\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n\t\t\t\t{allowIndexing ? null : (\n\t\t\t\t\t<meta name=\"robots\" content=\"noindex, nofollow\" />\n\t\t\t\t)}\n\t\t\t\t<Links />\n\t\t\t</head>\n\t\t\t<body className=\"bg-background text-foreground\">\n\t\t\t\t{children}\n\t\t\t\t<script\n\t\t\t\t\tnonce={nonce}\n\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t__html: `window.ENV = ${JSON.stringify(env)}`,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<ScrollRestoration nonce={nonce} />\n\t\t\t\t<Scripts nonce={nonce} />\n\t\t\t</body>\n\t\t</html>\n\t)\n}\n\nfunction App() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst nonce = useNonce()\n\tconst user = useOptionalUser()\n\tconst theme = useTheme()\n\tconst matches = useMatches()\n\tconst isOnSearchPage = matches.find((m) => m.id === 'routes/users+/index')\n\tconst searchBar = isOnSearchPage ? null : <SearchBar status=\"idle\" />\n\tconst allowIndexing = data.ENV.ALLOW_INDEXING !== 'false'\n\tuseToast(data.toast)\n\tconst navigate = useNavigate()\n    const navigationType = useNavigationType()\n\n\treturn (\n\t\t<Document\n\t\t\tnonce={nonce}\n\t\t\ttheme={theme}\n\t\t\tallowIndexing={allowIndexing}\n\t\t\tenv={data.ENV}\n\t\t>\n\t\t\t{/*//@ts-ignore*/}\n\t\t\t<MantineProvider theme={{ withGlobalStyles: true, withNormalizeCSS: true }}>\n\n\t\t\t<div className=\"flex h-screen flex-col justify-between\">\n\t\t\t\t<header className=\"container py-6\">\n\t\t\t\t\t<nav className=\"flex flex-wrap items-center justify-between gap-4 sm:flex-nowrap md:gap-8\">\n\t\t\t\t\t\t<Logo navigationType={navigationType} navigate={navigate} type=\"header\"/>\n\t\t\t\t\t\t{/*<div className=\"ml-auto hidden max-w-sm flex-1 sm:block\">\n\t\t\t\t\t\t\t{searchBar}\n\t\t\t\t\t\t</div>*/}\n\t\t\t\t\t\t<div className=\"flex items-center gap-10\">\n\t\t\t\t\t\t\t{user ? (\n\t\t\t\t\t\t\t\t<UserDropdown />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Button asChild variant=\"default\" size=\"lg\">\n\t\t\t\t\t\t\t\t\t<Link to=\"/login\">Log In</Link>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/*<div className=\"block w-full sm:hidden\">{searchBar}</div>*/}\n\t\t\t\t\t</nav>\n\t\t\t\t</header>\n\n\t\t\t\t<div className=\"flex-1\">\n\t\t\t\t\t<Outlet />\n\t\t\t\t</div>\n\n\t\t\t\t{/* Footer */}\n\t\t\t\t<div className=\"container pb-5 mt-5 w-full\">\n\t\t\t\t\t<Logo navigationType={navigationType} navigate={navigate} type=\"footer\"/>\n\t\t\t\t\t{/*<ThemeSwitch userPreference={data.requestInfo.userPrefs.theme} />*/}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<EpicToaster closeButton position=\"top-center\" theme={theme} />\n\t\t\t<EpicProgress />\n\t\t</MantineProvider>\n\t</Document>\n\t)\n}\n\nfunction Logo({ navigationType, navigate, type}: { navigationType: ReturnType<typeof useNavigationType>, navigate?: ReturnType<typeof useNavigate>, type?: string }) {\n\treturn (\n\t\t<div className=\"flex items-center\">\n\t\t\t<Link to=\"/\" className=\"group grid leading-snug\">\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"/logo.png\"\n\t\t\t\t\talt=\"Co-Owners\"\n\t\t\t\t\tclassName=\"h-10 w-auto group-hover:scale-150\"\n\t\t\t\t/>\n\t\t\t</Link>\n\t\t\t\t{type === \"header\" && navigationType !== NavigationType.Pop && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => navigate?.(-1)}\n\t\t\t\t\t\tclassName=\"ml-4 bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-5 w-5 mr-2\"\n                        viewBox=\"0 0 20 20\"\n                        fill=\"currentColor\"\n                    >\n                        <path\n                            fillRule=\"evenodd\"\n                            d=\"M10 18a1 1 0 01-.707-.293l-7-7a1 1 0 010-1.414l7-7a1 1 0 011.414 1.414L4.414 10H18a1 1 0 110 2H4.414l6.293 6.293A1 1 0 0110 18z\"\n                            clipRule=\"evenodd\"\n                        />\n                    </svg>\n\t\t\t\t\t\tGo Back\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t\t{type === \"footer\" ?\n\t\t\t\t\t(\n\t\t\t\t\t\t<div className=\"flex items-center justify-between gap-4 w-full\">\n\t\t\t\t\t\t\t<p className=\"flex justify-center items-center text-sm w-1/4\">\n\t\t\t\t\t\t\t\t&copy; {new Date().getFullYear()} Co-Owners\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<div className=\"flex gap-4 justify-center w-full\">\n\t\t\t\t\t\t\t\t<a href=\"/privacy\" className=\"text-sm text-blue-500 hover:underline\">\n\t\t\t\t\t\t\t\t\tPrivacy Policy\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<a href=\"/tos\" className=\"text-sm text-blue-500 hover:underline\">\n\t\t\t\t\t\t\t\t\tTerms of Service\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<a href=\"/about\" className=\"text-sm text-blue-500 hover:underline\">\n\t\t\t\t\t\t\t\t\tContact Us\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"flex items-center gap-4 ml-auto\">\n\t\t\t\t\t\t\t\t<div className=\"flex gap-2\">\n\t\t\t\t\t\t\t\t\t<a href=\"https://facebook.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-500 hover:underline\">\n\t\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t\t\t\t<path d=\"M22.675 0h-21.35c-.733 0-1.325.592-1.325 1.325v21.351c0 .733.592 1.324 1.325 1.324h11.495v-9.294h-3.125v-3.622h3.125v-2.671c0-3.1 1.893-4.788 4.659-4.788 1.325 0 2.463.099 2.795.143v3.24l-1.918.001c-1.504 0-1.794.715-1.794 1.763v2.312h3.587l-.467 3.622h-3.12v9.294h6.116c.733 0 1.325-.591 1.325-1.324v-21.35c0-.733-.592-1.325-1.325-1.325z\"/>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t<a href=\"https://twitter.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-500 hover:underline\">\n\t\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t\t\t\t<path d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.723-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-2.717 0-4.92 2.203-4.92 4.917 0 .385.043.76.127 1.122-4.087-.205-7.713-2.164-10.141-5.144-.423.725-.666 1.562-.666 2.457 0 1.694.863 3.188 2.175 4.065-.802-.026-1.555-.246-2.213-.614v.062c0 2.366 1.684 4.342 3.918 4.788-.41.111-.843.171-1.287.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.6 3.417-1.68 1.318-3.809 2.104-6.115 2.104-.398 0-.79-.023-1.175-.068 2.179 1.397 4.768 2.212 7.548 2.212 9.057 0 14.01-7.506 14.01-14.01 0-.213-.005-.426-.014-.637.961-.694 1.797-1.562 2.457-2.549z\"/>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t<a href=\"https://linkedin.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-500 hover:underline\">\n\t\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n\t\t\t\t\t\t\t\t\t\t<path d=\"M22.23 0h-20.46c-.974 0-1.77.796-1.77 1.77v20.459c0 .974.796 1.771 1.77 1.771h20.459c.974 0 1.771-.797 1.771-1.771v-20.459c0-.974-.797-1.77-1.771-1.77zm-15.539 20.452h-3.077v-11.999h3.077v11.999zm-1.538-13.635c-.987 0-1.787-.8-1.787-1.787s.8-1.787 1.787-1.787 1.787.8 1.787 1.787-.8 1.787-1.787 1.787zm13.539 13.635h-3.077v-5.999c0-1.428-.027-3.267-1.992-3.267-1.993 0-2.298 1.558-2.298 3.167v6.099h-3.077v-11.999h2.954v1.637h.042c.411-.776 1.416-1.592 2.916-1.592 3.118 0 3.693 2.053 3.693 4.724v7.23z\"/>\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) \n\t\t\t\t\t: null\t\t\t\t\n\t\t\t\t}\n\t\t</div>\n\t)\n}\n\nfunction AppWithProviders() {\n\tconst data = useLoaderData<typeof loader>()\n\treturn (\n\t\t<HoneypotProvider {...data.honeyProps}>\n\t\t\t<App />\n\t\t</HoneypotProvider>\n\t)\n}\n\nexport default withSentry(AppWithProviders)\n\nfunction UserDropdown() {\n\tconst user = useUser()\n\tconst submit = useSubmit()\n\tconst formRef = useRef<HTMLFormElement>(null)\n\treturn (\n\t\t<DropdownMenu>\n\t\t\t<DropdownMenuTrigger asChild>\n\t\t\t\t<Button asChild variant=\"secondary\">\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={`/user`}\n\t\t\t\t\t\t// this is for progressive enhancement\n\t\t\t\t\t\tonClick={(e) => e.preventDefault()}\n\t\t\t\t\t\tclassName=\"flex items-center gap-2\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName=\"h-8 w-8 rounded-full object-cover\"\n\t\t\t\t\t\t\talt={user.name ?? user.username}\n\t\t\t\t\t\t\tsrc={getUserImgSrc(user.imageUrl)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className=\"text-body-sm font-bold\">\n\t\t\t\t\t\t\t{user.name ?? user.username}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Link>\n\t\t\t\t</Button>\n\t\t\t</DropdownMenuTrigger>\n\t\t\t<DropdownMenuPortal>\n\t\t\t\t<DropdownMenuContent sideOffset={8} align=\"start\">\n\t\t\t\t\t<DropdownMenuItem asChild>\n\t\t\t\t\t\t<Link prefetch=\"intent\" to={`/user`}>\n\t\t\t\t\t\t\t<Icon className=\"text-body-md\" name=\"avatar\">\n\t\t\t\t\t\t\t\tProfile\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t<DropdownMenuItem asChild>\n\t\t\t\t\t\t<Link prefetch=\"intent\" to={`/dashboard`}>\n\t\t\t\t\t\t\t<Icon className=\"text-body-md\" name=\"envelope-closed\">\n\t\t\t\t\t\t\t\tDashboard\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t<DropdownMenuItem\n\t\t\t\t\t\tasChild\n\t\t\t\t\t\t// this prevents the menu from closing before the form submission is completed\n\t\t\t\t\t\tonSelect={(event) => {\n\t\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\t\tsubmit(formRef.current)\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Form action=\"/logout\" method=\"POST\" ref={formRef}>\n\t\t\t\t\t\t\t<Icon className=\"text-body-md\" name=\"exit\">\n\t\t\t\t\t\t\t\t<button type=\"submit\">Logout</button>\n\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t</DropdownMenuContent>\n\t\t\t</DropdownMenuPortal>\n\t\t</DropdownMenu>\n\t)\n}\n\nexport function ErrorBoundary() {\n\t// the nonce doesn't rely on the loader so we can access that\n\tconst nonce = useNonce()\n\n\t// NOTE: you cannot use useLoaderData in an ErrorBoundary because the loader\n\t// likely failed to run so we have to do the best we can.\n\t// We could probably do better than this (it's possible the loader did run).\n\t// This would require a change in Remix.\n\n\t// Just make sure your root route never errors out and you'll always be able\n\t// to give the user a better UX.\n\n\treturn (\n\t\t<Document nonce={nonce}>\n\t\t\t<GeneralErrorBoundary />\n\t\t</Document>\n\t)\n}\n","// This is called a \"splat route\" and as it's in the root `/app/routes/`\n// directory, it's a catchall. If no other routes match, this one will and we\n// can know that the user is hitting a URL that doesn't exist. By throwing a\n// 404 from the loader, we can force the error boundary to render which will\n// ensure the user gets the right status code and we can display a nicer error\n// message for them than the Remix and/or browser default.\n\nimport { Link, useLocation } from '@remix-run/react'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\n\nexport async function loader() {\n\tthrow new Response('Not found', { status: 404 })\n}\n\nexport default function NotFound() {\n\t// due to the loader, this component will never be rendered, but we'll return\n\t// the error boundary just in case.\n\treturn <ErrorBoundary />\n}\n\nexport function ErrorBoundary() {\n\tconst location = useLocation()\n\treturn (\n\t\t<GeneralErrorBoundary\n\t\t\tstatusHandlers={{\n\t\t\t\t404: () => (\n\t\t\t\t\t<div className=\"flex flex-col gap-6\">\n\t\t\t\t\t\t<div className=\"flex flex-col gap-3\">\n\t\t\t\t\t\t\t<h1>We can't find this page:</h1>\n\t\t\t\t\t\t\t<pre className=\"whitespace-pre-wrap break-all text-body-lg\">\n\t\t\t\t\t\t\t\t{location.pathname}\n\t\t\t\t\t\t\t</pre>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Link to=\"/\" className=\"text-body-md underline\">\n\t\t\t\t\t\t\t<Icon name=\"arrow-left\">Back to home</Icon>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t)\n}\n","import { Form } from '@remix-run/react'\nimport { z } from 'zod'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { useIsPending } from './misc.tsx'\n\nexport const GITHUB_PROVIDER_NAME = 'github'\nexport const GOOGLE_PROVIDER_NAME = 'google'\n// to add another provider, set their name here and add it to the providerNames below\n\nexport const providerNames = [\n\tGOOGLE_PROVIDER_NAME,\n\t/*GITHUB_PROVIDER_NAME,*/\n] as const\n\nexport const ProviderNameSchema = z.enum(providerNames)\nexport type ProviderName = z.infer<typeof ProviderNameSchema>\n\nexport const providerLabels: Record<ProviderName, string> = {\n\t[GOOGLE_PROVIDER_NAME]: 'Google',\n\t/*[GITHUB_PROVIDER_NAME]: 'GitHub',*/\n} as const\n\nexport const providerIcons: Record<ProviderName, React.ReactNode> = {\n\t[GOOGLE_PROVIDER_NAME]: <Icon name=\"google-logo\" />,\n\t/*[GITHUB_PROVIDER_NAME]: <Icon name=\"github-logo\" />,*/\n} as const\n\nexport function ProviderConnectionForm({\n\tredirectTo,\n\ttype,\n\tproviderName,\n}: {\n\tredirectTo?: string | null\n\ttype: 'Connect' | 'Login' | 'Signup'\n\tproviderName: ProviderName\n}) {\n\tconst label = providerLabels[providerName]\n\tconst formAction = `/auth/${providerName}`\n\tconst isPending = useIsPending({ formAction })\n\treturn (\n\t\t<Form\n\t\t\tclassName=\"flex items-center justify-center gap-2\"\n\t\t\taction={formAction}\n\t\t\tmethod=\"POST\"\n\t\t>\n\t\t\t{redirectTo ? (\n\t\t\t\t<input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n\t\t\t) : null}\n\t\t\t<StatusButton\n\t\t\t\ttype=\"submit\"\n\t\t\t\tclassName=\"w-full\"\n\t\t\t\tstatus={isPending ? 'pending' : 'idle'}\n\t\t\t>\n\t\t\t\t<span className=\"inline-flex items-center gap-1.5\">\n\t\t\t\t\t{providerIcons[providerName]}\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{type} with {label}\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</StatusButton>\n\t\t</Form>\n\t)\n}\n","import * as cookie from 'cookie'\n\nconst key = 'redirectTo'\nexport const destroyRedirectToHeader = cookie.serialize(key, '', { maxAge: -1 })\n\nexport function getRedirectCookieHeader(redirectTo?: string) {\n\treturn redirectTo && redirectTo !== '/'\n\t\t? cookie.serialize(key, redirectTo, { maxAge: 60 * 10 })\n\t\t: null\n}\n\nexport function getRedirectCookieValue(request: Request) {\n\tconst rawCookie = request.headers.get('cookie')\n\tconst parsedCookies = rawCookie ? cookie.parse(rawCookie) : {}\n\tconst redirectTo = parsedCookies[key]\n\treturn redirectTo || null\n}\n","import { redirect, type ActionFunctionArgs } from '@remix-run/node'\nimport { authenticator } from '#app/utils/auth.server.ts'\nimport { handleMockAction } from '#app/utils/connections.server.ts'\nimport { ProviderNameSchema } from '#app/utils/connections.tsx'\nimport { getReferrerRoute } from '#app/utils/misc.tsx'\nimport { getRedirectCookieHeader } from '#app/utils/redirect-cookie.server.ts'\n\nexport async function loader() {\n\treturn redirect('/login')\n}\n\nexport async function action({ request, params }: ActionFunctionArgs) {\n\tconst providerName = ProviderNameSchema.parse(params.provider)\n\n\ttry {\n\t\tawait handleMockAction(providerName, request)\n\t\treturn await authenticator.authenticate(providerName, request)\n\t} catch (error: unknown) {\n\t\tif (error instanceof Response) {\n\t\t\tconst formData = await request.formData()\n\t\t\tconst rawRedirectTo = formData.get('redirectTo')\n\t\t\tconst redirectTo =\n\t\t\t\ttypeof rawRedirectTo === 'string'\n\t\t\t\t\t? rawRedirectTo\n\t\t\t\t\t: getReferrerRoute(request)\n\t\t\tconst redirectToCookie = getRedirectCookieHeader(redirectTo)\n\t\t\tif (redirectToCookie) {\n\t\t\t\terror.headers.append('set-cookie', redirectToCookie)\n\t\t\t}\n\t\t}\n\t\tthrow error\n\t}\n}\n","import { type Strategy } from 'remix-auth'\nimport { type Timings } from '../timing.server.ts'\n\n// Define a user type for cleaner typing\nexport type ProviderUser = {\n\tid: string\n\temail: string\n\tusername?: string\n\tname?: string\n\timageUrl?: string\n}\n\nexport interface AuthProvider {\n\tgetAuthStrategy(): Strategy<ProviderUser, any>\n\thandleMockAction(request: Request): Promise<void>\n\tresolveConnectionData(\n\t\tproviderId: string,\n\t\toptions?: { timings?: Timings },\n\t): Promise<{\n\t\tdisplayName: string\n\t\tlink?: string | null\n\t}>\n}\n\nexport const normalizeEmail = (s: string) => s.toLowerCase()\n\nexport const normalizeUsername = (s: string) =>\n\ts.replace(/[^a-zA-Z0-9_]/g, '_').toLowerCase()\n","import { createCookieSessionStorage } from '@remix-run/node'\n\nexport const verifySessionStorage = createCookieSessionStorage({\n\tcookie: {\n\t\tname: 'en_verification',\n\t\tsameSite: 'lax', // CSRF protection is advised if changing to 'none'\n\t\tpath: '/',\n\t\thttpOnly: true,\n\t\tmaxAge: 60 * 10, // 10 minutes\n\t\tsecrets: process.env.SESSION_SECRET.split(','),\n\t\tsecure: process.env.NODE_ENV === 'production',\n\t},\n})\n","import { invariant } from '@epic-web/invariant'\nimport { redirect } from '@remix-run/node'\nimport { safeRedirect } from 'remix-utils/safe-redirect'\nimport { twoFAVerificationType } from '#app/routes/settings+/profile.two-factor.tsx'\nimport { getUserId, sessionKey } from '#app/utils/auth.server.ts'\nimport { combineResponseInits } from '#app/utils/misc.tsx'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { getRedirectToUrl, type VerifyFunctionArgs } from './verify.server.ts'\n\nconst verifiedTimeKey = 'verified-time'\nconst unverifiedSessionIdKey = 'unverified-session-id'\nconst rememberKey = 'remember'\n\nexport async function handleNewSession(\n\t{\n\t\trequest,\n\t\tsession,\n\t\tredirectTo,\n\t\tremember,\n\t}: {\n\t\trequest: Request\n\t\tsession: { userId: string; id: string; expirationDate: Date }\n\t\tredirectTo?: string\n\t\tremember: boolean\n\t},\n\tresponseInit?: ResponseInit,\n) {\n\t\n\t\tconst authSession = await authSessionStorage.getSession(\n\t\t\trequest.headers.get('cookie'),\n\t\t)\n\t\tauthSession.set(sessionKey, session.id)\n\n\t\treturn redirect(\n\t\t\tsafeRedirect(redirectTo),\n\t\t\tcombineResponseInits(\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'set-cookie': await authSessionStorage.commitSession(authSession, {\n\t\t\t\t\t\t\texpires: remember ? session.expirationDate : undefined,\n\t\t\t\t\t\t}),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tresponseInit,\n\t\t\t),\n\t\t)\n\t//}\n}\n\nexport async function handleVerification({\n\trequest,\n\tsubmission,\n}: VerifyFunctionArgs) {\n\tinvariant(\n\t\tsubmission.status === 'success',\n\t\t'Submission should be successful by now',\n\t)\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\n\tconst remember = verifySession.get(rememberKey)\n\tconst { redirectTo } = submission.value\n\tconst headers = new Headers()\n\tauthSession.set(verifiedTimeKey, Date.now())\n\n\theaders.append(\n\t\t'set-cookie',\n\t\tawait verifySessionStorage.destroySession(verifySession),\n\t)\n\n\treturn redirect(safeRedirect(redirectTo), { headers })\n}\n\nexport async function shouldRequestTwoFA(request: Request) {\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tif (verifySession.has(unverifiedSessionIdKey)) return true\n\tconst user = await getUserId(request)\n\tif (!user) return false\n\t\n\tconst verifiedTime = authSession.get(verifiedTimeKey) ?? new Date(0)\n\tconst twoHours = 1000 * 60 * 2\n\treturn Date.now() - verifiedTime > twoHours\n}\n","import * as CheckboxPrimitive from '@radix-ui/react-checkbox'\nimport * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nexport type CheckboxProps = Omit<\n\tReact.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>,\n\t'type'\n> & {\n\ttype?: string\n}\n\nconst Checkbox = React.forwardRef<\n\tReact.ElementRef<typeof CheckboxPrimitive.Root>,\n\tReact.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n\t<CheckboxPrimitive.Root\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t'peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground',\n\t\t\tclassName,\n\t\t)}\n\t\t{...props}\n\t>\n\t\t<CheckboxPrimitive.Indicator\n\t\t\tclassName={cn('flex items-center justify-center text-current')}\n\t\t>\n\t\t\t<svg viewBox=\"0 0 8 8\">\n\t\t\t\t<path\n\t\t\t\t\td=\"M1,4 L3,6 L7,2\"\n\t\t\t\t\tstroke=\"currentcolor\"\n\t\t\t\t\tstrokeWidth=\"1\"\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t</CheckboxPrimitive.Indicator>\n\t</CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import { OTPInput, OTPInputContext } from 'input-otp'\nimport * as React from 'react'\n\nimport { cn } from '#app/utils/misc.tsx'\n\nconst InputOTP = React.forwardRef<\n\tReact.ElementRef<typeof OTPInput>,\n\tReact.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n\t<OTPInput\n\t\tref={ref}\n\t\tcontainerClassName={cn(\n\t\t\t'flex items-center gap-2 has-[:disabled]:opacity-50',\n\t\t\tcontainerClassName,\n\t\t)}\n\t\tclassName={cn('disabled:cursor-not-allowed', className)}\n\t\t{...props}\n\t/>\n))\nInputOTP.displayName = 'InputOTP'\n\nconst InputOTPGroup = React.forwardRef<\n\tReact.ElementRef<'div'>,\n\tReact.ComponentPropsWithoutRef<'div'>\n>(({ className, ...props }, ref) => (\n\t<div ref={ref} className={cn('flex items-center', className)} {...props} />\n))\nInputOTPGroup.displayName = 'InputOTPGroup'\n\nconst InputOTPSlot = React.forwardRef<\n\tReact.ElementRef<'div'>,\n\tReact.ComponentPropsWithoutRef<'div'> & { index: number }\n>(({ index, className, ...props }, ref) => {\n\tconst inputOTPContext = React.useContext(OTPInputContext)\n\tconst slot = inputOTPContext.slots[index]\n\tif (!slot) throw new Error('Invalid slot index')\n\tconst { char, hasFakeCaret, isActive } = slot\n\n\treturn (\n\t\t<div\n\t\t\tref={ref}\n\t\t\tclassName={cn(\n\t\t\t\t'relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-base transition-all first:rounded-l-md first:border-l last:rounded-r-md md:text-sm',\n\t\t\t\tisActive && 'z-10 ring-2 ring-ring ring-offset-background',\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t>\n\t\t\t{char}\n\t\t\t{hasFakeCaret && (\n\t\t\t\t<div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n\t\t\t\t\t<div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n})\nInputOTPSlot.displayName = 'InputOTPSlot'\n\nconst InputOTPSeparator = React.forwardRef<\n\tReact.ElementRef<'div'>,\n\tReact.ComponentPropsWithoutRef<'div'>\n>(({ ...props }, ref) => (\n\t<div ref={ref} role=\"separator\" {...props}>\n\t\t-\n\t</div>\n))\nInputOTPSeparator.displayName = 'InputOTPSeparator'\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","import { useInputControl } from '@conform-to/react'\nimport { REGEXP_ONLY_DIGITS_AND_CHARS, type OTPInputProps } from 'input-otp'\nimport React, { useId } from 'react'\nimport { Checkbox, type CheckboxProps } from './ui/checkbox.tsx'\nimport {\n\tInputOTP,\n\tInputOTPGroup,\n\tInputOTPSeparator,\n\tInputOTPSlot,\n} from './ui/input-otp.tsx'\nimport { Input } from './ui/input.tsx'\nimport { Label } from './ui/label.tsx'\nimport { Textarea } from './ui/textarea.tsx'\n\nexport type ListOfErrors = Array<string | null | undefined> | null | undefined\n\nexport function ErrorList({\n\tid,\n\terrors,\n}: {\n\terrors?: ListOfErrors\n\tid?: string\n}) {\n\tconst errorsToRender = errors?.filter(Boolean)\n\tif (!errorsToRender?.length) return null\n\treturn (\n\t\t<ul id={id} className=\"flex flex-col gap-1\">\n\t\t\t{errorsToRender.map((e) => (\n\t\t\t\t<li key={e} className=\"text-[10px] text-foreground-destructive\">\n\t\t\t\t\t{e}\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t)\n}\n\nexport function Field({\n\tlabelProps,\n\tinputProps,\n\terrors,\n\tclassName,\n}: {\n\tlabelProps: React.LabelHTMLAttributes<HTMLLabelElement>\n\tinputProps: React.InputHTMLAttributes<HTMLInputElement>\n\terrors?: ListOfErrors\n\tclassName?: string\n}) {\n\tconst fallbackId = useId()\n\tconst id = inputProps.id ?? fallbackId\n\tconst errorId = errors?.length ? `${id}-error` : undefined\n\treturn (\n\t\t<div className={className}>\n\t\t\t<Label htmlFor={id} {...labelProps} />\n\t\t\t<Input\n\t\t\t\tid={id}\n\t\t\t\taria-invalid={errorId ? true : undefined}\n\t\t\t\taria-describedby={errorId}\n\t\t\t\t{...inputProps}\n\t\t\t/>\n\t\t\t<div className=\"min-h-[32px] px-4 pb-3 pt-1\">\n\t\t\t\t{errorId ? <ErrorList id={errorId} errors={errors} /> : null}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function OTPField({\n\tlabelProps,\n\tinputProps,\n\terrors,\n\tclassName,\n}: {\n\tlabelProps: React.LabelHTMLAttributes<HTMLLabelElement>\n\tinputProps: Partial<OTPInputProps & { render: never }>\n\terrors?: ListOfErrors\n\tclassName?: string\n}) {\n\tconst fallbackId = useId()\n\tconst id = inputProps.id ?? fallbackId\n\tconst errorId = errors?.length ? `${id}-error` : undefined\n\treturn (\n\t\t<div className={className}>\n\t\t\t<Label htmlFor={id} {...labelProps} />\n\t\t\t<InputOTP\n\t\t\t\tpattern={REGEXP_ONLY_DIGITS_AND_CHARS}\n\t\t\t\tmaxLength={6}\n\t\t\t\tid={id}\n\t\t\t\taria-invalid={errorId ? true : undefined}\n\t\t\t\taria-describedby={errorId}\n\t\t\t\t{...inputProps}\n\t\t\t>\n\t\t\t\t<InputOTPGroup>\n\t\t\t\t\t<InputOTPSlot index={0} />\n\t\t\t\t\t<InputOTPSlot index={1} />\n\t\t\t\t\t<InputOTPSlot index={2} />\n\t\t\t\t</InputOTPGroup>\n\t\t\t\t<InputOTPSeparator />\n\t\t\t\t<InputOTPGroup>\n\t\t\t\t\t<InputOTPSlot index={3} />\n\t\t\t\t\t<InputOTPSlot index={4} />\n\t\t\t\t\t<InputOTPSlot index={5} />\n\t\t\t\t</InputOTPGroup>\n\t\t\t</InputOTP>\n\t\t\t<div className=\"min-h-[32px] px-4 pb-3 pt-1\">\n\t\t\t\t{errorId ? <ErrorList id={errorId} errors={errors} /> : null}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function TextareaField({\n\tlabelProps,\n\ttextareaProps,\n\terrors,\n\tclassName,\n}: {\n\tlabelProps: React.LabelHTMLAttributes<HTMLLabelElement>\n\ttextareaProps: React.TextareaHTMLAttributes<HTMLTextAreaElement>\n\terrors?: ListOfErrors\n\tclassName?: string\n}) {\n\tconst fallbackId = useId()\n\tconst id = textareaProps.id ?? textareaProps.name ?? fallbackId\n\tconst errorId = errors?.length ? `${id}-error` : undefined\n\treturn (\n\t\t<div className={className}>\n\t\t\t<Label htmlFor={id} {...labelProps} />\n\t\t\t<Textarea\n\t\t\t\tid={id}\n\t\t\t\taria-invalid={errorId ? true : undefined}\n\t\t\t\taria-describedby={errorId}\n\t\t\t\t{...textareaProps}\n\t\t\t/>\n\t\t\t<div className=\"min-h-[32px] px-4 pb-3 pt-1\">\n\t\t\t\t{errorId ? <ErrorList id={errorId} errors={errors} /> : null}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function CheckboxField({\n\tlabelProps,\n\tbuttonProps,\n\terrors,\n\tclassName,\n}: {\n\tlabelProps: JSX.IntrinsicElements['label']\n\tbuttonProps: CheckboxProps & {\n\t\tname: string\n\t\tform: string\n\t\tvalue?: string\n\t}\n\terrors?: ListOfErrors\n\tclassName?: string\n}) {\n\tconst { key, defaultChecked, ...checkboxProps } = buttonProps\n\tconst fallbackId = useId()\n\tconst checkedValue = buttonProps.value ?? 'on'\n\tconst input = useInputControl({\n\t\tkey,\n\t\tname: buttonProps.name,\n\t\tformId: buttonProps.form,\n\t\tinitialValue: defaultChecked ? checkedValue : undefined,\n\t})\n\tconst id = buttonProps.id ?? fallbackId\n\tconst errorId = errors?.length ? `${id}-error` : undefined\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t<div className=\"flex gap-2\">\n\t\t\t\t<Checkbox\n\t\t\t\t\t{...checkboxProps}\n\t\t\t\t\tid={id}\n\t\t\t\t\taria-invalid={errorId ? true : undefined}\n\t\t\t\t\taria-describedby={errorId}\n\t\t\t\t\tchecked={input.value === checkedValue}\n\t\t\t\t\tonCheckedChange={(state) => {\n\t\t\t\t\t\tinput.change(state.valueOf() ? checkedValue : '')\n\t\t\t\t\t\tbuttonProps.onCheckedChange?.(state)\n\t\t\t\t\t}}\n\t\t\t\t\tonFocus={(event) => {\n\t\t\t\t\t\tinput.focus()\n\t\t\t\t\t\tbuttonProps.onFocus?.(event)\n\t\t\t\t\t}}\n\t\t\t\t\tonBlur={(event) => {\n\t\t\t\t\t\tinput.blur()\n\t\t\t\t\t\tbuttonProps.onBlur?.(event)\n\t\t\t\t\t}}\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t/>\n\t\t\t\t<label\n\t\t\t\t\thtmlFor={id}\n\t\t\t\t\t{...labelProps}\n\t\t\t\t\tclassName=\"self-center text-body-xs text-muted-foreground\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"px-4 pb-3 pt-1\">\n\t\t\t\t{errorId ? <ErrorList id={errorId} errors={errors} /> : null}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","export function Spacer({\n\tsize,\n}: {\n\t/**\n\t * The size of the space\n\t *\n\t * 4xs: h-4 (16px)\n\t *\n\t * 3xs: h-8 (32px)\n\t *\n\t * 2xs: h-12 (48px)\n\t *\n\t * xs: h-16 (64px)\n\t *\n\t * sm: h-20 (80px)\n\t *\n\t * md: h-24 (96px)\n\t *\n\t * lg: h-28 (112px)\n\t *\n\t * xl: h-32 (128px)\n\t *\n\t * 2xl: h-36 (144px)\n\t *\n\t * 3xl: h-40 (160px)\n\t *\n\t * 4xl: h-44 (176px)\n\t */\n\tsize:\n\t\t| '4xs'\n\t\t| '3xs'\n\t\t| '2xs'\n\t\t| 'xs'\n\t\t| 'sm'\n\t\t| 'md'\n\t\t| 'lg'\n\t\t| 'xl'\n\t\t| '2xl'\n\t\t| '3xl'\n\t\t| '4xl'\n}) {\n\tconst options: Record<typeof size, string> = {\n\t\t'4xs': 'h-4',\n\t\t'3xs': 'h-8',\n\t\t'2xs': 'h-12',\n\t\txs: 'h-16',\n\t\tsm: 'h-20',\n\t\tmd: 'h-24',\n\t\tlg: 'h-28',\n\t\txl: 'h-32',\n\t\t'2xl': 'h-36',\n\t\t'3xl': 'h-40',\n\t\t'4xl': 'h-44',\n\t}\n\tconst className = options[size]\n\treturn <div className={className} />\n}\n","import { z } from 'zod'\n\nexport const USERNAME_MIN_LENGTH = 3\nexport const USERNAME_MAX_LENGTH = 50\n\nexport const UsernameSchema = z\n\t.string({ required_error: 'Username is required' })\n\t.min(USERNAME_MIN_LENGTH, { message: 'Username is too short' })\n\t.max(USERNAME_MAX_LENGTH, { message: 'Username is too long' })\n\t/*.regex(/^[a-zA-Z0-9_]+$/, {\n\t\tmessage: 'Username can only include letters, numbers, and underscores',\n\t})*/\n\t// users can type the username in any case, but we store it in lowercase\n\t.transform((value) => value.toLowerCase())\n\nexport const PasswordSchema = z\n\t.string({ required_error: 'Password is required' })\n\t.min(8, { message: 'Password is too short' })\n\t.max(100, { message: 'Password is too long' })\nexport const NameSchema = z\n\t.string({ required_error: 'Name is required' })\n\t.min(3, { message: 'Name is too short' })\n\t.max(40, { message: 'Name is too long' })\nexport const EmailSchema = z\n\t.string({ required_error: 'Email is required' })\n\t.email({ message: 'Email is invalid' })\n\t.min(3, { message: 'Email is too short' })\n\t.max(100, { message: 'Email is too long' })\n\t// users can type the email in any case, but we store it in lowercase\n\t.transform((value) => value.toLowerCase())\n\nexport const PasswordAndConfirmPasswordSchema = z\n\t.object({ password: PasswordSchema, confirmPassword: PasswordSchema })\n\t.superRefine(({ confirmPassword, password }, ctx) => {\n\t\tif (confirmPassword !== password) {\n\t\t\tctx.addIssue({\n\t\t\t\tpath: ['confirmPassword'],\n\t\t\t\tcode: 'custom',\n\t\t\t\tmessage: 'The passwords must match',\n\t\t\t})\n\t\t}\n\t})\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport {\n\tjson,\n\tredirect,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n\ttype MetaFunction,\n} from '@remix-run/node'\nimport {\n\tForm,\n\tuseActionData,\n\tuseLoaderData,\n\tuseSearchParams,\n} from '@remix-run/react'\nimport { HoneypotInputs } from 'remix-utils/honeypot/react'\nimport { safeRedirect } from 'remix-utils/safe-redirect'\nimport { z } from 'zod'\nimport { CheckboxField, ErrorList, Field } from '#app/components/forms.tsx'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireAnonymous, sessionKey, signup } from '#app/utils/auth.server.ts'\nimport { checkHoneypot } from '#app/utils/honeypot.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { redirectWithToast, createToastHeaders } from '#app/utils/toast.server.ts'\nimport {\n\tNameSchema,\n\tPasswordAndConfirmPasswordSchema,\n\tUsernameSchema,\n} from '#app/utils/user-validation.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\n\nexport const onboardingEmailSessionKey = 'onboardingEmail'\n\nconst SignupFormSchema = z\n\t.object({\n\t\tusername: UsernameSchema,\n\t\tname: NameSchema,\n\t\tagreeToTermsOfServiceAndPrivacyPolicy: z.boolean({\n\t\t\trequired_error:\n\t\t\t\t'You must agree to the terms of service and privacy policy',\n\t\t}),\n\t\tremember: z.boolean().optional(),\n\t\tredirectTo: z.string().optional(),\n\t})\n\t.and(PasswordAndConfirmPasswordSchema)\n\nasync function requireOnboardingEmail(request: Request) {\n\tawait requireAnonymous(request)\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst email = verifySession.get(onboardingEmailSessionKey)\n\tif (typeof email !== 'string' || !email) {\n\t\tthrow redirect('/signup')\n\t}\n\treturn email\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst email = await requireOnboardingEmail(request)\n\treturn json({ email })\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst email = await requireOnboardingEmail(request)\n\tconst formData = await request.formData()\n\tcheckHoneypot(formData)\n\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: (intent) =>\n\t\t\tSignupFormSchema.superRefine(async (data, ctx) => {\n\t\t\t}).transform(async (data) => {\n\t\t\t\tif (intent !== null) return { ...data, session: null }\n\n\t\t\t\tconst session = await signup({ ...data, email })\n\t\t\t\treturn { ...data, session }\n\t\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success' || !submission.value.session) {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { session, remember } = submission.value\n\n\tconst redirectTo = '/dashboard'\n\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tauthSession.set(sessionKey, session.data.token)\n\tconst verifySession = await verifySessionStorage.getSession()\n\tconst headers = new Headers()\n\theaders.append(\n\t\t'set-cookie',\n\t\tawait authSessionStorage.commitSession(authSession, {\n\t\t\texpires: remember ? session.expirationDate : undefined,\n\t\t}),\n\t)\n\theaders.append(\n\t\t'set-cookie',\n\t\tawait verifySessionStorage.destroySession(verifySession),\n\t)\n\n\treturn redirectWithToast(\n\t\tsafeRedirect(redirectTo),\n\t\t{ title: 'Welcome', description: 'Thanks for signing up!' },\n\t\t{ headers },\n\t)\n}\n\nexport const meta: MetaFunction = () => {\n\treturn [{ title: 'Setup Epic Notes Account' }]\n}\n\nexport default function OnboardingRoute() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst actionData = useActionData<typeof action>()\n\tconst isPending = useIsPending()\n\tconst [searchParams] = useSearchParams()\n\tconst redirectTo = searchParams.get('redirectTo')\n\n\tconst [form, fields] = useForm({\n\t\tid: 'onboarding-form',\n\t\tconstraint: getZodConstraint(SignupFormSchema),\n\t\tdefaultValue: { redirectTo },\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: SignupFormSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"container flex min-h-full flex-col justify-center pb-32 pt-20\">\n\t\t\t<div className=\"mx-auto w-full max-w-lg\">\n\t\t\t\t<div className=\"flex flex-col gap-3 text-center\">\n\t\t\t\t\t<h1 className=\"text-h1\">Welcome aboard {data.email}!</h1>\n\t\t\t\t\t<p className=\"text-body-md text-muted-foreground\">\n\t\t\t\t\t\tPlease enter your details.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<Spacer size=\"xs\" />\n\t\t\t\t<Form\n\t\t\t\t\tmethod=\"POST\"\n\t\t\t\t\tclassName=\"mx-auto min-w-full max-w-sm sm:min-w-[368px]\"\n\t\t\t\t\t{...getFormProps(form)}\n\t\t\t\t>\n\t\t\t\t\t<HoneypotInputs />\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{ htmlFor: fields.username.id, children: 'Username' }}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.username, { type: 'text' }),\n\t\t\t\t\t\t\tautoComplete: 'username',\n\t\t\t\t\t\t\tclassName: 'lowercase',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.username.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{ htmlFor: fields.name.id, children: 'Name' }}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.name, { type: 'text' }),\n\t\t\t\t\t\t\tautoComplete: 'name',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.name.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{ htmlFor: fields.password.id, children: 'Password' }}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.password, { type: 'password' }),\n\t\t\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.password.errors}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.confirmPassword.id,\n\t\t\t\t\t\t\tchildren: 'Confirm Password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.confirmPassword, { type: 'password' }),\n\t\t\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.confirmPassword.errors}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<CheckboxField\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.agreeToTermsOfServiceAndPrivacyPolicy.id,\n\t\t\t\t\t\t\tchildren:\n\t\t\t\t\t\t\t\t'Do you agree to our Terms of Service and Privacy Policy?',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tbuttonProps={getInputProps(\n\t\t\t\t\t\t\tfields.agreeToTermsOfServiceAndPrivacyPolicy,\n\t\t\t\t\t\t\t{ type: 'checkbox' },\n\t\t\t\t\t\t)}\n\t\t\t\t\t\terrors={fields.agreeToTermsOfServiceAndPrivacyPolicy.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<CheckboxField\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.remember.id,\n\t\t\t\t\t\t\tchildren: 'Remember me',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tbuttonProps={getInputProps(fields.remember, { type: 'checkbox' })}\n\t\t\t\t\t\terrors={fields.remember.errors}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<input {...getInputProps(fields.redirectTo, { type: 'hidden' })} />\n\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t\t\t<div className=\"flex items-center justify-between gap-6\">\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\tstatus={isPending ? 'pending' : (form.status ?? 'idle')}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCreate an account\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import {\n\tgetFormProps,\n\tgetInputProps,\n\tuseForm,\n\ttype SubmissionResult,\n} from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport {\n\tredirect,\n\tjson,\n\ttype ActionFunctionArgs,\n\ttype LoaderFunctionArgs,\n\ttype MetaFunction,\n} from '@remix-run/node'\nimport {\n\ttype Params,\n\tForm,\n\tuseActionData,\n\tuseLoaderData,\n\tuseSearchParams,\n} from '@remix-run/react'\nimport { safeRedirect } from 'remix-utils/safe-redirect'\nimport { z } from 'zod'\nimport { CheckboxField, ErrorList, Field } from '#app/components/forms.tsx'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport {\n\tauthenticator,\n\tsessionKey,\n\tsignupWithConnection,\n\trequireAnonymous,\n} from '#app/utils/auth.server.ts'\nimport { connectionSessionStorage } from '#app/utils/connections.server'\nimport { ProviderNameSchema } from '#app/utils/connections.tsx'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { NameSchema, UsernameSchema } from '#app/utils/user-validation.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { onboardingEmailSessionKey } from './onboarding'\n\n// @ts-ignore\nimport { userAPI } from '../../api/userAPI';\n\nexport const providerIdKey = 'providerId'\nexport const prefilledProfileKey = 'prefilledProfile'\n\nconst SignupFormSchema = z.object({\n\timageUrl: z.string().optional(),\n\tusername: UsernameSchema,\n\tname: NameSchema,\n\tagreeToTermsOfServiceAndPrivacyPolicy: z.boolean({\n\t\trequired_error: 'You must agree to the terms of service and privacy policy',\n\t}),\n\tremember: z.boolean().optional(),\n\tredirectTo: z.string().optional(),\n})\n\nasync function requireData({\n\trequest,\n\tparams,\n}: {\n\trequest: Request\n\tparams: Params\n}) {\n\tawait requireAnonymous(request)\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst email = verifySession.get(onboardingEmailSessionKey)\n\tconst providerId = verifySession.get(providerIdKey)\n\tconst result = z\n\t\t.object({\n\t\t\temail: z.string(),\n\t\t\tproviderName: ProviderNameSchema,\n\t\t\tproviderId: z.string(),\n\t\t})\n\t\t.safeParse({ email, providerName: params.provider, providerId })\n\tif (result.success) {\n\t\treturn result.data\n\t} else {\n\t\tconsole.error(result.error)\n\t\tthrow redirect('/signup')\n\t}\n}\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n\tconst { email } = await requireData({ request, params })\n\tconst connectionSession = await connectionSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst prefilledProfile = verifySession.get(prefilledProfileKey)\n\n\tconst formError = connectionSession.get(authenticator.sessionErrorKey)\n\tconst hasError = typeof formError === 'string'\n\n\treturn json({\n\t\temail,\n\t\tstatus: 'idle',\n\t\tsubmission: {\n\t\t\tstatus: hasError ? 'error' : undefined,\n\t\t\tinitialValue: prefilledProfile ?? {},\n\t\t\terror: { '': hasError ? [formError] : [] },\n\t\t} as SubmissionResult,\n\t})\n}\n\nexport async function action({ request, params }: ActionFunctionArgs) {\n\tconst { email, providerId, providerName } = await requireData({\n\t\trequest,\n\t\tparams,\n\t})\n\tconst formData = await request.formData()\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\n\tconst submission = await parseWithZod(formData, {\t\t\n\t\tschema: SignupFormSchema.superRefine(async (data, ctx) => {\n\n\t\t\tconst { user, token, expirationDate } = await userAPI.checkExistingEmail(email);\n\n\t\t\tif (user) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tpath: ['username'],\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: 'A user already exists with this username',\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\n\t\t}).transform(async (data) => {\n\t\t\tconst session = await signupWithConnection({\n\t\t\t\t...data,\n\t\t\t\temail,\n\t\t\t\tproviderId,\n\t\t\t\tproviderName,\n\t\t\t})\n\n\t\t\treturn { ...data, session: session }\n\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { session, remember } = submission.value\n\n\tconst redirectTo = '/dashboard'\n\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\n\tauthSession.set(sessionKey, session.data.token)\n\n\tconst headers = new Headers()\n\theaders.append(\n\t\t'set-cookie',\n\t\tawait authSessionStorage.commitSession(authSession, {\n\t\t\texpires: remember ? session.data.expirationDate : undefined,\n\t\t}),\n\t)\n\theaders.append(\n\t\t'set-cookie',\n\t\tawait verifySessionStorage.destroySession(verifySession),\n\t)\n\n\t//Test Printout of Cookie Values\n\tconsole.log(authSession);\n\n\treturn redirectWithToast(\n\t\tsafeRedirect(redirectTo),\n\t\t{ title: 'Welcome', description: 'Thanks for signing up!' },\n\t\t{ headers },\n\t)\n}\n\nexport const meta: MetaFunction = () => {\n\treturn [{ title: 'Setup CoOwners Account' }]\n}\n\nexport default function OnboardingProviderRoute() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst actionData = useActionData<typeof action>()\n\tconst isPending = useIsPending()\n\tconst [searchParams] = useSearchParams()\n\tconst redirectTo = searchParams.get('redirectTo')\n\n\tconst [form, fields] = useForm({\n\t\tid: 'onboarding-provider-form',\n\t\tconstraint: getZodConstraint(SignupFormSchema),\n\t\tlastResult: actionData?.result ?? data.submission,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: SignupFormSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"container flex min-h-full flex-col justify-center pb-32 pt-20\">\n\t\t\t<div className=\"mx-auto w-full max-w-lg\">\n\t\t\t\t<div className=\"flex flex-col gap-3 text-center\">\n\t\t\t\t\t<h1 className=\"text-h1\">Welcome aboard {data.email}!</h1>\n\t\t\t\t\t<p className=\"text-body-md text-muted-foreground\">\n\t\t\t\t\t\tPlease enter your details.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<Spacer size=\"xs\" />\n\t\t\t\t<Form\n\t\t\t\t\tmethod=\"POST\"\n\t\t\t\t\tclassName=\"mx-auto min-w-full max-w-sm sm:min-w-[368px]\"\n\t\t\t\t\t{...getFormProps(form)}\n\t\t\t\t>\n\t\t\t\t\t{fields.imageUrl.initialValue ? (\n\t\t\t\t\t\t<div className=\"mb-4 flex flex-col items-center justify-center gap-4\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={fields.imageUrl.initialValue}\n\t\t\t\t\t\t\t\talt=\"Profile\"\n\t\t\t\t\t\t\t\tclassName=\"h-24 w-24 rounded-full\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<p className=\"text-body-sm text-muted-foreground\">\n\t\t\t\t\t\t\t\tCannot be changed here, but you can change your photo later\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<input {...getInputProps(fields.imageUrl, { type: 'hidden' })} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{ htmlFor: fields.username.id, children: 'Username' }}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.username, { type: 'text' }),\n\t\t\t\t\t\t\tautoComplete: 'username',\n\t\t\t\t\t\t\tclassName: 'lowercase',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.username.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{ htmlFor: fields.name.id, children: 'Name' }}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.name, { type: 'text' }),\n\t\t\t\t\t\t\tautoComplete: 'name',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.name.errors}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<CheckboxField\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.agreeToTermsOfServiceAndPrivacyPolicy.id,\n\t\t\t\t\t\t\tchildren:\n\t\t\t\t\t\t\t\t'Do you agree to our Terms of Service and Privacy Policy?',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tbuttonProps={getInputProps(\n\t\t\t\t\t\t\tfields.agreeToTermsOfServiceAndPrivacyPolicy,\n\t\t\t\t\t\t\t{ type: 'checkbox' },\n\t\t\t\t\t\t)}\n\t\t\t\t\t\terrors={fields.agreeToTermsOfServiceAndPrivacyPolicy.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<CheckboxField\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.remember.id,\n\t\t\t\t\t\t\tchildren: 'Remember me',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tbuttonProps={getInputProps(fields.remember, { type: 'checkbox' })}\n\t\t\t\t\t\terrors={fields.remember.errors}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{redirectTo ? (\n\t\t\t\t\t\t<input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n\t\t\t\t\t) : null}\n\n\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t\t\t<div className=\"flex items-center justify-between gap-6\">\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\tstatus={isPending ? 'pending' : (form.status ?? 'idle')}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCreate an account\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import { redirect, type LoaderFunctionArgs } from '@remix-run/node'\nimport {\n\tauthenticator,\n\tgetSessionExpirationDate,\n\tgetUserId,\n} from '#app/utils/auth.server.ts'\nimport { ProviderNameSchema, providerLabels } from '#app/utils/connections.tsx'\nimport { ensurePrimary } from '#app/utils/litefs.server.ts'\nimport { combineHeaders } from '#app/utils/misc.tsx'\nimport {\n\tnormalizeEmail,\n\tnormalizeUsername,\n} from '#app/utils/providers/provider.ts'\nimport {\n\tdestroyRedirectToHeader,\n\tgetRedirectCookieValue,\n} from '#app/utils/redirect-cookie.server.ts'\nimport {\n\tcreateToastHeaders,\n\tredirectWithToast,\n} from '#app/utils/toast.server.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { handleNewSession } from './login.server.ts'\nimport { onboardingEmailSessionKey } from './onboarding.tsx'\nimport { prefilledProfileKey, providerIdKey } from './onboarding_.$provider.tsx'\n\nconst destroyRedirectTo = { 'set-cookie': destroyRedirectToHeader }\n\n//API\n// @ts-ignore\nimport { userAPI } from '../../api/userAPI';\n\nexport async function loader({ request, params }: LoaderFunctionArgs) {\n\t// this loader performs mutations, so we need to make sure we're on the\n\t// primary instance to avoid writing to a read-only replica\n\tawait ensurePrimary()\n\n\tconst providerName = ProviderNameSchema.parse(params.provider)\n\tconst redirectTo = getRedirectCookieValue(request)\n\tconst label = providerLabels[providerName]\n\n\tconst authResult = await authenticator\n\t\t.authenticate(providerName, request, { throwOnError: true })\n\t\t.then(\n\t\t\t(data) => ({ success: true, data }) as const,\n\t\t\t(error) => ({ success: false, error }) as const,\n\t\t)\n\n\tif (!authResult.success) {\n\t\tconsole.error(authResult.error)\n\t\tthrow await redirectWithToast(\n\t\t\t'/login',\n\t\t\t{\n\t\t\t\ttitle: 'Auth Failed',\n\t\t\t\tdescription: `There was an error authenticating with ${label}.`,\n\t\t\t\ttype: 'error',\n\t\t\t},\n\t\t\t{ headers: destroyRedirectTo },\n\t\t)\n\t}\n\n\tconst { data: profile } = authResult\n\n\t// Check if the account is already connected\n\tconst { user, token, expirationDate } = await userAPI.checkExistingEmail(profile.email);\n\n\tif (user) {\n\t\t\n\t\treturn makeSession(\n\t\t\t{ request, userId: user.id, token, expirationDate },\n\t\t\t{\n\t\t\t\theaders: await createToastHeaders({\n\t\t\t\t\ttitle: 'Connected',\n\t\t\t\t\tdescription: `Your profile has successfully logged in.`,\n\t\t\t\t}),\n\t\t\t},\n\t\t)\n\t}\n\n\t// this is a new user, so let's get them onboarded\n\tconst verifySession = await verifySessionStorage.getSession()\n\tverifySession.set(onboardingEmailSessionKey, profile.email)\n\tverifySession.set(prefilledProfileKey, {\n\t\t...profile,\n\t\temail: normalizeEmail(profile.email),\n\t\tusername:\n\t\t\ttypeof profile.username === 'string'\n\t\t\t\t? normalizeUsername(profile.username)\n\t\t\t\t: undefined,\n\t})\n\tverifySession.set(providerIdKey, profile.id)\n\tconst onboardingRedirect = [\n\t\t`/onboarding/${providerName}`,\n\t\tredirectTo ? new URLSearchParams({ redirectTo }) : null,\n\t]\n\t\t.filter(Boolean)\n\t\t.join('?')\n\treturn redirect(onboardingRedirect, {\n\t\theaders: combineHeaders(\n\t\t\t{ 'set-cookie': await verifySessionStorage.commitSession(verifySession) },\n\t\t\tdestroyRedirectTo,\n\t\t),\n\t})\n}\n\nasync function makeSession(\n\t{\n\t\trequest,\n\t\tuserId,\n\t\ttoken,\n\t\texpirationDate,\n\t\tredirectTo,\n\t}: { request: Request; userId: string; token: string; expirationDate: Date, redirectTo?: string | null },\n\tresponseInit?: ResponseInit,\n) {\n\tredirectTo ??= '/'\n\t\n\tconst session = { id: token, expirationDate, userId }\n\treturn handleNewSession(\n\t\t{ request, session, redirectTo, remember: true },\n\t\t{ headers: combineHeaders(responseInit?.headers, destroyRedirectTo) },\n\t)\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tjson,\n\tredirect,\n\ttype ActionFunctionArgs,\n\ttype LoaderFunctionArgs,\n} from '@remix-run/node'\nimport { Form, useActionData, useLoaderData } from '@remix-run/react'\nimport { z } from 'zod'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport {\n\tprepareVerification,\n\trequireRecentVerification,\n} from '#app/routes/_auth+/verify.server.ts'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { sendEmail } from '#app/utils/email.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { EmailSchema } from '#app/utils/user-validation.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { EmailChangeEmail } from './profile.change-email.server.tsx'\nimport { type BreadcrumbHandle } from './profile.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"envelope-closed\">Change Email</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nexport const newEmailAddressSessionKey = 'new-email-address'\n\nconst ChangeEmailSchema = z.object({\n\temail: EmailSchema,\n})\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tawait requireRecentVerification(request)\n\tconst user = await requireUserId(request)\n\t\n\tif (!user) {\n\t\tconst params = new URLSearchParams({ redirectTo: request.url })\n\t\tthrow redirect(`/login?${params}`)\n\t}\n\treturn json({ user })\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst formData = await request.formData()\n}\n\nexport default function ChangeEmailIndex() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst actionData = useActionData<typeof action>()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'change-email-form',\n\t\tconstraint: getZodConstraint(ChangeEmailSchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ChangeEmailSchema })\n\t\t},\n\t})\n\n\tconst isPending = useIsPending()\n\treturn (\n\t\t<div>\n\t\t\t<h1 className=\"text-h1\">Change Email</h1>\n\t\t\t<p>You will receive an email at the new email address to confirm.</p>\n\t\t\t<p>\n\t\t\t\tAn email notice will also be sent to your old address {data.user.email}.\n\t\t\t</p>\n\t\t\t<div className=\"mx-auto mt-5 max-w-sm\">\n\t\t\t\t<Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{ children: 'New Email' }}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.email, { type: 'email' }),\n\t\t\t\t\t\t\tautoComplete: 'email',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.email.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<ErrorList id={form.errorId} errors={form.errors} />\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\tstatus={isPending ? 'pending' : (form.status ?? 'idle')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSend Confirmation\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t</div>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import { invariant } from '@epic-web/invariant'\nimport * as E from '@react-email/components'\nimport { json } from '@remix-run/node'\nimport {\n\trequireRecentVerification,\n\ttype VerifyFunctionArgs,\n} from '#app/routes/_auth+/verify.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { sendEmail } from '#app/utils/email.server.ts'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { newEmailAddressSessionKey } from './profile.change-email'\n\nexport async function handleVerification({\n\trequest,\n\tsubmission,\n}: VerifyFunctionArgs) {\n\tawait requireRecentVerification(request)\n\tinvariant(\n\t\tsubmission.status === 'success',\n\t\t'Submission should be successful by now',\n\t)\n\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst newEmail = verifySession.get(newEmailAddressSessionKey)\n\tif (!newEmail) {\n\t\treturn json(\n\t\t\t{\n\t\t\t\tresult: submission.reply({\n\t\t\t\t\tformErrors: [\n\t\t\t\t\t\t'You must submit the code on the same device that requested the email change.',\n\t\t\t\t\t],\n\t\t\t\t}),\n\t\t\t},\n\t\t\t{ status: 400 },\n\t\t)\n\t}\n\n\treturn redirectWithToast(\n\t\t'/settings/profile',\n\t\t{\n\t\t\ttitle: 'Email Changed',\n\t\t\ttype: 'success',\n\t\t\tdescription: `Your email has been changed to ${user.email}`,\n\t\t},\n\t\t{\n\t\t\theaders: {\n\t\t\t\t'set-cookie': await verifySessionStorage.destroySession(verifySession),\n\t\t\t},\n\t\t},\n\t)\n}\n\nexport function EmailChangeEmail({\n\tverifyUrl,\n\totp,\n}: {\n\tverifyUrl: string\n\totp: string\n}) {\n\treturn (\n\t\t<E.Html lang=\"en\" dir=\"ltr\">\n\t\t\t<E.Container>\n\t\t\t\t<h1>\n\t\t\t\t\t<E.Text>Epic Notes Email Change</E.Text>\n\t\t\t\t</h1>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>\n\t\t\t\t\t\tHere's your verification code: <strong>{otp}</strong>\n\t\t\t\t\t</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>Or click the link:</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<E.Link href={verifyUrl}>{verifyUrl}</E.Link>\n\t\t\t</E.Container>\n\t\t</E.Html>\n\t)\n}\n\nfunction EmailChangeNoticeEmail({ userId }: { userId: string }) {\n\treturn (\n\t\t<E.Html lang=\"en\" dir=\"ltr\">\n\t\t\t<E.Container>\n\t\t\t\t<h1>\n\t\t\t\t\t<E.Text>Your Epic Notes email has been changed</E.Text>\n\t\t\t\t</h1>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>\n\t\t\t\t\t\tWe're writing to let you know that your Epic Notes email has been\n\t\t\t\t\t\tchanged.\n\t\t\t\t\t</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>\n\t\t\t\t\t\tIf you changed your email address, then you can safely ignore this.\n\t\t\t\t\t\tBut if you did not change your email address, then please contact\n\t\t\t\t\t\tsupport immediately.\n\t\t\t\t\t</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>Your Account ID: {userId}</E.Text>\n\t\t\t\t</p>\n\t\t\t</E.Container>\n\t\t</E.Html>\n\t)\n}\n","import { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { Outlet } from '@remix-run/react'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { type VerificationTypes } from '#app/routes/_auth+/verify.tsx'\nimport { type BreadcrumbHandle } from './profile.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"lock-closed\">2FA</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nexport const twoFAVerificationType = '2fa' satisfies VerificationTypes\n\nexport default function TwoFactorRoute() {\n\treturn <Outlet />\n}\n","import { invariant } from '@epic-web/invariant'\nimport { redirect } from '@remix-run/node'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { onboardingEmailSessionKey } from './onboarding.tsx'\nimport { type VerifyFunctionArgs } from './verify.server.ts'\n\nexport async function handleVerification({ submission }: VerifyFunctionArgs) {\n\tinvariant(\n\t\tsubmission.status === 'success',\n\t\t'Submission should be successful by now',\n\t)\n\tconst verifySession = await verifySessionStorage.getSession()\n\tverifySession.set(onboardingEmailSessionKey, submission.value.target)\n\treturn redirect('/onboarding', {\n\t\theaders: {\n\t\t\t'set-cookie': await verifySessionStorage.commitSession(verifySession),\n\t\t},\n\t})\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tjson,\n\tredirect,\n\ttype ActionFunctionArgs,\n\ttype LoaderFunctionArgs,\n\ttype MetaFunction,\n} from '@remix-run/node'\nimport { Form, useActionData, useLoaderData } from '@remix-run/react'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireAnonymous, resetUserPassword } from '#app/utils/auth.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { PasswordAndConfirmPasswordSchema } from '#app/utils/user-validation.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nexport const resetPasswordUsernameSessionKey = 'resetPasswordUsername'\n\nconst ResetPasswordSchema = PasswordAndConfirmPasswordSchema\n\nasync function requireResetPasswordUsername(request: Request) {\n\tawait requireAnonymous(request)\n\tconst verifySession = await verifySessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst resetPasswordUsername = verifySession.get(\n\t\tresetPasswordUsernameSessionKey,\n\t)\n\tif (typeof resetPasswordUsername !== 'string' || !resetPasswordUsername) {\n\t\tthrow redirect('/login')\n\t}\n\treturn resetPasswordUsername\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst resetPasswordUsername = await requireResetPasswordUsername(request)\n\treturn json({ resetPasswordUsername })\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst resetPasswordUsername = await requireResetPasswordUsername(request)\n\tconst formData = await request.formData()\n\tconst submission = parseWithZod(formData, {\n\t\tschema: ResetPasswordSchema,\n\t})\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\tconst { password } = submission.value\n\t\n\tconst { user, token, expirationDate } = await resetUserPassword({ username: resetPasswordUsername, password })\n\n\tconst verifySession = await verifySessionStorage.getSession()\n\treturn redirect('/login', {\n\t\theaders: {\n\t\t\t'set-cookie': await verifySessionStorage.destroySession(verifySession),\n\t\t},\n\t})\n}\n\nexport const meta: MetaFunction = () => {\n\treturn [{ title: 'Reset Password | Epic Notes' }]\n}\n\nexport default function ResetPasswordPage() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst actionData = useActionData<typeof action>()\n\tconst isPending = useIsPending()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'reset-password',\n\t\tconstraint: getZodConstraint(ResetPasswordSchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ResetPasswordSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"container flex flex-col justify-center pb-32 pt-20\">\n\t\t\t<div className=\"text-center\">\n\t\t\t\t<h1 className=\"text-h1\">Password Reset</h1>\n\t\t\t\t<p className=\"mt-3 text-body-md text-muted-foreground\">\n\t\t\t\t\tHi, {data.resetPasswordUsername}. No worries. It happens all the time.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"mx-auto mt-16 min-w-full max-w-sm sm:min-w-[368px]\">\n\t\t\t\t<Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.password.id,\n\t\t\t\t\t\t\tchildren: 'New Password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.password, { type: 'password' }),\n\t\t\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.password.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.confirmPassword.id,\n\t\t\t\t\t\t\tchildren: 'Confirm Password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.confirmPassword, { type: 'password' }),\n\t\t\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.confirmPassword.errors}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t\t\t<StatusButton\n\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\tstatus={isPending ? 'pending' : (form.status ?? 'idle')}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t>\n\t\t\t\t\t\tReset password\n\t\t\t\t\t</StatusButton>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n","import { invariant } from '@epic-web/invariant'\nimport { json, redirect } from '@remix-run/node'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\nimport { resetPasswordUsernameSessionKey } from './reset-password.tsx'\nimport { type VerifyFunctionArgs } from './verify.server.ts'\n\n//API\n// @ts-ignore\nimport { userAPI } from '../../api/userAPI'\n\nexport async function handleVerification({ submission }: VerifyFunctionArgs) {\n\tinvariant(\n\t\tsubmission.status === 'success',\n\t\t'Submission should be successful by now',\n\t)\n\tconst target = submission.value.target\n\t\n\tconst { user, token, expirationDate } = await userAPI.checkExistingEmail(target);\n\n\t// we don't want to say the user is not found if the email is not found\n\t// because that would allow an attacker to check if an email is registered\n\tif (!user) {\n\t\treturn json(\n\t\t\t{ result: submission.reply({ fieldErrors: { code: ['Invalid code'] } }) },\n\t\t\t{ status: 400 },\n\t\t)\n\t}\n\n\tconst verifySession = await verifySessionStorage.getSession()\n\tverifySession.set(resetPasswordUsernameSessionKey, user.username)\n\treturn redirect('/reset-password', {\n\t\theaders: {\n\t\t\t'set-cookie': await verifySessionStorage.commitSession(verifySession),\n\t\t},\n\t})\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { type ActionFunctionArgs } from '@remix-run/node'\nimport { Form, useActionData, useSearchParams } from '@remix-run/react'\nimport { HoneypotInputs } from 'remix-utils/honeypot/react'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { ErrorList, OTPField } from '#app/components/forms.tsx'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { checkHoneypot } from '#app/utils/honeypot.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { validateRequest } from './verify.server.ts'\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nexport const codeQueryParam = 'code'\nexport const targetQueryParam = 'target'\nexport const typeQueryParam = 'type'\nexport const redirectToQueryParam = 'redirectTo'\nconst types = ['onboarding', 'reset-password', 'change-email', '2fa'] as const\nconst VerificationTypeSchema = z.enum(types)\nexport type VerificationTypes = z.infer<typeof VerificationTypeSchema>\n\nexport const VerifySchema = z.object({\n\t[codeQueryParam]: z.string().min(6).max(6),\n\t[typeQueryParam]: VerificationTypeSchema,\n\t[targetQueryParam]: z.string(),\n\t[redirectToQueryParam]: z.string().optional(),\n})\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst formData = await request.formData()\n\tcheckHoneypot(formData)\n\treturn validateRequest(request, formData)\n}\n\nexport default function VerifyRoute() {\n\tconst [searchParams] = useSearchParams()\n\tconst isPending = useIsPending()\n\tconst actionData = useActionData<typeof action>()\n\tconst parseWithZoddType = VerificationTypeSchema.safeParse(\n\t\tsearchParams.get(typeQueryParam),\n\t)\n\tconst type = parseWithZoddType.success ? parseWithZoddType.data : null\n\n\tconst checkEmail = (\n\t\t<>\n\t\t\t<h1 className=\"text-h1\">Check your email</h1>\n\t\t\t<p className=\"mt-3 text-body-md text-muted-foreground\">\n\t\t\t\tWe've sent you a code to verify your email address.\n\t\t\t</p>\n\t\t</>\n\t)\n\n\tconst headings: Record<VerificationTypes, React.ReactNode> = {\n\t\tonboarding: checkEmail,\n\t\t'reset-password': checkEmail,\n\t\t'change-email': checkEmail,\n\t\t'2fa': (\n\t\t\t<>\n\t\t\t\t<h1 className=\"text-h1\">Check your 2FA app</h1>\n\t\t\t\t<p className=\"mt-3 text-body-md text-muted-foreground\">\n\t\t\t\t\tPlease enter your 2FA code to verify your identity.\n\t\t\t\t</p>\n\t\t\t</>\n\t\t),\n\t}\n\n\tconst [form, fields] = useForm({\n\t\tid: 'verify-form',\n\t\tconstraint: getZodConstraint(VerifySchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: VerifySchema })\n\t\t},\n\t\tdefaultValue: {\n\t\t\tcode: searchParams.get(codeQueryParam),\n\t\t\ttype: type,\n\t\t\ttarget: searchParams.get(targetQueryParam),\n\t\t\tredirectTo: searchParams.get(redirectToQueryParam),\n\t\t},\n\t})\n\n\treturn (\n\t\t<main className=\"container flex flex-col justify-center pb-32 pt-20\">\n\t\t\t<div className=\"text-center\">\n\t\t\t\t{type ? headings[type] : 'Invalid Verification Type'}\n\t\t\t</div>\n\n\t\t\t<Spacer size=\"xs\" />\n\n\t\t\t<div className=\"mx-auto flex w-72 max-w-full flex-col justify-center gap-1\">\n\t\t\t\t<div>\n\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex w-full gap-2\">\n\t\t\t\t\t<Form method=\"POST\" {...getFormProps(form)} className=\"flex-1\">\n\t\t\t\t\t\t<HoneypotInputs />\n\t\t\t\t\t\t<div className=\"flex items-center justify-center\">\n\t\t\t\t\t\t\t<OTPField\n\t\t\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\t\t\thtmlFor: fields[codeQueryParam].id,\n\t\t\t\t\t\t\t\t\tchildren: 'Code',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t...getInputProps(fields[codeQueryParam], { type: 'text' }),\n\t\t\t\t\t\t\t\t\tautoComplete: 'one-time-code',\n\t\t\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terrors={fields[codeQueryParam].errors}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t{...getInputProps(fields[typeQueryParam], { type: 'hidden' })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t{...getInputProps(fields[targetQueryParam], { type: 'hidden' })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t{...getInputProps(fields[redirectToQueryParam], {\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\tstatus={isPending ? 'pending' : (form.status ?? 'idle')}\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</main>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n","import { type Submission } from '@conform-to/react'\nimport { parseWithZod } from '@conform-to/zod'\nimport { json } from '@remix-run/node'\nimport { z } from 'zod'\nimport { handleVerification as handleChangeEmailVerification } from '#app/routes/settings+/profile.change-email.server.tsx'\nimport { twoFAVerificationType } from '#app/routes/settings+/profile.two-factor.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { getDomainUrl } from '#app/utils/misc.tsx'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { generateTOTP, verifyTOTP } from '#app/utils/totp.server.ts'\nimport { type twoFAVerifyVerificationType } from '../settings+/profile.two-factor.verify.tsx'\nimport {\n\thandleVerification as handleLoginTwoFactorVerification,\n\tshouldRequestTwoFA,\n} from './login.server.ts'\nimport { handleVerification as handleOnboardingVerification } from './onboarding.server.ts'\nimport { handleVerification as handleResetPasswordVerification } from './reset-password.server.ts'\nimport {\n\tVerifySchema,\n\tcodeQueryParam,\n\tredirectToQueryParam,\n\ttargetQueryParam,\n\ttypeQueryParam,\n\ttype VerificationTypes,\n} from './verify.tsx'\n\n// @ts-ignore\nimport { userAPI } from '../../api/userAPI';\n\nexport type VerifyFunctionArgs = {\n\trequest: Request\n\tsubmission: Submission<\n\t\tz.input<typeof VerifySchema>,\n\t\tstring[],\n\t\tz.output<typeof VerifySchema>\n\t>\n\tbody: FormData | URLSearchParams\n}\n\nexport function getRedirectToUrl({\n\trequest,\n\ttype,\n\ttarget,\n\tredirectTo,\n}: {\n\trequest: Request\n\ttype: VerificationTypes\n\ttarget: string\n\tredirectTo?: string\n}) {\n\tconst redirectToUrl = new URL(`${getDomainUrl(request)}/verify`)\n\tredirectToUrl.searchParams.set(typeQueryParam, type)\n\tredirectToUrl.searchParams.set(targetQueryParam, target)\n\tif (redirectTo) {\n\t\tredirectToUrl.searchParams.set(redirectToQueryParam, redirectTo)\n\t}\n\treturn redirectToUrl\n}\n\nexport async function requireRecentVerification(request: Request) {\n\tconst user = await requireUserId(request)\n\tconst shouldReverify = await shouldRequestTwoFA(request)\n\tif (shouldReverify) {\n\t\tconst reqUrl = new URL(request.url)\n\t\tconst redirectUrl = getRedirectToUrl({\n\t\t\trequest,\n\t\t\ttarget: user.id,\n\t\t\ttype: twoFAVerificationType,\n\t\t\tredirectTo: reqUrl.pathname + reqUrl.search,\n\t\t})\n\t\tthrow await redirectWithToast(redirectUrl.toString(), {\n\t\t\ttitle: 'Please Reverify',\n\t\t\tdescription: 'Please reverify your account before proceeding',\n\t\t})\n\t}\n}\n\nexport async function prepareVerification({\n\tperiod,\n\trequest,\n\ttype,\n\ttarget,\n}: {\n\tperiod: number\n\trequest: Request\n\ttype: VerificationTypes\n\ttarget: string\n}) {\n\tconst verifyUrl = getRedirectToUrl({ request, type, target })\n\tconst redirectTo = new URL(verifyUrl.toString())\n\n\tconst { otp, ...verificationConfig } = generateTOTP({\n\t\talgorithm: 'SHA256',\n\t\t// Leaving off 0, O, and I on purpose to avoid confusing users.\n\t\tcharSet: 'ABCDEFGHJKLMNPQRSTUVWXYZ123456789',\n\t\tperiod,\n\t})\n\tconst verificationData = {\n\t\ttype,\n\t\ttarget,\n\t\t...verificationConfig,\n\t\texpiresAt: new Date(Date.now() + verificationConfig.period * 1000),\n\t}\n\n\t// add the otp to the url we'll email the user.\n\tverifyUrl.searchParams.set(codeQueryParam, otp)\n\n\treturn { otp, redirectTo, verifyUrl }\n}\n\nexport async function isCodeValid({\n\tcode,\n\ttype,\n\ttarget,\n}: {\n\tcode: string\n\ttype: VerificationTypes | typeof twoFAVerifyVerificationType\n\ttarget: string\n}) {\n\n\tconst result = await userAPI.verifyEmailCode(target, code);\n\n\tif (!result) return false\n\n\treturn true\n}\n\nexport async function validateRequest(\n\trequest: Request,\n\tbody: URLSearchParams | FormData,\n) {\n\tconst submission = await parseWithZod(body, {\n\t\tschema: VerifySchema.superRefine(async (data, ctx) => {\n\t\t\tconst codeIsValid = await isCodeValid({\n\t\t\t\tcode: data[codeQueryParam],\n\t\t\t\ttype: data[typeQueryParam],\n\t\t\t\ttarget: data[targetQueryParam],\n\t\t\t})\n\t\t\tif (!codeIsValid) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tpath: ['code'],\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: `Invalid code`,\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { value: submissionValue } = submission\n\n\tswitch (submissionValue[typeQueryParam]) {\n\t\tcase 'reset-password': {\n\t\t\t//await deleteVerification()\n\t\t\treturn handleResetPasswordVerification({ request, body, submission })\n\t\t}\n\t\tcase 'onboarding': {\n\t\t\t//await deleteVerification()\n\t\t\treturn handleOnboardingVerification({ request, body, submission })\n\t\t}\n\t\tcase 'change-email': {\n\t\t\t//await deleteVerification()\n\t\t\treturn handleChangeEmailVerification({ request, body, submission })\n\t\t}\n\t\tcase '2fa': {\n\t\t\treturn handleLoginTwoFactorVerification({ request, body, submission })\n\t\t}\n\t}\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport * as E from '@react-email/components'\nimport {\n\tjson,\n\tredirect,\n\ttype ActionFunctionArgs,\n\ttype MetaFunction,\n} from '@remix-run/node'\nimport { Link, useFetcher } from '@remix-run/react'\nimport { HoneypotInputs } from 'remix-utils/honeypot/react'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { sendEmail } from '#app/utils/email.server.ts'\nimport { checkHoneypot } from '#app/utils/honeypot.server.ts'\nimport { EmailSchema, UsernameSchema } from '#app/utils/user-validation.ts'\nimport { prepareVerification } from './verify.server.ts'\n\n//API\n// @ts-ignore\nimport { userAPI } from '../../api/userAPI'\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nconst ForgotPasswordSchema = z.object({\n\tusernameOrEmail: z.union([EmailSchema, UsernameSchema]),\n})\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst formData = await request.formData()\n\tcheckHoneypot(formData)\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: ForgotPasswordSchema.superRefine(async (data, ctx) => {\n\t\t\n\t\t\tconst { user, token, expirationDate } = await userAPI.checkExistingEmail(data.usernameOrEmail);\n\n\t\t\tif (!user) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tpath: ['usernameOrEmail'],\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: 'No user exists with this username or email',\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}),\n\t\tasync: true,\n\t})\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\tconst { usernameOrEmail } = submission.value\n\n\tconst { verifyUrl, redirectTo, otp } = await prepareVerification({\n\t\tperiod: 10 * 60,\n\t\trequest,\n\t\ttype: 'reset-password',\n\t\ttarget: usernameOrEmail,\n\t})\n\n\n\tconst response = await userAPI.sendEmailVerification(usernameOrEmail, otp, verifyUrl.toString());\n\n\tif (response.data.status === 'success') {\n\t\treturn redirect(redirectTo.toString())\n\t} else {\n\t\treturn json(\n\t\t\t{ result: submission.reply({ formErrors: [response.error.message] }) },\n\t\t\t{ status: 500 },\n\t\t)\n\t}\n}\n\nfunction ForgotPasswordEmail({\n\tonboardingUrl,\n\totp,\n}: {\n\tonboardingUrl: string\n\totp: string\n}) {\n\treturn (\n\t\t<E.Html lang=\"en\" dir=\"ltr\">\n\t\t\t<E.Container>\n\t\t\t\t<h1>\n\t\t\t\t\t<E.Text>Epic Notes Password Reset</E.Text>\n\t\t\t\t</h1>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>\n\t\t\t\t\t\tHere's your verification code: <strong>{otp}</strong>\n\t\t\t\t\t</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>Or click the link:</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<E.Link href={onboardingUrl}>{onboardingUrl}</E.Link>\n\t\t\t</E.Container>\n\t\t</E.Html>\n\t)\n}\n\nexport const meta: MetaFunction = () => {\n\treturn [{ title: 'Password Recovery for Epic Notes' }]\n}\n\nexport default function ForgotPasswordRoute() {\n\tconst forgotPassword = useFetcher<typeof action>()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'forgot-password-form',\n\t\tconstraint: getZodConstraint(ForgotPasswordSchema),\n\t\tlastResult: forgotPassword.data?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ForgotPasswordSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"container pb-32 pt-20\">\n\t\t\t<div className=\"flex flex-col justify-center\">\n\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t<h1 className=\"text-h1\">Forgot Password</h1>\n\t\t\t\t\t<p className=\"mt-3 text-body-md text-muted-foreground\">\n\t\t\t\t\t\tNo worries, we'll send you reset instructions.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"mx-auto mt-16 min-w-full max-w-sm sm:min-w-[368px]\">\n\t\t\t\t\t<forgotPassword.Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t\t\t\t<HoneypotInputs />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\t\t\thtmlFor: fields.usernameOrEmail.id,\n\t\t\t\t\t\t\t\t\tchildren: 'Email',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t\t\t\t...getInputProps(fields.usernameOrEmail, { type: 'text' }),\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terrors={fields.usernameOrEmail.errors}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t\t\t\t<div className=\"mt-6\">\n\t\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\t\t\tforgotPassword.state === 'submitting'\n\t\t\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t\t\t: (form.status ?? 'idle')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={forgotPassword.state !== 'idle'}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tRecover password\n\t\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</forgotPassword.Form>\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto=\"/login\"\n\t\t\t\t\t\tclassName=\"mt-11 text-center text-body-sm font-bold\"\n\t\t\t\t\t>\n\t\t\t\t\t\tBack to Login\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tjson,\n\ttype ActionFunctionArgs,\n\ttype LoaderFunctionArgs,\n\ttype MetaFunction,\n} from '@remix-run/node'\nimport { Form, Link, useActionData, useSearchParams } from '@remix-run/react'\nimport { HoneypotInputs } from 'remix-utils/honeypot/react'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { CheckboxField, ErrorList, Field } from '#app/components/forms.tsx'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { login, requireAnonymous, sessionKey } from '#app/utils/auth.server.ts'\nimport {\n\tProviderConnectionForm,\n\tproviderNames,\n} from '#app/utils/connections.tsx'\nimport { checkHoneypot } from '#app/utils/honeypot.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { PasswordSchema, UsernameSchema } from '#app/utils/user-validation.ts'\nimport { handleNewSession } from './login.server.ts'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { safeRedirect } from 'remix-utils/safe-redirect'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { verifySessionStorage } from '#app/utils/verification.server.ts'\n\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nconst LoginFormSchema = z.object({\n\tusername: UsernameSchema,\n\tpassword: PasswordSchema,\n\tredirectTo: z.string().optional(),\n\tremember: z.boolean().optional(),\n})\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tawait requireAnonymous(request)\n\treturn json({})\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tawait requireAnonymous(request)\n\tconst formData = await request.formData()\n\tcheckHoneypot(formData)\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: (intent) =>\n\t\t\tLoginFormSchema.transform(async (data, ctx) => {\n\t\t\t\tif (intent !== null) return { ...data, session: null }\n\n\t\t\t\tconst session = await login(data)\n\t\t\t\tif (!session) {\n\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\t\tmessage: 'Invalid username or password',\n\t\t\t\t\t})\n\t\t\t\t\treturn z.NEVER\n\t\t\t\t}\n\n\t\t\t\treturn { ...data, session }\n\t\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success' || !submission.value.session) {\n\t\treturn json(\n\t\t\t{ result: submission.reply({ hideFields: ['password'] }) },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tconst { session, remember, redirectTo } = submission.value\n\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\n\tauthSession.set(sessionKey, session.token)\n\tconst verifySession = await verifySessionStorage.getSession()\n\tconst headers = new Headers()\n\theaders.append(\n\t\t'set-cookie',\n\t\tawait authSessionStorage.commitSession(authSession, {\n\t\t\texpires: remember ? session.expirationDate : undefined,\n\t\t}),\n\t)\n\theaders.append(\n\t\t'set-cookie',\n\t\tawait verifySessionStorage.destroySession(verifySession),\n\t)\n\n\treturn redirectWithToast(\n\t\tsafeRedirect(redirectTo),\n\t\t{ title: 'Welcome Back', description: 'Lets get down to business!' },\n\t\t{ headers },\n\t)\n\t/*return handleNewSession({\n\t\trequest,\n\t\tsession,\n\t\tremember: remember ?? false,\n\t\tredirectTo,\n\t})*/\n}\n\nexport default function LoginPage() {\n\tconst actionData = useActionData<typeof action>()\n\tconst isPending = useIsPending()\n\tconst [searchParams] = useSearchParams()\n\tconst redirectTo = searchParams.get('redirectTo')\n\n\tconst [form, fields] = useForm({\n\t\tid: 'login-form',\n\t\tconstraint: getZodConstraint(LoginFormSchema),\n\t\tdefaultValue: { redirectTo },\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: LoginFormSchema })\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"flex min-h-full flex-col justify-center pb-32 pt-20\">\n\t\t\t<div className=\"mx-auto w-full max-w-md\">\n\t\t\t\t<div className=\"flex flex-col gap-3 text-center\">\n\t\t\t\t\t<h2 className=\"text-h2\">Your empire awaits!</h2>\n\t\t\t\t\t<p className=\"text-body-sm text-muted-foreground\">\n\t\t\t\t\t\tLog in to your account to continue building your monopoly\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<Spacer size=\"xs\" />\n\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"mx-auto w-full max-w-md px-8\">\n\t\t\t\t\t\t<Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t\t\t\t\t<HoneypotInputs />\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tlabelProps={{ children: 'Email' }}\n\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t...getInputProps(fields.username, { type: 'text' }),\n\t\t\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t\t\t\tclassName: 'lowercase',\n\t\t\t\t\t\t\t\t\tautoComplete: 'username',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terrors={fields.username.errors}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\t\tlabelProps={{ children: 'Password' }}\n\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t...getInputProps(fields.password, {\n\t\t\t\t\t\t\t\t\t\ttype: 'password',\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tautoComplete: 'current-password',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terrors={fields.password.errors}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<div className=\"flex justify-between\">\n\t\t\t\t\t\t\t\t<CheckboxField\n\t\t\t\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\t\t\t\thtmlFor: fields.remember.id,\n\t\t\t\t\t\t\t\t\t\tchildren: 'Remember me',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tbuttonProps={getInputProps(fields.remember, {\n\t\t\t\t\t\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\terrors={fields.remember.errors}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tto=\"/forgot-password\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"text-body-xs font-semibold\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t{...getInputProps(fields.redirectTo, { type: 'hidden' })}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t\t\t\t\t<div className=\"flex items-center justify-between gap-6 pt-3\">\n\t\t\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\t\t\tstatus={isPending ? 'pending' : (form.status ?? 'idle')}\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tLog in\n\t\t\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t<ul className=\"mt-5 flex flex-col gap-5 border-b-2 border-t-2 border-border py-3\">\n\t\t\t\t\t\t\t{providerNames.map((providerName) => (\n\t\t\t\t\t\t\t\t<li key={providerName}>\n\t\t\t\t\t\t\t\t\t<ProviderConnectionForm\n\t\t\t\t\t\t\t\t\t\ttype=\"Login\"\n\t\t\t\t\t\t\t\t\t\tproviderName={providerName}\n\t\t\t\t\t\t\t\t\t\tredirectTo={redirectTo}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<div className=\"flex items-center justify-center gap-2 pt-6\">\n\t\t\t\t\t\t\t<span className=\"text-muted-foreground\">New here?</span>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tto={\n\t\t\t\t\t\t\t\t\tredirectTo\n\t\t\t\t\t\t\t\t\t\t? `/signup?${encodeURIComponent(redirectTo)}`\n\t\t\t\t\t\t\t\t\t\t: '/signup'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCreate an account\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport const meta: MetaFunction = () => {\n\treturn [{ title: 'Login to Epic Notes' }]\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n","import { redirect, type ActionFunctionArgs } from '@remix-run/node'\nimport { logout } from '#app/utils/auth.server.ts'\n\nexport async function loader() {\n\treturn redirect('/')\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\treturn logout({ request })\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport * as E from '@react-email/components'\nimport {\n\tjson,\n\tredirect,\n\ttype ActionFunctionArgs,\n\ttype MetaFunction,\n} from '@remix-run/node'\nimport { Form, useActionData, useSearchParams } from '@remix-run/react'\nimport { HoneypotInputs } from 'remix-utils/honeypot/react'\nimport { z } from 'zod'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport {\n\tProviderConnectionForm,\n\tproviderNames,\n} from '#app/utils/connections.tsx'\nimport { sendEmail } from '#app/utils/email.server.ts'\nimport { checkHoneypot } from '#app/utils/honeypot.server.ts'\nimport { useIsPending } from '#app/utils/misc.tsx'\nimport { EmailSchema } from '#app/utils/user-validation.ts'\nimport { prepareVerification } from './verify.server.ts'\n\n// @ts-ignore\nimport { userAPI } from '../../api/userAPI';\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nconst SignupSchema = z.object({\n\temail: EmailSchema,\n})\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst formData = await request.formData()\n\n\tcheckHoneypot(formData)\n\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: SignupSchema.superRefine(async (data, ctx) => {\n\t\t\tconst { user, token, expirationDate } = await userAPI.checkExistingEmail(data.email);\n\n\t\t\tif (user) {\n\t\t\t\tctx.addIssue({\n\t\t\t\t\tpath: ['email'],\n\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\tmessage: 'A user already exists with this email',\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}),\n\t\tasync: true,\n\t})\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\tconst { email } = submission.value\n\tconst { verifyUrl, redirectTo, otp } = await prepareVerification({\n\t\tperiod: 10 * 60,\n\t\trequest,\n\t\ttype: 'onboarding',\n\t\ttarget: email,\n\t})\n\n\tconst response = await userAPI.sendEmailVerification(email, otp, verifyUrl.toString());\n\t\n\t/*const response = await sendEmail({\n\t\tto: email,\n\t\tsubject: `Welcome to Co Owners!`,\n\t\treact: <SignupEmail onboardingUrl={verifyUrl.toString()} otp={otp} />,\n\t})*/\n\n\tif (response.data.status === 'success') {\n\t\treturn redirect(redirectTo.toString())\n\t} else {\n\t\treturn json(\n\t\t\t{\n\t\t\t\tresult: submission.reply({ formErrors: [response.error.message] }),\n\t\t\t},\n\t\t\t{\n\t\t\t\tstatus: 500,\n\t\t\t},\n\t\t)\n\t}\n}\n\nexport function SignupEmail({\n\tonboardingUrl,\n\totp,\n}: {\n\tonboardingUrl: string\n\totp: string\n}) {\n\treturn (\n\t\t<E.Html lang=\"en\" dir=\"ltr\">\n\t\t\t<E.Container>\n\t\t\t\t<h1>\n\t\t\t\t\t<E.Text>Welcome to Epic Notes!</E.Text>\n\t\t\t\t</h1>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>\n\t\t\t\t\t\tHere's your verification code: <strong>{otp}</strong>\n\t\t\t\t\t</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\t<E.Text>Or click the link to get started:</E.Text>\n\t\t\t\t</p>\n\t\t\t\t<E.Link href={onboardingUrl}>{onboardingUrl}</E.Link>\n\t\t\t</E.Container>\n\t\t</E.Html>\n\t)\n}\n\nexport const meta: MetaFunction = () => {\n\treturn [{ title: 'Sign Up | Co Owners' }]\n}\n\nexport default function SignupRoute() {\n\tconst actionData = useActionData<typeof action>()\n\tconst isPending = useIsPending()\n\tconst [searchParams] = useSearchParams()\n\tconst redirectTo = searchParams.get('redirectTo')\n\n\tconst [form, fields] = useForm({\n\t\tid: 'signup-form',\n\t\tconstraint: getZodConstraint(SignupSchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\tconst result = parseWithZod(formData, { schema: SignupSchema })\n\t\t\treturn result\n\t\t},\n\t\tshouldRevalidate: 'onBlur',\n\t})\n\n\treturn (\n\t\t<div className=\"container flex flex-col justify-center pb-32 pt-20\">\n\t\t\t<div className=\"text-center\">\n\t\t\t\t<h1 className=\"text-h1\">Let's start building your empire!</h1>\n\t\t\t\t<p className=\"mt-3 text-body-md text-muted-foreground\">\n\t\t\t\t\tPlease enter your email.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className=\"mx-auto mt-16 min-w-full max-w-sm sm:min-w-[368px]\">\n\t\t\t\t<Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t\t\t<HoneypotInputs />\n\t\t\t\t\t<Field\n\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\thtmlFor: fields.email.id,\n\t\t\t\t\t\t\tchildren: 'Email',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t...getInputProps(fields.email, { type: 'email' }),\n\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t\tautoComplete: 'email',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terrors={fields.email.errors}\n\t\t\t\t\t/>\n\t\t\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\t\t\t\t\t<StatusButton\n\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\tstatus={isPending ? 'pending' : (form.status ?? 'idle')}\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</StatusButton>\n\t\t\t\t</Form>\n\t\t\t\t<ul className=\"mt-5 flex flex-col gap-5 border-b-2 border-t-2 border-border py-3\">\n\t\t\t\t\t{providerNames.map((providerName) => (\n\t\t\t\t\t\t<li key={providerName}>\n\t\t\t\t\t\t\t<ProviderConnectionForm\n\t\t\t\t\t\t\t\ttype=\"Signup\"\n\t\t\t\t\t\t\t\tproviderName={providerName}\n\t\t\t\t\t\t\t\tredirectTo={redirectTo}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn <GeneralErrorBoundary />\n}\n","import React from 'react';\n\nconst AboutSection = () => (\n  <div className=\"container mx-auto p-4\">\n    <h1 className=\"text-3xl font-bold mb-4\">About Community Owners</h1>\n    <p className=\"mb-4\">\n      Welcome to Community Owners, an innovative real-life Monopoly-inspired game that transforms how we interact with and invest in our local communities. By bringing the basic mechanics of business share structures and the development of economic value into the real world, we create meaningful opportunities for community members to participate in local economic growth and neighborhood enhancement.\n    </p>\n    <p className=\"mb-4\">\n      At Community Owners, we believe that thriving communities are built through active participation and strategic investment. Our platform enables players to purchase shares in local businesses ‚Äì all while earning real returns on their investments.\n    </p>\n    <p className=\"mb-4\">\n      Our game mechanics go beyond traditional investment by incorporating community-focused challenges, collaborative development opportunities, and special events that encourage players to think both strategically and socially. Whether you're interested in business investment, community development, or simply want to make a positive impact in your neighborhood, Community Owners provides an engaging way to participate in local growth.\n    </p>\n    <p className=\"mb-4\">\n      Join us in this exciting venture where gaming meets community development, and every move you make contributes to building stronger, more vibrant neighborhoods. Together, we're not just playing a game ‚Äì we're creating lasting positive change in our communities.\n    </p>\n    <p className=\"text-sm text-gray-600\">\n      For any questions or inquiries, please contact us at <a href=\"mailto:ptang@co-owners.ca\" className=\"text-blue-500 hover:underline\">ptang@co-owners.ca</a>.\n    </p>\n  </div>\n);\n\nexport default AboutSection;\n","export default \"__VITE_ASSET__Q2a1JfT7__\"","export default \"data:image/svg+xml,%3c?xml%20version='1.0'%20encoding='utf-8'?%3e%3c!--%20Generator:%20Adobe%20Illustrator%2015.1.0,%20SVG%20Export%20Plug-In%20.%20SVG%20Version:%206.00%20Build%200)%20--%3e%3c!DOCTYPE%20svg%20PUBLIC%20'-//W3C//DTD%20SVG%201.1//EN'%20'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3e%3csvg%20version='1.1'%20id='Layer_1'%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%20viewBox='0%200%20294.825%20258.982'%20xml:space='preserve'%3e%3cg%3e%3cpath%20fill='%238080F2'%20d='M97.021,99.016l48.432-27.962c1.212-0.7,2.706-0.7,3.918,0l48.433,27.962%20c1.211,0.7,1.959,1.993,1.959,3.393v55.924c0,1.399-0.748,2.693-1.959,3.394l-48.433,27.962c-1.212,0.7-2.706,0.7-3.918,0%20l-48.432-27.962c-1.212-0.7-1.959-1.994-1.959-3.394v-55.924C95.063,101.009,95.81,99.716,97.021,99.016'/%3e%3cpath%20fill='%234B32C3'%20d='M273.336,124.488L215.469,23.816c-2.102-3.64-5.985-6.325-10.188-6.325H89.545%20c-4.204,0-8.088,2.685-10.19,6.325l-57.867,100.45c-2.102,3.641-2.102,8.236,0,11.877l57.867,99.847%20c2.102,3.64,5.986,5.501,10.19,5.501h115.735c4.203,0,8.087-1.805,10.188-5.446l57.867-100.01%20C275.439,132.396,275.439,128.128,273.336,124.488%20M225.419,172.898c0,1.48-0.891,2.849-2.174,3.59l-73.71,42.527%20c-1.282,0.74-2.888,0.74-4.17,0l-73.767-42.527c-1.282-0.741-2.179-2.109-2.179-3.59V87.843c0-1.481,0.884-2.849,2.167-3.59%20l73.707-42.527c1.282-0.741,2.886-0.741,4.168,0l73.772,42.527c1.283,0.741,2.186,2.109,2.186,3.59V172.898z'/%3e%3c/g%3e%3c/svg%3e\"","export default \"__VITE_ASSET__yoDGwirA__\"","export default \"__VITE_ASSET__2JQ90qDL__\"","export default \"data:image/svg+xml,%3csvg%20width='98'%20height='96'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20fill-rule='evenodd'%20clip-rule='evenodd'%20d='M48.854%200C21.839%200%200%2022%200%2049.217c0%2021.756%2013.993%2040.172%2033.405%2046.69%202.427.49%203.316-1.059%203.316-2.362%200-1.141-.08-5.052-.08-9.127-13.59%202.934-16.42-5.867-16.42-5.867-2.184-5.704-5.42-7.17-5.42-7.17-4.448-3.015.324-3.015.324-3.015%204.934.326%207.523%205.052%207.523%205.052%204.367%207.496%2011.404%205.378%2014.235%204.074.404-3.178%201.699-5.378%203.074-6.6-10.839-1.141-22.243-5.378-22.243-24.283%200-5.378%201.94-9.778%205.014-13.2-.485-1.222-2.184-6.275.486-13.038%200%200%204.125-1.304%2013.426%205.052a46.97%2046.97%200%200%201%2012.214-1.63c4.125%200%208.33.571%2012.213%201.63%209.302-6.356%2013.427-5.052%2013.427-5.052%202.67%206.763.97%2011.816.485%2013.038%203.155%203.422%205.015%207.822%205.015%2013.2%200%2018.905-11.404%2023.06-22.324%2024.283%201.78%201.548%203.316%204.481%203.316%209.126%200%206.6-.08%2011.897-.08%2013.526%200%201.304.89%202.853%203.316%202.364%2019.412-6.52%2033.405-24.935%2033.405-46.691C97.707%2022%2075.788%200%2048.854%200z'%20fill='%2324292f'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3c?xml%20version='1.0'%20encoding='UTF-8'?%3e%3csvg%20width='128px'%20height='128px'%20viewBox='0%200%20128%20128'%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'%20xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3ctitle%3eLOGO%3c/title%3e%3cg%20id='LOGO'%20stroke='none'%20stroke-width='1'%20fill='none'%20fill-rule='evenodd'%3e%3crect%20id='Rectangle'%20fill='%23000000'%20x='0'%20y='0'%20width='128'%20height='128'%20rx='24'%3e%3c/rect%3e%3cg%20id='logo'%20transform='translate(-27.172013,%20-27.850148)'%20stroke-width='17.85'%3e%3cg%20id='Group'%20transform='translate(91.172013,%2091.850148)%20rotate(-42.000000)%20translate(-91.172013,%20-91.850148)%20translate(30.956217,%2022.472129)'%3e%3cpath%20d='M63.77676,39.8567809%20C66.7201615,39.8567809%2069.3849115,41.0498301%2071.3138112,42.9787297%20C73.2427108,44.9076293%2074.43576,47.5723793%2074.43576,50.5157809%20C74.43576,53.1536096%2073.4576536,55.6977418%2071.690581,57.6562093%20L40.9074742,91.7734893%20C40.2942428,92.4531409%2039.4635827,92.8198888%2038.6163176,92.863416%20C37.7690524,92.9069431%2036.9051822,92.6272495%2036.2255306,92.0140181%20L5.20189513,57.6562093%20C3.23012026,55.470868%202.33079774,52.693193%202.47075426,49.9689097%20C2.61071079,47.2446264%203.78994636,44.5737347%205.97528769,42.6019599%20C7.93375514,40.8348872%2010.4778874,39.8567809%2013.1157161,39.8567809%20Z'%20id='back'%20stroke='%23FF3333'%20opacity='0.48'%20transform='translate(38.446238,%2069.378019)%20rotate(90.000000)%20translate(-38.446238,%20-69.378019)%20'%3e%3c/path%3e%3cpath%20d='M123.833688,39.8567809%20C124.7491,39.8567809%20125.57785,40.2278249%20126.177747,40.8277219%20C126.777644,41.4276189%20127.148688,42.2563689%20127.148688,43.1717809%20C127.148688,43.9921582%20126.844492,44.7833955%20126.294924,45.3924883%20L84.4465906,91.7734893%20C83.8333592,92.4531409%2083.0026991,92.8198888%2082.1554339,92.863416%20C81.3081688,92.9069431%2080.4442986,92.6272495%2079.764647,92.0140181%20L37.6757849,45.3924883%20C37.0625535,44.7128367%2036.7828599,43.8489665%2036.826387,43.0017013%20C36.8699142,42.1544362%2037.2366621,41.3237761%2037.9163137,40.7105447%20C38.5254064,40.1609766%2039.3166437,39.8567809%2040.1370211,39.8567809%20Z'%20id='front'%20stroke='%23FF6A33'%20transform='translate(81.985354,%2069.378019)%20rotate(-90.000000)%20translate(-81.985354,%20-69.378019)%20'%3e%3c/path%3e%3c/g%3e%3c/g%3e%3c/g%3e%3c/svg%3e\"","export default \"__VITE_ASSET__DSPjnI_X__\"","export default \"__VITE_ASSET__UhKH8YsL__\"","export default \"__VITE_ASSET__GbOWJe85__\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='250'%20height='250'%20viewBox='0%200%2025%2025'%20fill='none'%20style='margin-right:3px'%3e%3cpath%20d='M12%2025C7.58173%2025%204%2021.4183%204%2017C4%2012.5817%207.58173%209%2012%209V25Z'%20fill='currentcolor'%3e%3c/path%3e%3cpath%20d='M12%200H4V8H12V0Z'%20fill='currentcolor'%3e%3c/path%3e%3cpath%20d='M17%208C19.2091%208%2021%206.20914%2021%204C21%201.79086%2019.2091%200%2017%200C14.7909%200%2013%201.79086%2013%204C13%206.20914%2014.7909%208%2017%208Z'%20fill='currentcolor'%3e%3c/path%3e%3c/svg%3e\"","export default \"__VITE_ASSET__BQ4k4JSF__\"","export default \"data:image/svg+xml,%3csvg%20width='800'%20height='800'%20viewBox='0%200%20800%20800'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3crect%20width='800'%20height='800'%20fill='%23212121'/%3e%3cg%20filter='url(%23filter0_dd_126_53)'%3e%3cpath%20fill-rule='evenodd'%20clip-rule='evenodd'%20d='M587.947%20527.768C592.201%20582.418%20592.201%20608.036%20592.201%20636H465.756C465.756%20629.909%20465.865%20624.337%20465.975%20618.687C466.317%20601.123%20466.674%20582.807%20463.828%20545.819C460.067%20491.667%20436.748%20479.634%20393.871%20479.634H355.883H195V381.109H399.889C454.049%20381.109%20481.13%20364.633%20481.13%20321.011C481.13%20282.654%20454.049%20259.41%20399.889%20259.41H195V163H422.456C545.069%20163%20606%20220.912%20606%20313.42C606%20382.613%20563.123%20427.739%20505.201%20435.26C554.096%20445.037%20582.681%20472.865%20587.947%20527.768Z'%20fill='%23E8F2FF'/%3e%3cpath%20d='M195%20636V562.553H328.697C351.029%20562.553%20355.878%20579.116%20355.878%20588.994V636H195Z'%20fill='%23E8F2FF'/%3e%3c/g%3e%3cdefs%3e%3cfilter%20id='filter0_dd_126_53'%20x='131'%20y='99'%20width='539'%20height='601'%20filterUnits='userSpaceOnUse'%20color-interpolation-filters='sRGB'%3e%3cfeFlood%20flood-opacity='0'%20result='BackgroundImageFix'/%3e%3cfeColorMatrix%20in='SourceAlpha'%20type='matrix'%20values='0%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%20127%200'%20result='hardAlpha'/%3e%3cfeOffset/%3e%3cfeGaussianBlur%20stdDeviation='28'/%3e%3cfeComposite%20in2='hardAlpha'%20operator='out'/%3e%3cfeColorMatrix%20type='matrix'%20values='0%200%200%200%200.223529%200%200%200%200%200.572549%200%200%200%200%201%200%200%200%201%200'/%3e%3cfeBlend%20mode='normal'%20in2='BackgroundImageFix'%20result='effect1_dropShadow_126_53'/%3e%3cfeColorMatrix%20in='SourceAlpha'%20type='matrix'%20values='0%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%200%20127%200'%20result='hardAlpha'/%3e%3cfeOffset/%3e%3cfeGaussianBlur%20stdDeviation='32'/%3e%3cfeComposite%20in2='hardAlpha'%20operator='out'/%3e%3cfeColorMatrix%20type='matrix'%20values='0%200%200%200%200.223529%200%200%200%200%200.572549%200%200%200%200%201%200%200%200%200.9%200'/%3e%3cfeBlend%20mode='normal'%20in2='effect1_dropShadow_126_53'%20result='effect2_dropShadow_126_53'/%3e%3cfeBlend%20mode='normal'%20in='SourceGraphic'%20in2='effect2_dropShadow_126_53'%20result='shape'/%3e%3c/filter%3e%3c/defs%3e%3c/svg%3e\"","export default \"__VITE_ASSET__BmZrEPSC__\"","export default \"data:image/svg+xml,%3csvg%20class='css-lfbo6j%20e10nushx4'%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20222%2066'%20width='400'%20height='119'%3e%3cpath%20d='M29,2.26a4.67,4.67,0,0,0-8,0L14.42,13.53A32.21,32.21,0,0,1,32.17,40.19H27.55A27.68,27.68,0,0,0,12.09,17.47L6,28a15.92,15.92,0,0,1,9.23,12.17H4.62A.76.76,0,0,1,4,39.06l2.94-5a10.74,10.74,0,0,0-3.36-1.9l-2.91,5a4.54,4.54,0,0,0,1.69,6.24A4.66,4.66,0,0,0,4.62,44H19.15a19.4,19.4,0,0,0-8-17.31l2.31-4A23.87,23.87,0,0,1,23.76,44H36.07a35.88,35.88,0,0,0-16.41-31.8l4.67-8a.77.77,0,0,1,1.05-.27c.53.29,20.29,34.77,20.66,35.17a.76.76,0,0,1-.68,1.13H40.6q.09,1.91,0,3.81h4.78A4.59,4.59,0,0,0,50,39.43a4.49,4.49,0,0,0-.62-2.28Z%20M124.32,28.28,109.56,9.22h-3.68V34.77h3.73V15.19l15.18,19.58h3.26V9.22h-3.73ZM87.15,23.54h13.23V20.22H87.14V12.53h14.93V9.21H83.34V34.77h18.92V31.45H87.14ZM71.59,20.3h0C66.44,19.06,65,18.08,65,15.7c0-2.14,1.89-3.59,4.71-3.59a12.06,12.06,0,0,1,7.07,2.55l2-2.83a14.1,14.1,0,0,0-9-3c-5.06,0-8.59,3-8.59,7.27,0,4.6,3,6.19,8.46,7.52C74.51,24.74,76,25.78,76,28.11s-2,3.77-5.09,3.77a12.34,12.34,0,0,1-8.3-3.26l-2.25,2.69a15.94,15.94,0,0,0,10.42,3.85c5.48,0,9-2.95,9-7.51C79.75,23.79,77.47,21.72,71.59,20.3ZM195.7,9.22l-7.69,12-7.64-12h-4.46L186,24.67V34.78h3.84V24.55L200,9.22Zm-64.63,3.46h8.37v22.1h3.84V12.68h8.37V9.22H131.08ZM169.41,24.8c3.86-1.07,6-3.77,6-7.63,0-4.91-3.59-8-9.38-8H154.67V34.76h3.8V25.58h6.45l6.48,9.2h4.44l-7-9.82Zm-10.95-2.5V12.6h7.17c3.74,0,5.88,1.77,5.88,4.84s-2.29,4.86-5.84,4.86Z'%20transform='translate(11,%2011)'%20fill='%23362d59'%3e%3c/path%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20256%20256'%3e%3crect%20width='256'%20height='256'%20fill='none'%3e%3c/rect%3e%3cline%20x1='208'%20y1='128'%20x2='128'%20y2='208'%20fill='none'%20stroke='currentColor'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='16'%3e%3c/line%3e%3cline%20x1='192'%20y1='40'%20x2='40'%20y2='192'%20fill='none'%20stroke='currentColor'%20stroke-linecap='round'%20stroke-linejoin='round'%20stroke-width='16'%3e%3c/line%3e%3c/svg%3e\"","export default \"__VITE_ASSET__C3SenuCW__\"","export default \"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20fill='none'%20viewBox='0%200%2054%2033'%3e%3cg%20clip-path='url(%23prefix__clip0)'%3e%3cpath%20fill='%2338bdf8'%20fill-rule='evenodd'%20d='M27%200c-7.2%200-11.7%203.6-13.5%2010.8%202.7-3.6%205.85-4.95%209.45-4.05%202.054.513%203.522%202.004%205.147%203.653C30.744%2013.09%2033.808%2016.2%2040.5%2016.2c7.2%200%2011.7-3.6%2013.5-10.8-2.7%203.6-5.85%204.95-9.45%204.05-2.054-.513-3.522-2.004-5.147-3.653C36.756%203.11%2033.692%200%2027%200zM13.5%2016.2C6.3%2016.2%201.8%2019.8%200%2027c2.7-3.6%205.85-4.95%209.45-4.05%202.054.514%203.522%202.004%205.147%203.653C17.244%2029.29%2020.308%2032.4%2027%2032.4c7.2%200%2011.7-3.6%2013.5-10.8-2.7%203.6-5.85%204.95-9.45%204.05-2.054-.513-3.522-2.004-5.147-3.653C23.256%2019.31%2020.192%2016.2%2013.5%2016.2z'%20clip-rule='evenodd'/%3e%3c/g%3e%3cdefs%3e%3cclipPath%20id='prefix__clip0'%3e%3cpath%20fill='%23fff'%20d='M0%200h54v32.4H0z'/%3e%3c/clipPath%3e%3c/defs%3e%3c/svg%3e\"","export default \"__VITE_ASSET__gIEtGA3$__\"","export default \"data:image/svg+xml,%3c?xml%20version='1.0'%20encoding='UTF-8'?%3e%3csvg%20width='512'%20height='512'%20fill='none'%20version='1.1'%20viewBox='0%200%20512%20512'%20xmlns='http://www.w3.org/2000/svg'%20xmlns:cc='http://creativecommons.org/ns%23'%20xmlns:dc='http://purl.org/dc/elements/1.1/'%20xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns%23'%3e%3ctitle%3eTypeScript%20logo%3c/title%3e%3crect%20width='512'%20height='512'%20rx='50'%20fill='%233178c6'/%3e%3cpath%20d='m317%20407v50c8.1%204.2%2018%207.3%2029%209.4s23%203.1%2035%203.1c12%200%2023-1.1%2034-3.4%2011-2.3%2020-6.1%2028-11%208.1-5.3%2015-12%2019-21s7.1-19%207.1-32c0-9.1-1.4-17-4.1-24s-6.6-13-12-18c-5.1-5.3-11-10-18-14s-15-8.2-24-12c-6.6-2.7-12-5.3-18-7.9-5.2-2.6-9.7-5.2-13-7.8-3.7-2.7-6.5-5.5-8.5-8.4-2-3-3-6.3-3-10%200-3.4%200.89-6.5%202.7-9.3s4.3-5.1%207.5-7.1c3.2-2%207.2-3.5%2012-4.6%204.7-1.1%209.9-1.6%2016-1.6%204.2%200%208.6%200.31%2013%200.94%204.6%200.63%209.3%201.6%2014%202.9%204.7%201.3%209.3%202.9%2014%204.9%204.4%202%208.5%204.3%2012%206.9v-47c-7.6-2.9-16-5.1-25-6.5s-19-2.1-31-2.1c-12%200-23%201.3-34%203.8s-20%206.5-28%2012c-8.1%205.4-14%2012-19%2021-4.7%208.4-7%2018-7%2030%200%2015%204.3%2028%2013%2038%208.6%2011%2022%2019%2039%2027%206.9%202.8%2013%205.6%2019%208.3s11%205.5%2015%208.4c4.3%202.9%207.7%206.1%2010%209.5%202.5%203.4%203.8%207.4%203.8%2012%200%203.2-0.78%206.2-2.3%209s-3.9%205.2-7.1%207.2-7.1%203.6-12%204.8c-4.7%201.1-10%201.7-17%201.7-11%200-22-1.9-32-5.7-11-3.8-21-9.5-30-17zm-84-123h64v-41h-179v41h64v183h51z'%20clip-rule='evenodd'%20fill='%23fff'%20fill-rule='evenodd'%20style='fill:%23fff'/%3e%3c/svg%3e\"","export default \"data:image/svg+xml,%3csvg%20width='165'%20height='165'%20viewBox='0%200%20165%20165'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M120.831%2057.2543L84.693%20109.505C84.3099%20110.059%2083.7558%20110.474%2083.1148%20110.687C82.4738%20110.9%2081.7809%20110.898%2081.1412%20110.684C80.5015%20110.469%2079.95%20110.052%2079.5702%20109.497C79.1905%20108.941%2079.0032%20108.277%2079.037%20107.606L80.4833%2078.7582L57.1343%2073.8064C56.6353%2073.7007%2056.1704%2073.474%2055.7807%2073.1465C55.391%2072.8191%2055.0885%2072.4009%2054.9001%2071.929C54.7117%2071.4571%2054.6432%2070.9461%2054.7006%2070.4412C54.758%2069.9364%2054.9395%2069.4532%2055.2291%2069.0345L91.3675%2016.7837C91.7507%2016.2294%2092.3048%2015.8145%2092.9458%2015.6018C93.5869%2015.3891%2094.2798%2015.3902%2094.9196%2015.6051C95.5593%2015.8199%2096.1109%2016.2367%2096.4906%2016.7923C96.8703%2017.3478%2097.0575%2018.0117%2097.0236%2018.6833L95.5773%2047.5314L118.926%2052.4828C119.425%2052.5885%20119.89%2052.8152%20120.28%2053.1426C120.67%2053.4701%20120.972%2053.8883%20121.16%2054.3602C121.349%2054.8321%20121.417%2055.3431%20121.36%2055.8479C121.303%2056.3528%20121.121%2056.836%20120.831%2057.2547L120.831%2057.2543Z'%20fill='%23FCC72B'/%3e%3cpath%20d='M82.9866%20153.343C82.0254%20153.344%2081.0735%20153.156%2080.1855%20152.788C79.2975%20152.42%2078.4909%20151.88%2077.8122%20151.2L43.6658%20117.056C42.2998%20115.683%2041.5341%20113.824%2041.5366%20111.887C41.5392%20109.95%2042.3098%20108.092%2043.6796%20106.723C45.0493%20105.353%2046.9064%20104.582%2048.8435%20104.579C50.7807%20104.577%2052.6399%20105.342%2054.0134%20106.708L82.9866%20135.678L146.105%2072.5626C147.481%2071.2088%20149.336%2070.4536%20151.266%2070.4615C153.197%2070.4693%20155.046%2071.2396%20156.41%2072.6045C157.775%2073.9695%20158.546%2075.8184%20158.554%2077.7487C158.561%2079.679%20157.806%2081.5342%20156.452%2082.9101L88.1597%20151.2C87.4811%20151.881%2086.6747%20152.42%2085.7869%20152.788C84.8992%20153.156%2083.9475%20153.344%2082.9866%20153.343Z'%20fill='%23729B1B'/%3e%3cpath%20d='M82.9572%20153.343C83.9184%20153.344%2084.8703%20153.156%2085.7583%20152.788C86.6463%20152.42%2087.4528%20151.88%2088.1316%20151.2L122.278%20117.056C123.644%20115.683%20124.41%20113.824%20124.407%20111.887C124.405%20109.95%20123.634%20108.092%20122.264%20106.723C120.894%20105.353%20119.037%20104.582%20117.1%20104.579C115.163%20104.577%20113.304%20105.342%20111.93%20106.708L82.9572%20135.678L19.8389%2072.5626C18.4629%2071.2088%2016.6077%2070.4536%2014.6775%2070.4615C12.7472%2070.4693%2010.8982%2071.2396%209.53331%2072.6045C8.16839%2073.9695%207.39811%2075.8184%207.39025%2077.7487C7.38239%2079.679%208.13759%2081.5342%209.49135%2082.9101L77.784%20151.2C78.4627%20151.881%2079.2691%20152.42%2080.1568%20152.788C81.0446%20153.156%2081.9963%20153.344%2082.9572%20153.343Z'%20fill='%23729B1B'%20fill-opacity='0.5'/%3e%3c/svg%3e\"","export default \"__VITE_ASSET__DTiGmrs$__\"","import docker from './docker.svg'\nimport eslint from './eslint.svg'\nimport fakerJS from './faker.svg'\nimport fly from './fly.svg'\nimport github from './github.svg'\nimport msw from './msw.svg'\nimport playwright from './playwright.svg'\nimport prettier from './prettier.svg'\nimport prisma from './prisma.svg'\nimport radixUI from './radix.svg'\nimport reactEmail from './react-email.svg'\nimport remix from './remix.svg'\nimport resend from './resend.svg'\nimport sentry from './sentry.svg'\nimport shadcnUI from './shadcn-ui.svg'\nimport sqlite from './sqlite.svg'\nimport tailwind from './tailwind.svg'\nimport testingLibrary from './testing-library.png'\nimport typescript from './typescript.svg'\nimport vitest from './vitest.svg'\nimport zod from './zod.svg'\n\nexport { default as stars } from './stars.jpg'\n\nexport const logos = [\n\t{\n\t\tsrc: remix,\n\t\talt: 'Remix',\n\t\thref: 'https://remix.run',\n\t\tcolumn: 1,\n\t\trow: 1,\n\t},\n\t{\n\t\tsrc: fly,\n\t\talt: 'Fly.io',\n\t\thref: 'https://fly.io',\n\t\tcolumn: 1,\n\t\trow: 2,\n\t},\n\t{\n\t\tsrc: sqlite,\n\t\talt: 'SQLite',\n\t\thref: 'https://sqlite.org',\n\t\tcolumn: 1,\n\t\trow: 3,\n\t},\n\t{\n\t\tsrc: prisma,\n\t\talt: 'Prisma',\n\t\thref: 'https://prisma.io',\n\t\tcolumn: 2,\n\t\trow: 2,\n\t},\n\t{\n\t\tsrc: zod,\n\t\talt: 'Zod',\n\t\thref: 'https://zod.dev/',\n\t\tcolumn: 2,\n\t\trow: 3,\n\t},\n\t{\n\t\tsrc: github,\n\t\talt: 'GitHub',\n\t\thref: 'https://github.com',\n\t\tcolumn: 2,\n\t\trow: 4,\n\t},\n\t{\n\t\tsrc: resend,\n\t\talt: 'Resend',\n\t\thref: 'https://resend.com',\n\t\tcolumn: 2,\n\t\trow: 5,\n\t},\n\t{\n\t\tsrc: reactEmail,\n\t\talt: 'React Email',\n\t\thref: 'https://react.email',\n\t\tcolumn: 2,\n\t\trow: 6,\n\t},\n\t{\n\t\tsrc: tailwind,\n\t\talt: 'Tailwind CSS',\n\t\thref: 'https://tailwindcss.com',\n\t\tcolumn: 3,\n\t\trow: 3,\n\t},\n\t{\n\t\tsrc: radixUI,\n\t\talt: 'Radix UI',\n\t\thref: 'https://www.radix-ui.com/',\n\t\tcolumn: 3,\n\t\trow: 4,\n\t},\n\t{\n\t\tsrc: shadcnUI,\n\t\talt: 'shadcn/ui',\n\t\thref: 'https://ui.shadcn.com/',\n\t\tcolumn: 3,\n\t\trow: 5,\n\t},\n\t{\n\t\tsrc: playwright,\n\t\talt: 'Playwright',\n\t\thref: 'https://playwright.dev/',\n\t\tcolumn: 4,\n\t\trow: 1,\n\t},\n\t{\n\t\tsrc: msw,\n\t\talt: 'MSW',\n\t\thref: 'https://mswjs.io',\n\t\tcolumn: 4,\n\t\trow: 2,\n\t},\n\t{\n\t\tsrc: fakerJS,\n\t\talt: 'Faker.js',\n\t\thref: 'https://fakerjs.dev/',\n\t\tcolumn: 4,\n\t\trow: 3,\n\t},\n\t{\n\t\tsrc: vitest,\n\t\talt: 'Vitest',\n\t\thref: 'https://vitest.dev',\n\t\tcolumn: 4,\n\t\trow: 4,\n\t},\n\t{\n\t\tsrc: testingLibrary,\n\t\talt: 'Testing Library',\n\t\thref: 'https://testing-library.com',\n\t\tcolumn: 4,\n\t\trow: 5,\n\t},\n\t{\n\t\tsrc: docker,\n\t\talt: 'Docker',\n\t\thref: 'https://www.docker.com',\n\t\tcolumn: 4,\n\t\trow: 6,\n\t},\n\t{\n\t\tsrc: typescript,\n\t\talt: 'TypeScript',\n\t\thref: 'https://typescriptlang.org',\n\t\tcolumn: 5,\n\t\trow: 2,\n\t},\n\t{\n\t\tsrc: prettier,\n\t\talt: 'Prettier',\n\t\thref: 'https://prettier.io',\n\t\tcolumn: 5,\n\t\trow: 3,\n\t},\n\t{\n\t\tsrc: eslint,\n\t\talt: 'ESLint',\n\t\thref: 'https://eslint.org',\n\t\tcolumn: 5,\n\t\trow: 4,\n\t},\n\t{\n\t\tsrc: sentry,\n\t\talt: 'Sentry',\n\t\thref: 'https://sentry.io',\n\t\tcolumn: 5,\n\t\trow: 5,\n\t},\n]\n","import { api } from \"./config/axiosConfig\";\n\nexport const generalAPI = {\n\n  getAnnouncements: async function () {\n\n      const response = await api.request({\n        url: `/general/announcements`,\n        method: \"GET\",\n      })\n      \n      // returning the product returned by the API\n      return response.data;\n  },\n\n  getTrendingBusinesses: async function (id) {\n\n    const response = await api.request({\n      url: `/general/trendingBusinesses`,\n      method: \"GET\",\n    })\n    \n    // returning the product returned by the API\n    return response.data;\n  },\n\n  getDownTrendingBusinesses: async function (id, email, amount, paymentId, status) {\n\n    const response = await api.request({\n      url: `/general/downtrendingBusinesses`,\n      method: \"GET\",\n    })\n    \n    // returning the product returned by the API\n    return response.data;\n  },\n\n  getLocalCompanies: async function (latitude, longitude) {\n\n    const response = await api.request({\n      url: `/general/localBusinesses`,\n      method: \"GET\",\n      params: {\n        latitude: latitude,\n        longitude: longitude\n      }\n    })\n    \n    // returning the product returned by the API\n    return response.data;\n  },\n\n  getPublicCompany: async function (id) {\n\n    const response = await api.request({\n      url: `/general/getStock`,\n      method: \"GET\",\n      params: {\n        businessId: id\n      }\n    })\n    \n    // returning the product returned by the API\n    return response.data;\n  }\n};","import { type MetaFunction, LoaderFunction, json } from '@remix-run/node';\nimport { useLoaderData, Link } from '@remix-run/react';\nimport {\n\tTooltip,\n\tTooltipContent,\n\tTooltipProvider,\n\tTooltipTrigger,\n} from '#app/components/ui/tooltip.tsx'\nimport { cn } from '#app/utils/misc.tsx'\nimport { logos } from './logos/logos.ts'\n\nimport { useNavigate } from 'react-router-dom';\n\nimport { sessionKey } from '#app/utils/auth.server.ts'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { redirect } from '@remix-run/node';\n\n//API Calls\n// @ts-ignore\nimport { generalAPI } from \"../../api/generalAPI.js\"; // Adjust the path as necessary\n// @ts-ignore\nimport { userAPI } from '../../api/userAPI';\n\n// Tailwind Grid cell classes lookup\nconst columnClasses: Record<(typeof logos)[number]['column'], string> = {\n\t1: 'xl:col-start-1',\n\t2: 'xl:col-start-2',\n\t3: 'xl:col-start-3',\n\t4: 'xl:col-start-4',\n\t5: 'xl:col-start-5',\n}\nconst rowClasses: Record<(typeof logos)[number]['row'], string> = {\n\t1: 'xl:row-start-1',\n\t2: 'xl:row-start-2',\n\t3: 'xl:row-start-3',\n\t4: 'xl:row-start-4',\n\t5: 'xl:row-start-5',\n\t6: 'xl:row-start-6',\n}\n\n// Declare Announcement object\ninterface Announcement {\n    id: string;\n    name: string;\n    logo: string;\n    description: string;\n\twebsite: string;\n    location: {\n\t\taddress: string,\n\t\tcity: string,\n\t\tstate: string,\n\t\tcountry: string\n\t}\n    coordinates: {\n\t\ttype: string,\n\t\tcoordinates: [number, number]\n\t}\n}\n\n// Declare Trending Business object\ninterface TrendingBusiness {\n\tlogo: string;\n\tname: string;\n\tbusinessId: string;\n\tgrowthAmount: number;\n\tgrowthPercentage: number;\n\tcurrentPricePerShare: number;\n}\n\n// Declare Down Trending Business object {\ninterface DownTrendingBusiness {\n\tlogo: string;\n\tname: string;\n\tbusinessId: string;\n\tdifference: number;\n\tlastValuation: number;\n\tsecondLastValuation: number;\n\tchangePercentage: number;\n}\n// Define the loader function to fetch data\nexport const loader: LoaderFunction = async ({request}) => {\n\n\t//Confirmed we are logged in as admin\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\n    const session = authSession.get(sessionKey);\n\n    if (session) {\n\n        //Get User\n        const user = await userAPI.checklogintoken(session);\n\n        if (user) {\n\n\t\t\t// Fetch data here\n\t\t\tconst announcements = await generalAPI.getAnnouncements();\n\n\t\t\t// Fetch trending businesses\n\t\t\tconst trendingBusinesses = await generalAPI.getTrendingBusinesses();\n\n\t\t\t// Fetch downtrending businesses\n\t\t\tconst downtrendingBusinesses = await generalAPI.getDownTrendingBusinesses();\n\n\t\t\treturn json({\n\t\t\t\tannouncements,\n\t\t\t\ttrendingBusinesses,\n\t\t\t\tdowntrendingBusinesses,\n\t\t\t\tuserId: user._id\n\t\t\t});\n\t\t}\n\t\telse {\n\n\t\t\t// Fetch data here\n\t\t\tconst announcements = await generalAPI.getAnnouncements();\n\n\t\t\t// Fetch trending businesses\n\t\t\tconst trendingBusinesses = await generalAPI.getTrendingBusinesses();\n\n\t\t\t// Fetch downtrending businesses\n\t\t\tconst downtrendingBusinesses = await generalAPI.getDownTrendingBusinesses();\n\n\t\t\treturn json({\n\t\t\t\tannouncements,\n\t\t\t\ttrendingBusinesses,\n\t\t\t\tdowntrendingBusinesses\n\t\t\t});\n\t\t}\n\t}\n\telse {\t\n\t\t// Fetch data here\n\t\tconst announcements = await generalAPI.getAnnouncements();\n\n\t\t// Fetch trending businesses\n\t\tconst trendingBusinesses = await generalAPI.getTrendingBusinesses();\n\n\t\t// Fetch downtrending businesses\n\t\tconst downtrendingBusinesses = await generalAPI.getDownTrendingBusinesses();\n\n\t\treturn json({\n\t\t\tannouncements,\n\t\t\ttrendingBusinesses,\n\t\t\tdowntrendingBusinesses\n\t\t});\n\t}\n};\n\n\n// Meta function to add social media headers\nexport const meta: MetaFunction = () => {\n\t\n\treturn [\n\t  { title: `Co Owners` },\n\t  { property: \"og:title\", content: `Co-Owners` },\n\t  { property: \"og:description\", content: `The CommUnity Owners Monopoly Game` },\n\t  { property: \"og:image\", content: `https://co-owners.ca/logo.png` },\n\t  { property: \"og:url\", content: `https://co-owners.ca/` },\n\t  { property: \"og:type\", content: \"website\" },\n\t  { name: \"twitter:card\", content: \"summary_large_image\" },\n\t  { name: \"twitter:title\", content: `Co-Owners` },\n\t  { name: \"twitter:description\", content: `The CommUnity Owners Monopoly Game` },\n\t  { name: \"twitter:image\", content: `https://co-owners.ca/logo.png` },\n\t  { name: \"twitter:url\", content: `https://co-owners.ca/` },\n\t];\n};\n\nexport default function Index() {\n\n\tconst navigate = useNavigate();\n\n\t// Use the useLoaderData hook to access the data\n\tconst { announcements, trendingBusinesses, downtrendingBusinesses, userId } = useLoaderData<{ announcements: Announcement[], trendingBusinesses: TrendingBusiness[], downtrendingBusinesses: DownTrendingBusiness[], userId: string }>();\n\n\tconst handleClick = (businessId: string) => {\n\t\tnavigate(`/stocks/${businessId}`);\n\t};\n\n\treturn (\n\t\t<main className=\"font-poppins grid h-full place-items-center\">\n\t\t\t<div className=\"grid place-items-center gap-4 xl:grid-cols-2 xl:gap-4\">\n\t\t\t\t{announcements.map((announcement) => (\n\t\t\t\t<div\n\t\t\t\t\tkey={announcement.id}\n\t\t\t\t\tclassName=\"flex w-full max-w-xs flex-col items-center text-center xl:max-w-2xl xl:order-2 xl:items-start xl:text-left bg-white shadow-2xl rounded-lg p-4 sm:p-6 md:p-8 xl:p-[10vh]\"\n\t\t\t\t>\n\t\t\t\t\t<a href={announcement.website}\n\t\t\t\t\t\tclassName=\"animate-slide-top [animation-fill-mode:backwards] xl:animate-slide-left xl:[animation-delay:0.5s] xl:[animation-fill-mode:backwards]\"\n\t\t\t\t\t\t>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={announcement.logo}\n\t\t\t\t\t\talt=\"Business Logo\"\n\t\t\t\t\t\tclassName=\"w-20 h-20 text-foreground xl:w-24 xl:h-24 xl:-mt-4\"\n\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t\t<h1\n\t\t\t\t\tdata-heading\n\t\t\t\t\tclassName=\"mt-4 text-lg font-medium text-foreground animate-slide-top [animation-delay:0.3s] [animation-fill-mode:backwards] md:text-xl xl:mt-4 xl:animate-slide-left xl:text-4xl xl:[animation-delay:0.8s] xl:[animation-fill-mode:backwards]\"\n\t\t\t\t\t>\n\t\t\t\t\t{announcement.name}\n\t\t\t\t\t</h1>\n\t\t\t\t\t<p\n\t\t\t\t\tdata-paragraph\n\t\t\t\t\tclassName=\"mt-4 text-base text-muted-foreground animate-slide-top [animation-delay:0.8s] [animation-fill-mode:backwards] md:text-lg xl:mt-8 xl:animate-slide-left xl:text-xl xl:leading-10 xl:[animation-delay:1s] xl:[animation-fill-mode:backwards]\"\n\t\t\t\t\t>\n\t\t\t\t\t{announcement.description}\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t\t<ul className=\"mt-16 flex w-full s:max-w-xs flex-wrap justify-center gap-2 sm:gap-4 xl:mt-0 xl:grid xl:grid-flow-col xl:grid-cols-5 xl:grid-rows-6\">\n\t\t\t\t<TooltipProvider>\n\t\t\t\t\t{logos.map((logo, i) => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tkey={logo.href}\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\tcolumnClasses[logo.column],\n\t\t\t\t\t\trowClasses[logo.row],\n\t\t\t\t\t\t'animate-roll-reveal [animation-fill-mode:backwards]',\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tstyle={{ animationDelay: `${i * 0.07}s` }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Tooltip>\n\t\t\t\t\t\t\t<TooltipTrigger asChild>\n\t\t\t\t\t\t\t\t{/* Without logos */}\n\t\t\t\t\t\t\t\t<span className=\"grid size-20 place-items-center rounded-2xl bg-violet-600/10 p-4 transition hover:-rotate-6 hover:bg-violet-600/15 dark:bg-violet-200 dark:hover:bg-violet-100 sm:size-24\" />\n\t\t\t\t\t\t\t</TooltipTrigger>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t{/*<Tooltip>\n\t\t\t\t\t\t\t<TooltipTrigger asChild>\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={logo.href}\n\t\t\t\t\t\t\t\tclassName=\"grid w-20 h-20 place-items-center rounded-2xl bg-violet-600/10 p-4 transition hover:-rotate-6 hover:bg-violet-600/15 dark:bg-violet-200 dark:hover:bg-violet-100 sm:w-24 sm:h-24\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<img src={logo.src} alt=\"\" />\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</TooltipTrigger>\n\t\t\t\t\t\t\t<TooltipContent>{logo.alt}</TooltipContent>\n\t\t\t\t\t\t</Tooltip>*/}\n\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</TooltipProvider>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div className=\"mt-8 w-full\">\n\t\t\t\t<h2 className=\"text-4xl lg:text-2xl font-bold text-center text-green-500\">Trending Stocks</h2>\n\t\t\t\t<div className=\"flex flex-col sm:flex-row flex-wrap justify-center items-center overflow-x-auto p-4 space-y-4 sm:space-y-0 sm:space-x-4\">\n\t\t\t\t\t{trendingBusinesses.map((business: TrendingBusiness) => (\n\t\t\t\t\t\t<div key={business.businessId} className=\"flex-shrink-0 w-full max-w-xs p-4 bg-white shadow-md rounded-lg cursor-pointer\" onClick={() => handleClick(business.businessId)}>\n\t\t\t\t\t\t\t<img src={business.logo} alt=\"Business Logo\" className=\"w-full h-32 object-contain\" />\n\t\t\t\t\t\t\t<h3 className=\"text-lg mt-2 mb-5 font-semibold\">{business.name}</h3>\n\t\t\t\t\t\t\t<p>Current Price: </p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t${business.currentPricePerShare.toFixed(2)}{' '}\n\t\t\t\t\t\t\t<span className=\"text-green-500\">\n\t\t\t\t\t\t\t\t({business.growthPercentage.toFixed(2)}%)\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"mt-8 w-full\">\n\t\t\t\t<h2 className=\"text-4xl lg:text-2xl font-bold text-center text-red-500\">Declining Stocks</h2>\n\t\t\t\t<div className=\"flex flex-col sm:flex-row flex-wrap justify-center items-center overflow-x-auto p-4 space-y-4 sm:space-y-0 sm:space-x-4\">\n\t\t\t\t\t{downtrendingBusinesses.map((business: DownTrendingBusiness) => (\n\t\t\t\t\t\t<div key={business.businessId} className=\"flex-shrink-0 w-full max-w-xs p-4 bg-white shadow-md rounded-lg cursor-pointer sm:w-64\" onClick={() => handleClick(business.businessId)}>\n\t\t\t\t\t\t\t<img src={business.logo} alt=\"Business Logo\" className=\"w-full h-32 object-contain\" />\n\t\t\t\t\t\t\t<h3 className=\"text-lg mt-2 mb-5 font-semibold\">{business.name}</h3>\n\t\t\t\t\t\t\t<p>Current Price: </p>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t${business.lastValuation.toFixed(2)}{' '}\n\t\t\t\t\t\t\t\t<span className=\"text-red-500\">\n\t\t\t\t\t\t\t\t({business.changePercentage.toFixed(2)}%)\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t<div className=\"mt-8 w-full flex justify-center gap-5\">\n\t\t\t<Link to=\"/stocks\">\n\t\t\t<button className=\"bg-blue-500 text-white font-bold py-5 px-8 rounded-xl hover:bg-blue-700 text-xl\">\n\t\t\t\tBrowse Stocks\n\t\t\t</button>\n\t\t\t</Link>\n\t\t\t{ userId ? (\n\t\t\t<Link to=\"/dashboard\">\n\t\t\t\t<button className=\"bg-purple-500 text-white font-bold py-5 px-8 rounded-xl hover:bg-purple-700 text-xl\">\n\t\t\t\tDashboard\n\t\t\t\t</button>\n\t\t\t</Link>  \n\t\t\t) : \"\" }\n\t\t</div>\n\t\t</main>\n\t)\n}\n","import React from 'react';\n\nexport default function PrivacyRoute() {\n  return (\n    <div className=\"container mx-auto p-6\">\n      <h1 className=\"text-3xl font-bold mb-4\">Privacy Policy for CommUnity Owners</h1>\n      <p className=\"text-sm text-gray-600 mb-4\">Last updated: March 15, 2024</p>\n      <p className=\"mb-4\">\n        This Privacy Policy describes how CommUnity Owners (the \"Site\", \"we\", \"us\", or \"our\") collects, uses, and discloses your personal information when you visit, use our services, or make a purchase from https://co-owners.ca (the \"Site\") or otherwise communicate with us (collectively, the \"Services\"). For purposes of this Privacy Policy, \"you\" and \"your\" means you as the user of the Services, whether you are a customer, website visitor, or another individual whose information we have collected pursuant to this Privacy Policy.\n      </p>\n      <p className=\"mb-4\">\n        Please read this Privacy Policy carefully. By using and accessing any of the Services, you agree to the collection, use, and disclosure of your information as described in this Privacy Policy. If you do not agree to this Privacy Policy, please do not use or access any of the Services.\n      </p>\n      <h2 className=\"text-2xl font-semibold mb-4\">Changes to This Privacy Policy</h2>\n      <p className=\"mb-4\">\n        We may update this Privacy Policy from time to time, including to reflect changes to our practices or for other operational, legal, or regulatory reasons. We will post the revised Privacy Policy on the Site, update the \"Last updated\" date and take any other steps required by applicable law.\n      </p>\n      <h2 className=\"text-2xl font-semibold mb-4\">How We Collect and Use Your Personal Information</h2>\n      <p className=\"mb-4\">\n        To provide the Services, we collect and have collected over the past 12 months personal information about you from a variety of sources, as set out below. The information that we collect and use varies depending on how you interact with us.\n      </p>\n      <p className=\"mb-4\">\n        In addition to the specific uses set out below, we may use information we collect about you to communicate with you, provide the Services, comply with any applicable legal obligations, enforce any applicable terms of service, and to protect or defend the Services, our rights, and the rights of our users or others.\n      </p>\n      <h2 className=\"text-2xl font-semibold mb-4\">What Personal Information We Collect</h2>\n      <p className=\"mb-4\">\n        The types of personal information we obtain about you depends on how you interact with our Site and use our Services. When we use the term \"personal information\", we are referring to information that identifies, relates to, describes or can be associated with you. The following sections describe the categories and specific types of personal information we collect.\n      </p>\n      <h3 className=\"text-xl font-semibold mb-4\">Information We Collect Directly from You</h3>\n      <p className=\"mb-4\">Information that you directly submit to us through our Services may include:</p>\n      <ul className=\"list-disc list-inside mb-4\">\n        <li>Basic contact details including your name, address, phone number, email.</li>\n        <li>Order information including your name, address, payment confirmation, email address, phone number.</li>\n        <li>Account information including your username, and password.</li>\n      </ul>\n      <p className=\"mb-4\">\n        Please be aware that no security measures are perfect or impenetrable, and we cannot guarantee \"perfect security.\" In addition, any information you send to us may not be secure while in transit. We recommend that you do not use unsecure channels to communicate sensitive or confidential information to us.\n      </p>\n      <p className=\"mb-4\">\n        How long we retain your personal information depends on different factors, such as whether we need the information to maintain your account, to provide the Services, comply with legal obligations, resolve disputes or enforce other applicable contracts and policies.\n      </p>\n      <h2 className=\"text-2xl font-semibold mb-4\">Your Rights and Choices</h2>\n      <p className=\"mb-4\">\n        Depending on where you live, you may have some or all of the rights listed below in relation to your personal information. However, these rights are not absolute, may apply only in certain circumstances and, in certain cases, we may decline your request as permitted by law.\n      </p>\n      <p className=\"mb-4\">\n        - Right to Access / Know. You may have a right to request access to personal information that we hold about you, including details relating to the ways in which we use and share your information.<br />\n        - Right to Delete. You may have a right to request that we delete personal information we maintain about you.<br />\n        - Right to Correct. You may have a right to request that we correct inaccurate personal information we maintain about you.<br />\n        - Right of Portability. You may have a right to receive a copy of the personal information we hold about you and to request that we transfer it to a third party, in certain circumstances and with certain exceptions.<br/>\n      </p>\n      <p className=\"mb-4\">\n        - Right to Limit and/or Opt out of Use and Disclosure of Sensitive Personal Information. You may have a right to direct us to limit our use and/or disclosure of sensitive personal information to only what is necessary to perform the Services or provide the goods reasonably expected by an average individual.<br/>\n        - Restriction of Processing: You may have the right to ask us to stop or restrict our processing of personal information.<br/>\n        - Withdrawal of Consent: Where we rely on consent to process your personal information, you may have the right to withdraw this consent.<br/>\n        - Appeal: You may have a right to appeal our decision if we decline to process your request. You can do so by replying directly to our denial.<br/>\n        - Managing Communication Preferences: We may send you promotional emails, and you may opt out of receiving these at any time by using the unsubscribe option displayed in our emails to you. If you opt out, we may still send you non-promotional emails, such as those about your account or orders that you have made.<br/>\n      </p>\n      <p className=\"mb-4\">You may exercise any of these rights where indicated on our Site or by contacting us using the contact details provided below.</p>\n      <p className=\"mb-4\">\n        We will not discriminate against you for exercising any of these rights. We may need to collect information from you to verify your identity, such as your email address or account information, before providing a substantive response to the request. In accordance with applicable laws, You may designate an authorized agent to make requests on your behalf to exercise your rights. Before accepting such a request from an agent, we will require that the agent provide proof you have authorized them to act on your behalf, and we may need you to verify your identity directly with us. We will respond to your request in a timely manner as required under applicable law.\n      </p>\n      <h2 className=\"text-2xl font-semibold mb-4\">Complaints</h2>\n      <p className=\"mb-4\">\n        If you have complaints about how we process your personal information, please contact us using the contact details provided below. If you are not satisfied with our response to your complaint, depending on where you live you may have the right to appeal our decision by contacting us using the contact details set out below, or lodge your complaint with your local data protection authority.\n      </p>\n      <h2 className=\"text-2xl font-semibold mb-4\">International Users</h2>\n      <p className=\"mb-4\">\n        Please note that we may transfer, store and process your personal information outside the country you live in, including the United States. Your personal information is also processed by staff and third party service providers and partners in these countries.<br/>\n        If we transfer your personal information out of Europe, we will rely on recognized transfer mechanisms like the European Commission's Standard Contractual Clauses, or any equivalent contracts issued by the relevant competent authority of the UK, as relevant, unless the data transfer is to a country that has been determined to provide an adequate level of protection.\n      </p>\n    </div>\n  );\n}\n","export default function SupportRoute() {\n\treturn <div>Support</div>\n}\n","import { type Config } from 'tailwindcss'\n\nexport const marketingPreset = {\n\ttheme: {\n\t\textend: {\n\t\t\tkeyframes: {\n\t\t\t\t'roll-reveal': {\n\t\t\t\t\tfrom: { transform: 'rotate(12deg) scale(0)', opacity: '0' },\n\t\t\t\t\tto: { transform: 'rotate(0deg) scale(1)', opacity: '1' },\n\t\t\t\t},\n\t\t\t\t'slide-left': {\n\t\t\t\t\tfrom: { transform: 'translateX(20px)', opacity: '0' },\n\t\t\t\t\tto: { transform: 'translateX(0px)', opacity: '1' },\n\t\t\t\t},\n\t\t\t\t'slide-top': {\n\t\t\t\t\tfrom: { transform: 'translateY(20px)', opacity: '0' },\n\t\t\t\t\tto: { transform: 'translateY(0px)', opacity: '1' },\n\t\t\t\t},\n\t\t\t},\n\t\t\tanimation: {\n\t\t\t\t'roll-reveal': 'roll-reveal 0.4s cubic-bezier(.22,1.28,.54,.99)',\n\t\t\t\t'slide-left': 'slide-left 0.3s ease-out',\n\t\t\t\t'slide-top': 'slide-top 0.3s ease-out',\n\t\t\t},\n\t\t},\n\t},\n} satisfies Omit<Config, 'content'>\n","import React from 'react';\n\nexport default function TermsOfServiceRoute() {\n  return (\n    <div className=\"container mx-auto p-6\">\n      <header className=\"mb-6\">\n        <h1 className=\"text-3xl font-bold mb-4\">Terms of Service</h1>\n      </header>\n\n      <section className=\"mb-6\">\n        <h2 className=\"text-2xl font-semibold mb-4\">1. Acceptance of Terms</h2>\n        <p>By accessing or using the CommUnity Owners community platform, you agree to comply with and be bound by these Terms of Service.</p>\n      </section>\n\n      <section className=\"mb-6\">\n        <h2 className=\"text-2xl font-semibold mb-4\">2. Description of Service</h2>\n        <p>Our service provides a platform for small business membership purchase trading, allowing users to buy and sell memberships.</p>\n      </section>\n\n      <section className=\"mb-6\">\n        <h2 className=\"text-2xl font-semibold mb-4\">3. User Responsibilities</h2>\n        <p>Users are responsible for maintaining the confidentiality of their accounts and passwords. Any activities that occur under their account are their responsibility.</p>\n        <p>By using the CommUnity Owners Community website, you agree to:</p>\n        <ul className=\"list-disc list-inside ml-6\">\n          <li>Provide accurate and complete information when registering for an account.</li>\n          <li>Maintain the confidentiality of your account login information.</li>\n          <li>Comply with all applicable laws and regulations.</li>\n          <li>Not use the platform for any illegal or unauthorized purpose.</li>\n          <li>Not use the platform to transmit any unsolicited or unauthorized advertising or promotional materials.</li>\n          <li>Not use the platform to harass, intimidate, or harm any other user.</li>\n        </ul>\n      </section>\n\n      <section className=\"mb-6\">\n        <h2 className=\"text-2xl font-semibold mb-4\">4. Prohibited Activities</h2>\n        <p>Users must not engage in any illegal or unauthorized activities while using the CommUnity Owners community App. This includes but is not limited to fraud, market manipulation, and unauthorized access to accounts.</p>\n      </section>\n\n      <section className=\"mb-6\">\n        <h2 className=\"text-2xl font-semibold mb-4\">6. Disclaimer of Warranty</h2>\n        <p>The CommUnity Owners community App is provided \"as is\" without any warranty. We do not guarantee the accuracy, completeness, or timeliness of the information provided.</p>\n      </section>\n\n      <section className=\"mb-6\">\n        <h2 className=\"text-2xl font-semibold mb-4\">7. Limitation of Liability</h2>\n        <p>We are not liable for any damages or losses resulting from the use of our webapp. Users use the service at their own risk.</p>\n      </section>\n\n      <section className=\"mb-6\">\n        <h2 className=\"text-2xl font-semibold mb-4\">8. Governing Law</h2>\n        <p>These Terms of Service are governed by and construed in accordance with the laws of Canada.</p>\n      </section>\n\n      <section className=\"mb-6\">\n        <h2 className=\"text-2xl font-semibold mb-4\">9. Changes to This Privacy Policy</h2>\n        <p>We may update this Privacy Policy from time to time. We will post the updated Privacy Policy on this page and update the \"Effective Date\" at the top of this page.</p>\n      </section>\n\n      <section className=\"mb-6\">\n        <h2 className=\"text-2xl font-semibold mb-4\">10. Intellectual Property</h2>\n        <p>The content of the CommUnity Owners Community website, including without limitation, the text, graphics, logos, and button icons, is the property of CommUnity Owners Community or its suppliers and is protected by copyright laws. Any trademarks or service marks displayed on the website are the property of their respective owners.</p>\n      </section>\n\n      <section className=\"mb-6\">\n        <h2 className=\"text-2xl font-semibold mb-4\">11. Termination</h2>\n        <p>CommUnity Owners Community reserves the right to terminate or suspend your access to the CommUnity Owners Community website and services at any time, with or without cause, and without notice.</p>\n      </section>\n\n      <footer className=\"mt-8\">\n        <p className=\"text-sm text-gray-600 mb-2\">\n          These Terms of Service were last updated on November 15, 2024.\n        </p>\n        <p className=\"text-sm text-gray-600\">\n          Contact us at <a href=\"mailto:ptang@co-owners.ca\" className=\"text-blue-500 hover:underline\">ptang@co-owners.ca</a> for any questions regarding these terms.\n        </p>\n      </footer>\n    </div>\n  );\n}","import { api } from \"./config/axiosConfig\";\n\n//Toast\nimport { toast as showToast, toast } from 'sonner'\n//import { ToastContainer, toast as showToast } from 'react-toastify';\n\nexport const businessAPI = {\n    \n    createBusiness: async function (name, address, city, state, country, latitude, longitude, website, description, image, businessImages) {\n\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('logo', image);\n        formData.append('address', address);\n        formData.append('city', city);\n        formData.append('state', state);\n        formData.append('country', country);\n        formData.append('latitude', latitude);\n        formData.append('longitude', longitude);\n        formData.append('website', website);\n        formData.append('description', description);\n        \n        businessImages.forEach((file) => {\n          formData.append('files', file);\n        });\n\n        try {\n            const response = await api.request({\n                url: `/business/createBusiness`,\n                method: \"POST\",\n                data: formData,\n                headers: {\n                  'Content-Type': 'multipart/form-data'\n                }\n            })\n            \n            // returning the product returned by the API\n            return response;\n        }\n         catch (error) {\n\n            // Show error toast\n            showToast.error(\"Creation Error\", {\n              description: 'Error in creating this business',\n            })        \n\n            throw error; // Re-throw the error to be handled by the caller\n        }\n    },\n};","import * as React from 'react';\nimport { useState, useRef, useEffect } from \"react\";\nimport { Form } from '@remix-run/react';\nimport { TextInput, Textarea } from '@mantine/core';\n\nimport { json } from '@remix-run/node';\nimport { sessionKey } from '#app/utils/auth.server.ts'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { LoaderFunction, redirect } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\n\n//Toast\nimport { toast as showToast, toast } from 'sonner'\n\n//API\n// @ts-ignore\nimport { businessAPI } from '../../api/businessAPI';\n// @ts-ignore\nimport { userAPI } from '../../api/userAPI';\n\nconst KeyCodes = {\n    comma: 188,\n    enter: 13\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n\n  //Confirmed we are logged in as admin\n  const authSession = await authSessionStorage.getSession(\n    request.headers.get('cookie'),\n  )\n\n  const session = authSession.get(sessionKey);\n\n  if (session) {\n\n      //Get User\n      const user = await userAPI.checklogintoken(session);\n\n      if (user && user.role === \"admin\") {\n    \n        return json({ message: 'You are an admin' });\n      } else {\n          return redirect('/');\n      }\n  } else {\n      return redirect('/');\n  }\n};\n\nfunction CreateCompany() {\n\n    //LoaderFunction\n    const data = useLoaderData();\n\n    //Variables\n    const [name, setName] = React.useState('');\n    const [address, setAddress] = React.useState('');\n\n    const [city, setCity] = useState('');\n    const [state, setState] = useState('');\n    const [country, setCountry] = useState('');\n    const [latitude, setLatitude] = useState('');\n    const [longitude, setLongitude] = useState('');\n\n    const [description, setDescription] = React.useState('');\n    const [website, setWebsite] = React.useState('');\n\n    //Loading after button pressed\n    const [loading, setLoading] = useState(false);\n\n    //Profile pic\n    const [image, setImage] = React.useState<File | null>(null);\n    const [preview, setPreview] = useState<string | null>(null);\n\n    //Google Places API\n    const autoCompleteRef = useRef<google.maps.places.Autocomplete | null>(null);\n    const inputRef = useRef<HTMLInputElement | null>(null);\n\n    //Images of the business\n    const [businessImages, setBusinessImages] = useState<File[]>([]);\n    const [businessPreviews, setBusinessPreviews] = useState<string[]>([]);\n\n    const options = {\n        types: ['geocode'],\n        componentRestrictions: { country: [\"ca\",\"us\"] }\n    };\n\n    useEffect(() => {\n      const loadScript = (url: string, callback: () => void) => {\n        let script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = url;\n        script.async = true;\n        script.onload = callback;\n        document.head.appendChild(script);\n      };\n  \n      loadScript(`https://maps.googleapis.com/maps/api/js?key=AIzaSyCn_0w1J9f-e1m7YKb59DhsRIftV05XU7A&libraries=places`, () => {\n        const addressInput = document.getElementById('address') as HTMLInputElement;\n        autoCompleteRef.current = new window.google.maps.places.Autocomplete(addressInput, options);\n        autoCompleteRef.current.addListener('place_changed', handlePlaceSelect);\n      });\n    }, []);\n\n\n    //Upload to server\n    const createBusiness = async () => {\n        \n      //Printout the data\n      /*console.log(name);\n      console.log(address);\n      console.log(city);\n      console.log(state);\n      console.log(country);\n      console.log(latitude);\n      console.log(longitude);\n      console.log(description);\n      console.log(website);\n      console.log(image);\n      console.log(businessImages); */\n\n      const response = await businessAPI.createBusiness(name, address, city, state, country, latitude, longitude, website, description, image, businessImages);\n    \n      if (response.status === 200) {\n\n        //Toast\n        showToast.success(\"Business Created\", {\n          description: 'Business has been created',\n        })\n      }\n    }\n\n    const handlePlaceSelect = (place: google.maps.places.PlaceResult) => {\n        const addressObject = autoCompleteRef.current?.getPlace();\n\n        if (!addressObject) return;\n        const address = addressObject.address_components;\n\n        if (address) {\n\n            //Set the address\n            setAddress(addressObject.formatted_address || '');\n\n            //Get the city and state\n            for (let i = 0; i < address.length; i++) {\n\n                if (address[i]?.types.includes('locality')) {\n                    console.log(address[i]?.long_name);\n                    setCity(address[i]?.long_name || '');\n                }\n                if (address[i] && address[i]?.types.includes('administrative_area_level_1')) {\n                    setState(address[i]?.long_name || '');\n                }\n                if (address[i] && address[i]?.types.includes('country')) {\n                    setCountry(address[i]?.long_name || '');\n                }\n            }\n\n            if (addressObject.geometry && addressObject.geometry.location) {\n                setLatitude(addressObject.geometry.location.lat().toString());\n                setLongitude(addressObject.geometry.location.lng().toString());\n            }\n        }\n    }\n\n    //Handle the logo image change\n    const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\n      const file = e.target.files?.[0];\n    \n      if (!file) {\n          return;\n      }\n\n      setImage(file);\n\n      setPreview(URL.createObjectURL(file));\n    };\n\n    //Handle the Business Image changes\n    const handleBusinessImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const files = Array.from(e.target.files || []);\n\n      if (files.length + businessImages.length > 10) {\n\n        showToast.error(\"Image Error\", {\n          description: 'You can only upload a maximum of 10 images',\n        })\n\n        return;\n      }\n  \n      setBusinessImages((prevImages) => [...prevImages, ...files]);\n      const newPreviews = files.map((file) => URL.createObjectURL(file));\n      setBusinessPreviews((prevPreviews) => [...prevPreviews, ...newPreviews]);\n    };\n\n    //When the user clicks on the Submit button\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n                \n        //Make sure home address is filled in\n        if (autoCompleteRef.current === null || autoCompleteRef.current.getPlace() === undefined) {\n\n          showToast.error(\"Address Error\", {\n            description: 'Address cannot be empty',\n          })\n  \n        }\n\n        //If Name is not present on user, then it needs to be filled in\n        else if (name.length < 1) {\n\n          showToast.error(\"Name Error\", {\n            description: 'Name cannot be empty',\n          })        \n        }\n\n        //If profile image is not present on user, then it needs to be filled in\n        else if (!image) {\n\n          showToast.error(\"Image Error\", {\n            description: 'Image cannot be empty',\n          })        \n        }\n\n        else {\n            //Set Loading\n            setLoading(true);\n            \n            //Create the Business\n            createBusiness()\n              .then(() => {\n                // Handle success (e.g., show a success message)\n              })\n              .catch((error) => {\n                // Handle error (e.g., show an error message)\n                console.error(error);\n              });\n        }\n\n    };\n\n    return (\n      <div className=\"flex justify-center items-center w-full min-h-screen bg-gray-100\">\n        <div className=\"p-6 bg-white rounded-lg shadow-lg w-full max-w-lg space-y-6\">\n          <div className=\"text-2xl font-bold text-center\">Add a Business</div>\n\n                {/* Get Business Logo */}\n                <div className=\"mb-4\">\n                  <input\n                    type=\"file\"\n                    id=\"logo\"\n                    accept=\"image/*\"\n                    onChange={handleImageChange}\n                    className=\"hidden\" // Hide the default file input\n                  />\n\n                  {preview ? (\n                    <label htmlFor=\"logo\" className=\"cursor-pointer\">\n                      <div className=\"flex flex-col items-center\">\n                        <img src={preview} alt=\"preview\" className=\"w-24 h-24 rounded-full object-cover\" />\n                        <span className=\"mt-2 text-sm text-gray-600\">Upload Business Logo</span>\n                      </div>\n                    </label>\n                  ) : (\n                    <label htmlFor=\"logo\" className=\"cursor-pointer\">\n                      <div className=\"flex flex-col items-center\">\n                        <img className=\"w-24 h-24 rounded-full object-cover\" src=\"/img/profileUpload.png\" alt=\"default\" />\n                        <span className=\"mt-2 text-sm text-gray-600\">Upload the business logo</span>\n                      </div>\n                    </label>\n                  )}\n                </div>\n\n                {/* Business Name */}\n                <div className=\"inputBox\">\n                  <TextInput\n                    id=\"name\"\n                    label=\"Business Name\"\n                    styles={{ input: { borderColor: '#ccc', borderWidth: '1px', width: '100%', height: '2rem', borderRadius: '1rem', padding: '1rem' } }}\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </div>\n\n                {/* Address */}\n                <div className=\"inputBox\">\n                  <TextInput\n                    id=\"address\"\n                    label=\"Address\"\n                    value={address}\n                    ref={inputRef}\n                    onChange={(e) => setAddress(e.target.value)}\n                    styles={{ input: { borderColor: '#ccc', borderWidth: '1px', width: '100%', height: '2rem', borderRadius: '1rem', padding: '1rem' } }}\n                  />\n                </div>\n\n                {/* Description */}\n                <div className=\"inputBox\">\n                  <Textarea\n                    id=\"description\"\n                    label=\"Description\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                    minRows={4}\n                    styles={{ input: { borderColor: '#ccc', borderWidth: '1px', width: '100%', borderRadius: '1rem', padding: '1rem' } }}\n                  />\n                </div>\n\n                {/* Business Images */}\n                <div className=\"inputBox\">\n                  <label htmlFor=\"images\" className=\"block text-sm font-medium text-gray-700\">\n                    Upload Images (Max 10)\n                  </label>\n                  <input\n                    id=\"images\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    multiple\n                    onChange={handleBusinessImageChange}\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                  />\n                  <div className=\"mt-2 grid grid-cols-5 gap-2\">\n                    {businessPreviews.map((preview, index) => (\n                      <img key={index} src={preview} alt={`Preview ${index}`} className=\"w-16 h-16 object-cover rounded-md\" />\n                    ))}\n                  </div>\n                </div>\n\n                {/* Website */}\n                <div className=\"inputBox\">\n                  <TextInput\n                    id=\"website\"\n                    label=\"Website\"\n                    value={website}\n                    onChange={(e) => setWebsite(e.target.value)}\n                    styles={{ input: { borderColor: '#ccc', borderWidth: '1px', width: '100%', height: '2rem', borderRadius: '1rem', padding: '1rem' } }}\n                  />\n                </div>\n\n                <div className=\"flex justify-center\">\n                  <Form method=\"post\" onSubmit={handleSubmit} className=\"w-full\">\n                    <button type=\"submit\" className=\"bg-blue-600 hover:bg-green-600 hover:text-white border-2 border-blue-600 text-white font-bold py-3 px-4 rounded-xl w-full\">\n                      Register\n                    </button>\n                  </Form>\n                </div>\n          </div>\n        </div>\n    );\n}\n\nexport default CreateCompany;\n","import React from \"react\";\nimport { Link, useLocation } from \"@remix-run/react\";\n\nconst SidebarDropdown = ({ item }: any) => {\n  const location = useLocation();\n  \n  return (\n    <>\n      <ul className=\"my-2 flex flex-col gap-1.5 pl-9\">\n        {item.map((item: any, index: number) => (\n          <li key={index}>\n            <Link\n              to={item.route}\n              className={`relative flex rounded-[7px] px-3.5 py-2 font-medium duration-300 ease-in-out ${\n                location.pathname === item.route\n                  ? \"bg-primary/[.07] text-primary dark:bg-white/10 dark:text-white\"\n                  : \"text-dark-4 hover:bg-gray-2 hover:text-dark dark:text-gray-5 dark:hover:bg-white/10 dark:hover:text-white\"\n              }`}\n            >\n              {item.label}\n              {item.pro && (\n                <span className=\"absolute right-3.5 top-1/2 -translate-y-1/2 rounded-md bg-primary px-1.5 py-px text-[10px] font-medium leading-[17px] text-white\">\n                  Pro\n                </span>\n              )}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default SidebarDropdown;","import React from \"react\";\nimport SidebarDropdown from \"#app/components/Sidebar/SidebarDropdown\";\nimport { Link } from \"@remix-run/react\";\n\n\nconst SidebarItem = ({ item, pageName, setPageName }: any) => {\n  const handleClick = () => {\n    const updatedPageName =\n      pageName !== item.label.toLowerCase() ? item.label.toLowerCase() : \"\";\n    return setPageName(updatedPageName);\n  };\n\n  return (\n    <>\n      <li>\n        <Link\n          to={item.route}\n          onClick={handleClick}\n          className={`${pageName === item.label.toLowerCase() ? \"bg-gray-500 text-white dark:bg-white/10 dark:text-white\" : \"text-dark-4 hover:bg-gray-2 hover:text-dark dark:text-gray-5 dark:hover:bg-white/10 dark:hover:text-white\"} group relative flex items-center gap-3 rounded-[7px] px-3.5 py-3 font-medium duration-300 ease-in-out`}\n        >\n          {item.icon}\n          {item.label}\n          {item.message && (\n            <span className=\"absolute right-11.5 top-1/2 -translate-y-1/2 rounded-full bg-red-light-6 px-1.5 py-px text-[10px] font-medium leading-[17px] text-red\">\n              {item.message}\n            </span>\n          )}\n          {item.pro && (\n            <span className=\"absolute right-3.5 top-1/2 -translate-y-1/2 rounded-md bg-primary px-1.5 py-px text-[10px] font-medium leading-[17px] text-white\">\n              Pro\n            </span>\n          )}\n          {item.children && (\n            <svg\n              className={`absolute right-3.5 top-1/2 -translate-y-1/2 fill-current ${\n                pageName !== item.label.toLowerCase() && \"rotate-180\"\n              }`}\n              width=\"22\"\n              height=\"22\"\n              viewBox=\"0 0 22 22\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M10.5525 7.72801C10.81 7.50733 11.1899 7.50733 11.4474 7.72801L17.864 13.228C18.1523 13.4751 18.1857 13.9091 17.9386 14.1974C17.6915 14.4857 17.2575 14.5191 16.9692 14.272L10.9999 9.15549L5.03068 14.272C4.7424 14.5191 4.30838 14.4857 4.06128 14.1974C3.81417 13.9091 3.84756 13.4751 4.13585 13.228L10.5525 7.72801Z\"\n                fill=\"\"\n              />\n            </svg>\n          )}\n        </Link>\n\n        {item.children && (\n          <div\n            className={`translate transform overflow-hidden ${\n              pageName !== item.label.toLowerCase() && \"hidden\"\n            }`}\n          >\n            <SidebarDropdown item={item.children} />\n          </div>\n        )}\n      </li>\n    </>\n  );\n};\n\nexport default SidebarItem;\n","import React, { useRef, useEffect } from \"react\";\n\ninterface Props {\n  children: React.ReactNode;\n  exceptionRef?: React.RefObject<HTMLElement>;\n  onClick: () => void;\n  className?: string;\n}\n\nconst ClickOutside: React.FC<Props> = ({\n  children,\n  exceptionRef,\n  onClick,\n  className,\n}) => {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClickListener = (event: MouseEvent) => {\n      let clickedInside: null | boolean = false;\n      if (exceptionRef) {\n        clickedInside =\n          (wrapperRef.current &&\n            wrapperRef.current.contains(event.target as Node)) ||\n          (exceptionRef.current && exceptionRef.current === event.target) ||\n          (exceptionRef.current &&\n            exceptionRef.current.contains(event.target as Node));\n      } else {\n        clickedInside =\n          wrapperRef.current &&\n          wrapperRef.current.contains(event.target as Node);\n      }\n\n      if (!clickedInside) onClick();\n    };\n\n    document.addEventListener(\"mousedown\", handleClickListener);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickListener);\n    };\n  }, [exceptionRef, onClick]);\n\n  return (\n    <div ref={wrapperRef} className={`${className || \"\"}`}>\n      {children}\n    </div>\n  );\n};\n\nexport default ClickOutside;\n","import React, { useState } from \"react\";\nimport SidebarItem from \"#app/components/Sidebar/SidebarItem\";\nimport ClickOutside from \"#app/components/ClickOutside.tsx\";\n\n//IsMobile\nimport { isMobile } from \"react-device-detect\";\n\ninterface SidebarProps {\n  sidebarOpen: boolean;\n  setSidebarOpen: (arg: boolean) => void;\n  userRole: string;\n}\n\nconst adminMenuGroups = [\n  {\n    name: \"ADMIN\",\n    menuItems: [\n      {\n        icon: (\n          <svg \n            fill=\"none\" \n            width=\"24\" \n            height=\"24\" \n            viewBox=\"0 0 24 24\" \n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path d=\"M323.5-192h-9a1.5,1.5,0,0,0-1.5,1.5V-176h12v-14.5A1.5,1.5,0,0,0,323.5-192ZM318-177v-3h2v3Zm6,0h-3v-3.5a.5.5,0,0,0-.5-.5h-3a.5.5,0,0,0-.5.5v3.5h-3v-13.5a.5.5,0,0,1,.5-.5h9a.5.5,0,0,1,.5.5Zm-8-12h2v2h-2Zm4,0h2v2h-2Zm-4,4h2v2h-2Zm4,0h2v2h-2Z\" \n              transform=\"translate(-313 192)\"\n              fill= \"white\"\n            />\n          </svg>\n        ),\n        label: \"Create Company\",\n        route: '/admin/createcompany',\n      },\n      {\n        icon: (\n          <svg \n            fill=\"none\" \n            width=\"24\" \n            height=\"24\" \n            viewBox=\"0 0 24 24\" \n            xmlns=\"http://www.w3.org/2000/svg\"\n          >            \n            <path d=\"M17 13H21V19C21 20.1046 20.1046 21 19 21M17 13V19C17 20.1046 17.8954 21 19 21M17 13V5.75707C17 4.85168 17 4.39898 16.8098 4.13646C16.6439 3.90746 16.3888 3.75941 16.1076 3.72897C15.7853 3.69408 15.3923 3.91868 14.6062 4.36788L14.2938 4.54637C14.0045 4.7117 13.8598 4.79438 13.7062 4.82675C13.5702 4.85539 13.4298 4.85539 13.2938 4.82675C13.1402 4.79438 12.9955 4.7117 12.7062 4.54637L10.7938 3.45359C10.5045 3.28826 10.3598 3.20559 10.2062 3.17322C10.0702 3.14457 9.92978 3.14457 9.79383 3.17322C9.64019 3.20559 9.49552 3.28826 9.20618 3.4536L7.29382 4.54637C7.00448 4.71171 6.85981 4.79438 6.70617 4.82675C6.57022 4.85539 6.42978 4.85539 6.29383 4.82675C6.14019 4.79438 5.99552 4.71171 5.70618 4.54637L5.39382 4.36788C4.60772 3.91868 4.21467 3.69408 3.89237 3.72897C3.61123 3.75941 3.35611 3.90746 3.1902 4.13646C3 4.39898 3 4.85168 3 5.75707V16.2C3 17.8801 3 18.7202 3.32698 19.362C3.6146 19.9264 4.07354 20.3854 4.63803 20.673C5.27976 21 6.11984 21 7.8 21H19M12 10.5C11.5 10.376 10.6851 10.3714 10 10.376C9.77091 10.3775 9.90941 10.3678 9.6 10.376C8.79258 10.4012 8.00165 10.7368 8 11.6875C7.99825 12.7003 9 13 10 13C11 13 12 13.2312 12 14.3125C12 15.1251 11.1925 15.4812 10.1861 15.5991C9.3861 15.5991 9 15.625 8 15.5M10 16V17M10 8.99998V9.99998\" \n              stroke=\"#000000\" \n              stroke-width=\"2\" \n              stroke-linecap=\"round\" \n              stroke-linejoin=\"round\"\n              fill=\"white\"\n            />\n          </svg>\n        ),\n        label: \"Confirm Receipts\",\n        route: '/upload/receipt',\n      }\n    ]\n  },\n];\n\nconst menuGroups = [\n  {\n    name: \"DASHBOARD\",\n    menuItems: [\n      {\n        icon: (\n          <svg\n            className=\"text-white fill-current\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M9.00009 17.2498C8.58588 17.2498 8.25009 17.5856 8.25009 17.9998C8.25009 18.414 8.58588 18.7498 9.00009 18.7498H15.0001C15.4143 18.7498 15.7501 18.414 15.7501 17.9998C15.7501 17.5856 15.4143 17.2498 15.0001 17.2498H9.00009Z\"\n              fill=\"white\"\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M12 1.25C11.2749 1.25 10.6134 1.44911 9.88928 1.7871C9.18832 2.11428 8.37772 2.59716 7.36183 3.20233L5.90622 4.06943C4.78711 4.73606 3.89535 5.26727 3.22015 5.77524C2.52314 6.29963 1.99999 6.8396 1.65907 7.55072C1.31799 8.26219 1.22554 9.0068 1.25519 9.87584C1.2839 10.717 1.43105 11.7397 1.61556 13.0219L1.90792 15.0537C2.14531 16.7036 2.33368 18.0128 2.61512 19.0322C2.90523 20.0829 3.31686 20.9169 4.05965 21.5565C4.80184 22.1956 5.68984 22.4814 6.77634 22.6177C7.83154 22.75 9.16281 22.75 10.8423 22.75H13.1577C14.8372 22.75 16.1685 22.75 17.2237 22.6177C18.3102 22.4814 19.1982 22.1956 19.9404 21.5565C20.6831 20.9169 21.0948 20.0829 21.3849 19.0322C21.6663 18.0129 21.8547 16.7036 22.0921 15.0537L22.3844 13.0219C22.569 11.7396 22.7161 10.717 22.7448 9.87584C22.7745 9.0068 22.682 8.26219 22.3409 7.55072C22 6.8396 21.4769 6.29963 20.7799 5.77524C20.1047 5.26727 19.2129 4.73606 18.0938 4.06943L16.6382 3.20233C15.6223 2.59716 14.8117 2.11428 14.1107 1.7871C13.3866 1.44911 12.7251 1.25 12 1.25ZM8.09558 4.51121C9.15309 3.88126 9.89923 3.43781 10.5237 3.14633C11.1328 2.86203 11.5708 2.75 12 2.75C12.4293 2.75 12.8672 2.86203 13.4763 3.14633C14.1008 3.43781 14.8469 3.88126 15.9044 4.51121L17.2893 5.33615C18.4536 6.02973 19.2752 6.52034 19.8781 6.9739C20.4665 7.41662 20.7888 7.78294 20.9883 8.19917C21.1877 8.61505 21.2706 9.09337 21.2457 9.82469C21.2201 10.5745 21.0856 11.5163 20.8936 12.8511L20.6148 14.7884C20.3683 16.5016 20.1921 17.7162 19.939 18.633C19.6916 19.5289 19.3939 20.0476 18.9616 20.4198C18.5287 20.7926 17.9676 21.0127 17.037 21.1294C16.086 21.2486 14.8488 21.25 13.1061 21.25H10.8939C9.15124 21.25 7.91405 21.2486 6.963 21.1294C6.03246 21.0127 5.47129 20.7926 5.03841 20.4198C4.60614 20.0476 4.30838 19.5289 4.06102 18.633C3.80791 17.7162 3.6317 16.5016 3.3852 14.7884L3.10643 12.851C2.91437 11.5163 2.77991 10.5745 2.75432 9.82469C2.72937 9.09337 2.81229 8.61505 3.01167 8.19917C3.21121 7.78294 3.53347 7.41662 4.12194 6.9739C4.72482 6.52034 5.54643 6.02973 6.71074 5.33615L8.09558 4.51121Z\"\n              fill=\"white\"\n            />\n          </svg>\n        ),\n        label: \"Overview\",\n        route: \"/dashboard\",\n      },\n      {\n        icon: (\n          <svg \n            className=\"w-6 h-6 text-white dark:text-white\" \n            aria-hidden=\"true\" \n            xmlns=\"http://www.w3.org/2000/svg\" \n            width=\"24\" \n            height=\"24\" \n            fill=\"none\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path \n              stroke=\"currentColor\" \n              stroke-linecap=\"round\" \n              stroke-width=\"2\" \n              d=\"M3 21h18M4 18h16M6 10v8m4-8v8m4-8v8m4-8v8M4 9.5v-.955a1 1 0 0 1 .458-.84l7-4.52a1 1 0 0 1 1.084 0l7 4.52a1 1 0 0 1 .458.84V9.5a.5.5 0 0 1-.5.5h-15a.5.5 0 0 1-.5-.5Z\"\n            />\n          </svg>\n        ),\n        label: \"Browse Stocks\",\n        route: \"/\",\n      },\n      {\n        icon: (\n          <svg \n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\" \n            height=\"24\" \n            fill=\"white\"  \n            viewBox=\"0 0 122.88 66.49\"\n          >\n            <path\n              stroke=\"white\" \n              stroke-linecap=\"round\" \n              stroke-width=\"2\"  \n              d=\"M2.27,18.3H34.05a2.27,2.27,0,0,1,2.27,2.27V64.22a2.27,2.27,0,0,1-2.27,2.27H2.27A2.27,2.27,0,0,1,0,64.22V20.57A2.27,2.27,0,0,1,2.27,18.3ZM68.4,9.44V31H61V17.39l-4.52,1.8-2-5.3,7.66-4.45ZM26,49.45H11V43.81l2.84-2.75c.62-.57,1.21-1.13,1.77-1.7L17,38a7.69,7.69,0,0,0,1-1.24,3.52,3.52,0,0,0,.54-1,2.82,2.82,0,0,0,.09-.71,1.08,1.08,0,0,0-.5-1.08,4.54,4.54,0,0,0-1.73-.23,24,24,0,0,0-4.32.36l-.69.13L11,28.58a21.3,21.3,0,0,1,7.12-1.21A9.13,9.13,0,0,1,24,29.06a5.64,5.64,0,0,1,2.12,4.68,9.36,9.36,0,0,1-1,4.7A11.9,11.9,0,0,1,21.45,42l-2.19,1.54H26v5.9ZM103.1,37.19q4.82,0,7,1.37t2.18,4.85a6.81,6.81,0,0,1-.44,2.75,4.59,4.59,0,0,1-1.56,1.74A6.49,6.49,0,0,1,112,49.78a5.44,5.44,0,0,1,.52,2.64q0,4.09-2.13,5.65t-6.58,1.55A28.12,28.12,0,0,1,98,59l-1.08-.23L97.07,53q3.77.33,5.37.33a8,8,0,0,0,2.13-.18.76.76,0,0,0,.53-.79.91.91,0,0,0-.37-.83,2.48,2.48,0,0,0-1.37-.33H98.74v-5.8h4.32c1.18,0,1.77-.33,1.77-1s-.75-1-2.26-1c-1,0-2.53.08-4.52.23l-.85.07L97,38.14a26.29,26.29,0,0,1,6.06-1ZM45.55,0H77.33A2.27,2.27,0,0,1,79.6,2.27v62a2.27,2.27,0,0,1-2.27,2.27H45.55a2.27,2.27,0,0,1-2.27-2.27V2.27A2.27,2.27,0,0,1,45.55,0ZM88.83,30.35h31.78a2.28,2.28,0,0,1,2.27,2.27v31.6a2.27,2.27,0,0,1-2.27,2.27H88.83a2.27,2.27,0,0,1-2.27-2.27V32.62a2.27,2.27,0,0,1,2.27-2.27Z\"\n            />\n          </svg>\n        ),\n        label: \"Leaderboard\",\n        route: \"/leaderboard\",\n      },\n    ],\n  },\n  {\n    name: \"HISTORY\",\n    menuItems: [\n      {\n        icon: (\n          <svg\n            className=\"text-white fill-current\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M14.2544 1.36453C13.1584 1.05859 12.132 1.38932 11.4026 2.05955C10.6845 2.71939 10.25 3.70552 10.25 4.76063V11.4551C10.25 12.7226 11.2775 13.75 12.5449 13.75H19.2394C20.2945 13.75 21.2806 13.3156 21.9405 12.5974C22.6107 11.868 22.9414 10.8416 22.6355 9.74563C21.5034 5.69003 18.31 2.49663 14.2544 1.36453ZM11.75 4.76063C11.75 4.10931 12.0201 3.52918 12.4175 3.16407C12.8035 2.80935 13.3035 2.65643 13.8511 2.8093C17.4013 3.80031 20.1997 6.59875 21.1907 10.1489C21.3436 10.6965 21.1907 11.1965 20.8359 11.5825C20.4708 11.9799 19.8907 12.25 19.2394 12.25H12.5449C12.1059 12.25 11.75 11.8941 11.75 11.4551V4.76063Z\"\n              fill=\"white\"\n            />\n            <path\n              d=\"M8.67232 4.71555C9.0675 4.59143 9.28724 4.17045 9.16312 3.77527C9.039 3.38009 8.61803 3.16036 8.22285 3.28447C4.18231 4.55353 1.25 8.32793 1.25 12.7892C1.25 18.2904 5.70962 22.75 11.2108 22.75C15.6721 22.75 19.4465 19.8177 20.7155 15.7772C20.8397 15.382 20.6199 14.961 20.2247 14.8369C19.8296 14.7128 19.4086 14.9325 19.2845 15.3277C18.2061 18.761 14.9982 21.25 11.2108 21.25C6.53805 21.25 2.75 17.462 2.75 12.7892C2.75 9.00185 5.23899 5.79389 8.67232 4.71555Z\"\n              fill=\"white\"\n            />\n          </svg>\n        ),\n        label: \"Transactions\",\n        route: \"/history\",\n      },\n    ],\n  },\n  {\n    name: \"ACCOUNTS\",\n    menuItems: [\n      {\n        icon: (\n          <svg\n            className=\"text-white fill-current\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M11.9999 1.25C9.37654 1.25 7.24989 3.37665 7.24989 6C7.24989 8.62335 9.37654 10.75 11.9999 10.75C14.6232 10.75 16.7499 8.62335 16.7499 6C16.7499 3.37665 14.6232 1.25 11.9999 1.25ZM8.74989 6C8.74989 4.20507 10.205 2.75 11.9999 2.75C13.7948 2.75 15.2499 4.20507 15.2499 6C15.2499 7.79493 13.7948 9.25 11.9999 9.25C10.205 9.25 8.74989 7.79493 8.74989 6Z\"\n              fill=\"white\"\n            />\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M11.9999 12.25C9.68634 12.25 7.55481 12.7759 5.97534 13.6643C4.41937 14.5396 3.24989 15.8661 3.24989 17.5L3.24982 17.602C3.24869 18.7638 3.24728 20.222 4.5263 21.2635C5.15577 21.7761 6.03637 22.1406 7.2261 22.3815C8.41915 22.6229 9.97412 22.75 11.9999 22.75C14.0257 22.75 15.5806 22.6229 16.7737 22.3815C17.9634 22.1406 18.844 21.7761 19.4735 21.2635C20.7525 20.222 20.7511 18.7638 20.75 17.602L20.7499 17.5C20.7499 15.8661 19.5804 14.5396 18.0244 13.6643C16.445 12.7759 14.3134 12.25 11.9999 12.25ZM4.74989 17.5C4.74989 16.6487 5.37127 15.7251 6.71073 14.9717C8.02669 14.2315 9.89516 13.75 11.9999 13.75C14.1046 13.75 15.9731 14.2315 17.289 14.9717C18.6285 15.7251 19.2499 16.6487 19.2499 17.5C19.2499 18.8078 19.2096 19.544 18.5263 20.1004C18.1558 20.4022 17.5364 20.6967 16.4761 20.9113C15.4192 21.1252 13.9741 21.25 11.9999 21.25C10.0257 21.25 8.58063 21.1252 7.52368 20.9113C6.46341 20.6967 5.84401 20.4022 5.47348 20.1004C4.79021 19.544 4.74989 18.8078 4.74989 17.5Z\"\n              fill=\"white\"\n            />\n          </svg>\n        ),\n        label: \"Profile\",\n        route: \"/user\",\n      },\n    ],\n  },\n];  \n\nconst Sidebar = ({ sidebarOpen, setSidebarOpen, userRole }: SidebarProps) => {\n\n  const [pageName, setPageName] = useState(\"Overview\");\n  const [isOpen, setIsOpen] = useState(false);\n  \n  if (isMobile) {\n\n    const adminItem = [\n      { name: 'Create Company', path: '/admin/createcompany' },\n      { name: 'Process Receipts', path: '/upload/receipt' },\n    ];\n\n    const menuItems = [\n      { name: 'Overview', path: '/dashboard' },\n      { name: 'Browse Stocks', path: '/' },\n      { name: 'Leaderboard', path: '/leaderboard' },\n      { name: 'Transactions', path: '/history' },\n      { name: 'Profile', path: '/user' }\n    ];\n\n    const toggleMenu = () => {\n      setIsOpen(!isOpen);\n    };\n\n    return (\n      <nav className=\"relative bg-black text-white w-full\">\n        {/* Hamburger Button */}\n        <button \n          onClick={toggleMenu}\n          className=\"md:hidden z-50 relative p-4\"\n          aria-label=\"Toggle Menu\"\n        >\n          {isOpen ? '‚úï' : '‚ò∞'}\n        </button>\n        \n        {/* Mobile Menu */}\n        {isOpen && (\n          <div className=\"absolute top-full left-0 w-full bg-black shadow-lg md:hidden\">\n            <ul className=\"flex flex-col items-center space-y-4 p-4\">\n              {userRole === \"admin\" && adminItem.map((item) => (\n                <li key={item.path} className=\"w-full text-center\">\n                  <a \n                    href={item.path}\n                    className=\"block py-2 px-4 hover:bg-gray-700\"\n                  >\n                    {item.name}\n                  </a>\n                </li>\n              ))}\n              {menuItems.map((item) => (\n                <li key={item.path} className=\"w-full text-center\">\n                  <a \n                    href={item.path}\n                    className=\"block py-2 px-4 hover:bg-gray-700\"\n                  >\n                    {item.name}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n  \n        {/* Desktop Menu */}\n        <div className=\"hidden md:flex space-x-4 p-4\">\n          {menuItems.map((item) => (\n            <a\n              key={item.path}\n              href={item.path}\n              className=\"text-gray-300 hover:text-blue-500\"\n            >\n              {item.name}\n            </a>\n          ))}\n        </div>\n      </nav>\n    );\n  }\n\n  else {\n    return (\n      <ClickOutside onClick={() => setSidebarOpen(false)}>\n        <aside\n          className={`fixed left-0 top-0 z-50 flex min-h-full pr-5 flex-col border-r border-stroke bg-black dark:border-stroke-dark dark:bg-gray-dark overflow-y-auto ${\n            sidebarOpen ? 'translate-x-0' : '-translate-x-full'} lg:static lg:translate-x-0`}\n        >\n          {/* <!-- SIDEBAR HEADER --> */}\n          <div className=\"flex items-center justify-between gap-2 px-6 py-5.5 lg:py-6.5 xl:py-10\">\n\n            <button\n              onClick={() => setSidebarOpen(!sidebarOpen)}\n              className=\"block lg:hidden\"\n            >\n              <svg\n                className=\"text-white fill-current\"\n                width=\"20\"\n                height=\"18\"\n                viewBox=\"0 0 20 18\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M19 8.175H2.98748L9.36248 1.6875C9.69998 1.35 9.69998 0.825 9.36248 0.4875C9.02498 0.15 8.49998 0.15 8.16248 0.4875L0.399976 8.3625C0.0624756 8.7 0.0624756 9.225 0.399976 9.5625L8.16248 17.4375C8.31248 17.5875 8.53748 17.7 8.76248 17.7C8.98748 17.7 9.17498 17.625 9.36248 17.475C9.69998 17.1375 9.69998 16.6125 9.36248 16.275L3.02498 9.8625H19C19.45 9.8625 19.825 9.4875 19.825 9.0375C19.825 8.55 19.45 8.175 19 8.175Z\"\n                  fill=\"white\"\n                />\n              </svg>\n            </button>\n          </div>\n          {/* <!-- SIDEBAR HEADER --> */}\n\n          <div className=\"no-scrollbar flex flex-col overflow-y-auto duration-300 ease-linear\">\n            {/* <!-- Sidebar Menu --> */}\n            <nav className=\"mt-1 px-4 lg:px-6 text-gray-500\">\n              {userRole === \"admin\" &&\n                adminMenuGroups.map((group, groupIndex) => (\n                  <div key={groupIndex}>\n                    <h3 className=\"mb-5 text-sm font-medium text-dark-4 dark:text-dark-6\">\n                      {group.name}\n                    </h3>\n\n                    <ul className=\"mb-6 flex flex-col gap-2 text-gray-400\">\n                      {group.menuItems.map((menuItem, menuIndex) => (\n                        <SidebarItem\n                          key={menuIndex}\n                          item={menuItem}\n                          pageName={pageName}\n                          setPageName={setPageName}\n                        />\n                      ))}\n                    </ul>\n                  </div>\n                ))}\n              {menuGroups.map((group, groupIndex) => (\n                <div key={groupIndex}>\n                  <h3 className=\"mb-5 text-sm font-medium text-dark-4 dark:text-dark-6\">\n                    {group.name}\n                  </h3>\n\n                  <ul className=\"mb-6 flex flex-col gap-2 text-gray-400\">\n                    {group.menuItems.map((menuItem, menuIndex) => (\n                      <SidebarItem\n                        key={menuIndex}\n                        item={menuItem}\n                        pageName={pageName}\n                        setPageName={setPageName}\n                      />\n                    ))}\n                  </ul>\n                </div>\n              ))}\n            </nav>\n            {/* <!-- Sidebar Menu --> */}\n          </div>\n        </aside>\n      </ClickOutside>\n    );\n  }\n};\n\nexport default Sidebar;\n","import React, { useState, useEffect } from 'react';\nimport { FaArrowTrendUp, FaArrowTrendDown } from 'react-icons/fa6';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\nimport { Link } from '@remix-run/react'\n\n\n//Navigation\nimport { useNavigate } from 'react-router-dom';\n\n//isMobile\nimport { isMobile } from 'react-device-detect';\n\nChartJS.register(ArcElement, Tooltip, Legend, ChartDataLabels);\n\ninterface AccountBalanceProps {\n  token: string;\n  balance: number;\n  gains: number;\n  investments: [\n    {\n      id: string;\n      name: string;\n      logo: string;\n      growthAmount: number;\n      growthPercentage: string;\n      currentPricePerShare: number;\n    } \n  ]\n}\n\nfunction generateRandomColor() {\n  const randomValue = () => Math.floor(Math.random() * 256);\n  const r = randomValue();\n  const g = randomValue();\n  const b = randomValue();\n\n  // Convert RGB to hex format\n  return `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\n}\n\nfunction AccountBalance({ token, balance, gains, investments }: AccountBalanceProps) {\n  const [isClient, setIsClient] = useState(false);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Set isClient to true when the component is mounted on the client side\n    setIsClient(true);\n\n    // Fetch portfolio data from API or database\n    // ...\n  }, []);\n\n  //Generate Random colors for each businessData value and set it to the backgroundColor property\n  const investments_assigned = investments.map((business) => ({\n    ...business,\n    backgroundColor: generateRandomColor(),\n  }));\n\n  const data = {\n    labels: investments_assigned.map((business) => business.name),\n    datasets: [\n      {\n        label: 'Portfolio Distribution',\n        data: investments_assigned.map((business) => business.currentPricePerShare),\n        backgroundColor: investments_assigned.map((business) => business.backgroundColor),\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      datalabels: {\n        formatter: (value: any, context: any) => {\n          const dataset = context.chart.data.datasets[0];\n          const total = dataset?.data.reduce((acc: number, value: number) => acc + value, 0) || 0;\n          const percentage = ((value / total) * 100).toFixed(2);\n          return `${percentage}%`;\n        },\n        color: 'white',\n        font: {\n          weight: 'bold' as 'bold',\n          size: 15,\n        },\n      },\n    },\n  };\n\n  /**\n   * List of Investments\n   * @returns \n   */\n  function BusinessList() {\n    return (\n      <div className=\"flex-1 flex flex-col max-h-96 overflow-y-auto\">\n        {investments_assigned.slice(0, 4).map((business) => (\n          <div key={business.id} className=\"flex items-center p-4 border-b border-gray-200\">\n            <Link to={`/stocks/${business.id}`} className=\"flex items-center w-full\">\n              <img src={business.logo} alt={business.name} className=\"w-10 h-10 mr-4\" />\n              <div className=\"flex-1 text-left\">\n                <p className=\"text-lg font-bold\" style={{ color: business.backgroundColor }}>{business.name}</p>\n              </div>\n              <div className=\"flex-2 text-left\">\n                <p className=\"text-sm text-gray-500\">${business.currentPricePerShare.toFixed(2)}</p>\n                <div className={`text-lg font-bold ${business.growthAmount.toString().startsWith('-') ? 'text-red-500' : 'text-green-500'}`}>\n                  {business.growthAmount.toString().startsWith('-') ? '' : '+'} {business.growthAmount.toFixed(2)}\n                </div>\n              </div>\n            </Link>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  /**\n   * Handle Deposit request\n   */\n  function handleDeposit() {\n\n      const redirectUrlParams = new URLSearchParams({\n        amount: '0.00',\n        balance: balance.toFixed(2),\n        token: token,\n        redirect: `/dashboard`,\n        type: 'deposit',\n      }).toString();\n\n      //Deposit Page\n      const redirectUrl = '/stripe?' + redirectUrlParams;\n\n      // Redirect to Stripe Payment\n      navigate(redirectUrl);\n  }\n\n\n  /**\n   * Handle Withdraw request\n   */\n  function handleWithdraw() {\n    \n    const redirectUrlParams = new URLSearchParams({\n      amount: '0.00',\n      balance: balance.toFixed(2),\n      token: token,\n      redirect: `/dashboard`,\n      type: 'withdraw',\n    }).toString();\n  \n    //Deposit Page\n    const redirectUrl = '/stripe?' + redirectUrlParams;\n\n    // Redirect to Stripe Payment\n    navigate(redirectUrl);\n  }\n\n  return (\n    <div className=\"flex flex-col lg:flex-row bg-white p-4 rounded-lg shadow-md\">\n      <div className=\"flex-1 flex flex-col justify-between\">\n        <h2 className=\"text-lg font-bold\">Account Balance</h2>\n        <p className=\"text-3xl font-bold\">${balance.toFixed(2)}</p>\n        <div className=\"flex items-center mt-2\">\n          {gains > 0 ? (\n            <div className=\"flex items-center\">\n              <div className=\"bg-green-500 p-2 rounded-xl shadow-xl\" style={{ boxShadow: '0 4px 15px rgba(34, 197, 94, 0.5)' }}>\n                <FaArrowTrendUp className=\"text-white text-5xl\" />\n              </div>\n              <div className=\"ml-5\">\n                <p className=\"text-lg text-green-500\">+{gains.toFixed(2)} lifetime</p>\n              </div>\n            </div>\n          ) : (\n            <div className=\"flex items-center\">\n              <div className=\"bg-red-500 p-2 rounded-xl shadow-xl\" style={{ boxShadow: '0 4px 15px rgba(239, 68, 68, 0.5)' }}>\n                <FaArrowTrendDown className=\"text-white text-5xl\" />\n              </div>\n              <div className=\"ml-5\">\n                <p className=\"text-lg text-red-500\">{gains.toFixed(2)} lifetime</p>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"flex flex-col sm:flex-row justify-between mt-4 w-full\">\n          <button className=\"text-blue-600 hover:bg-green-600 hover:text-white border-2 border-blue-600 font-bold py-3 px-4 m-1 lg:m-3 rounded-xl w-full\" onClick={handleDeposit}>\n            Deposit\n          </button>\n          <button className=\"bg-blue-600 hover:bg-red-500 text-white font-bold py-3 px-4 m-1 lg:m-3 rounded-xl w-full\" onClick={handleWithdraw}>\n            Withdraw\n          </button>\n        </div>\n      </div>\n  \n      {/* Vertical Divider */}\n      <div className=\"hidden lg:block border-l-2 border-gray-300 mx-4\"></div>\n  \n      {/* Chart */}\n      <div className=\"flex flex-col lg:flex-row w-full lg:w-1/2 mt-4 lg:mt-0\">\n        <div className=\"flex-1\" style={{ height: '30vh' }}>\n          {isClient && (\n            <Doughnut data={data} options={options} />\n          )}\n        </div>\n        <div className=\"flex-1 flex\">\n          <BusinessList />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AccountBalance;","// GradientLineChart.jsx\nimport React, { useRef, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, Filler, LineElement, CategoryScale, LinearScale, PointElement } from 'chart.js';\n\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Filler);\n\ninterface ValuationProps {\n  profit: [\n    {\n      month: number;\n      year: number;\n      profit: number;\n    }\n  ],\n  valuation: [\n    {\n      month: number;\n      year: number;\n      maxPricePerShare: number;\n    }\n  ]\n}\n\nconst Valuation = ({ profit, valuation }: ValuationProps) => {\n  const chartRef = useRef(null);\n\n  // Map month numbers to month names\n  const monthNames = [\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n\n  // Transform data\n  const profitData = {\n    dates: profit.map(item => `${monthNames[item.month - 1]} ${item.year}`),\n    profit: profit.map(item => item.profit.toFixed(2))\n  };\n\n  const valuationData = {\n    dates: valuation.map(item => `${monthNames[item.month - 1]} ${item.year}`),\n    valuation: valuation.map(item => item.maxPricePerShare.toFixed(2))\n  };\n\n  //Label Dates\n  const labelDates = profitData.dates.length > valuationData.dates.length ? profitData.dates : valuationData.dates;\n\n  //Pad the shorter array with zeros\n  if (profitData.dates.length > valuationData.dates.length) {\n    const diff = profitData.dates.length - valuationData.dates.length;\n    for (let i = 0; i < diff; i++) {\n      valuationData.dates.push('');\n      valuationData.valuation.push('0');\n    }\n  } else if (valuationData.dates.length > profitData.dates.length) {\n    const diff = valuationData.dates.length - profitData.dates.length;\n    for (let i = 0; i < diff; i++) {\n      profitData.dates.push('');\n      profitData.profit.push('0');\n    }\n  }\n\n  // Set up data\n  const data = {\n    labels: labelDates,\n    datasets: [\n      {\n        label: 'Profit',\n        data: profitData.profit,\n        borderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: 'rgba(75,192,192,1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(75,192,192,1)',\n        borderWidth: 2,\n        fill: true, // Enable fill under the line\n        tension: 0.4, // Smooth out the lines\n        backgroundColor: (context: any) => {\n            const chart = context.chart;\n            const { ctx, chartArea } = chart;\n  \n            if (!chartArea) {\n              return null;\n            }\n  \n            const gradient = ctx.createLinearGradient(0, chartArea.top, 0, chartArea.bottom);\n            gradient.addColorStop(0, 'rgba(75, 192, 192, 0.5)');\n            gradient.addColorStop(1, 'rgba(75, 192, 192, 0)');\n  \n            return gradient;\n          },\n      },\n      {\n        label: 'Portfolio Value',\n        data: valuationData.valuation,\n        borderColor: 'rgba(153, 102, 255, 1)',\n        pointBackgroundColor: 'rgba(153, 102, 255, 1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(153, 102, 255, 1)',\n        borderWidth: 2,\n        fill: true, // Enable fill under the line\n        tension: 0.4, // Smooth out the lines\n        backgroundColor: (context: any) => {\n            const chart = context.chart;\n            const { ctx, chartArea } = chart;\n  \n            if (!chartArea) {\n              return null;\n            }\n  \n            const gradient = ctx.createLinearGradient(0, chartArea.top, 0, chartArea.bottom);\n            gradient.addColorStop(0, 'rgba(153, 102, 255, 0.5)');\n            gradient.addColorStop(1, 'rgba(153, 102, 255, 0)');\n  \n            return gradient;\n          },\n      },\n    ],\n  };\n\n  // Set up options\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top' as const,\n      },\n      title: {\n        display: true,\n        text: 'Current Revenue and Portfolio Gains',\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context: any) {\n            let label = context.dataset.label || '';\n            if (label) {\n              label += ': ';\n            }\n            if (context.parsed.y !== null) {\n              label += `$${context.parsed.y}`;\n            }\n            return label;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false,\n        },\n      },\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: 'rgba(200, 200, 200, 0.2)',\n        },\n      },\n    },\n  };\n\n  return (\n    <>\n      <h2 className=\"text-2xl font-bold mb-4\">Valuation</h2>\n      <div className=\"bg-white p-4 rounded-lg shadow-md\" style={{ height: '50vh' }}>\n        <div className=\"relative w-full h-full\">\n          <Line ref={chartRef} data={data} options={options} />\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Valuation;\n\n","import React, { useEffect, useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, PointElement, LinearScale, Title, Tooltip, Legend, CategoryScale } from 'chart.js';\nimport { useNavigate } from 'react-router-dom';\n\n//Icon\nimport { Icon  } from '#app/components/ui/icon.tsx'\n\n//isMobile\nimport { isMobile } from 'react-device-detect';\n\nChartJS.register(LineElement, PointElement, LinearScale, Title, Tooltip, Legend, CategoryScale);\n\ninterface WatchlistProps {\n  watchlist: {\n    id: string;\n    name: string;\n    logo: string;\n    price: number;\n    change: string;\n    chartData: number[];\n  }[];\n}\n\nconst WatchList = ({ watchlist }: WatchlistProps) => {\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isMobile && watchlist.length > 1 && scrollContainerRef.current) {\n      const scrollContainer = scrollContainerRef.current;\n      let scrollAmount = 0;\n      const scrollStep = 2;\n      const scrollInterval = setInterval(() => {\n        scrollAmount += scrollStep;\n        if (scrollAmount >= scrollContainer.scrollWidth / 2) {\n          scrollAmount = 0;\n        }\n        scrollContainer.scrollLeft = scrollAmount;\n      }, 20);\n\n      return () => clearInterval(scrollInterval);\n\n    }\n    else if (watchlist.length > 5 && scrollContainerRef.current) {\n      const scrollContainer = scrollContainerRef.current;\n      let scrollAmount = 0;\n      const scrollStep = 2;\n      const scrollInterval = setInterval(() => {\n        scrollAmount += scrollStep;\n        if (scrollAmount >= scrollContainer.scrollWidth / 2) {\n          scrollAmount = 0;\n        }\n        scrollContainer.scrollLeft = scrollAmount;\n      }, 20);\n\n      return () => clearInterval(scrollInterval);\n    }\n  }, [watchlist]);\n\n  //Naviate to Stock page\n  const handleItemClick = (id: string) => {\n    navigate(`/stocks/${id}`);\n  };\n\n  return (\n    <>\n      <h2 className=\"text-2xl font-bold mb-4 mt-4 text-center sm:text-left\">Watch List</h2>\n      <div ref={scrollContainerRef} className=\"flex overflow-x-auto space-x-4 pb-10\">\n        {watchlist.map((business, index) => (\n          <div key={index} className=\"flex-shrink-0 w-64 bg-white p-4 rounded-lg shadow-md cursor-pointer\" onClick={() => handleItemClick(business.id)}>\n            {/* First Row: Logo and Business Name */}\n            <div className=\"flex items-center mb-4\">\n              <img src={business.logo} alt={business.name} className=\"w-12 h-12 mr-4\"/>\n              <div className=\"text-lg font-bold\">{business.name}</div>\n            </div>\n            {/* Second Row: Price and Change */}\n            <div className=\"flex justify-between items-center mb-4\">\n              <div className=\"text-xl font-semibold\">${business.price.toFixed(2)}</div>\n              <div className=\"text-right\">\n                <div className={`text-lg font-bold ${business.change.startsWith('-') ? 'text-red-500' : 'text-green-500'}`}>\n                  {business.change}\n                </div>\n                <div className=\"text-xs text-gray-500\">this month</div>\n              </div>\n            </div>\n            {/* Third Row: Line Chart */}\n            <div className=\"h-24\">\n              <Line\n                data={{\n                  labels: Array.from({ length: business.chartData.length }, (_, i) => i),\n                  datasets: [\n                    {\n                      data: business.chartData,\n                      borderColor: 'rgba(75, 192, 192, 1)',\n                      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n                      fill: true,\n                      tension: 0.4,\n                    },\n                  ],\n                }}\n                options={{\n                  responsive: true,\n                  maintainAspectRatio: false,\n                  plugins: {\n                    legend: {\n                      display: false,\n                    },\n                  },\n                  scales: {\n                    x: {\n                      display: false,\n                    },\n                    y: {\n                      display: false,\n                    },\n                  },\n                }}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default WatchList;","import React, { useState } from 'react';\n\nimport {\n\tcreateToastHeaders,\n\tredirectWithToast,\n} from '#app/utils/toast.server.ts'\nimport { sessionKey } from '#app/utils/auth.server.ts';\nimport { authSessionStorage } from '#app/utils/session.server.ts';\nimport { LoaderFunction, json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { redirect } from '@remix-run/node';\n\nimport Sidebar from \"#app/components/Sidebar\";\nimport AccountBalance from '#app/components/dashboard/AccountBalance';\nimport Valuation from '#app/components/dashboard/Valuation';\nimport WatchList from '#app/components/dashboard/Watchlist';\n\n//API\n// @ts-ignore\nimport { userAPI } from '../../api/userAPI';\n\n//IsMobile\nimport { isMobile } from 'react-device-detect';\n\n//Interface\ninterface DashboardData {\n  session: string;\n  user: {\n    id: string;\n    name: string;\n    email: string;\n    role: string;\n  },\n  balance: number;\n  historical_gains: number;\n  monthly_gains: number;\n  businesses: [{\n    id: string;\n    name: string;\n    logo: string;\n    growthAmount: number;\n    growthPercentage: string;\n    currentPricePerShare: number;\n  }],\n  profit: [\n    {\n      month: number;\n      year: number;\n      profit: number;\n    }\n  ],\n  valuation: [\n    {\n      month: number;\n      year: number;\n      maxPricePerShare: number;\n    }\n  ],\n  watchlist: [{\n    id: string;\n    name: string;\n    logo: string;\n    price: number;\n    change: string;\n    chartData: number[];\n  }],\n  tab: string;\n  leaderboard: LeaderboardData;\n}\n\n//Interface\ninterface LeaderboardData {\n  topMonthlyReturns: {\n          position: number;\n          username: string;\n          score: number;\n  }[],\n  topTotalReturns: {\n      position: number;\n      username: string;\n      score: number;\n  }[],\n  topMonthlyTrades: {\n      position: number;\n      username: string;\n      score: number;\n  }[],\n  topTotalTrades: {\n      position: number;\n      username: string;\n      score: number;\n  }[],\n}\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n\n  const url = new URL(request.url);\n\n  //See if we are logged in by checking the session\n  const authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n  const session = authSession.get(sessionKey);\n\n  //Set Session if we are logged in\n  if (session) {\n\n    //Get User\n    const user = await userAPI.checklogintoken(session);\n\n    if (user) {\n        // Fetch user balance from API\n        const { balance, historical_gains, monthly_gains, businesses } = await userAPI.getUserBalanceStocks(session);\n\n        // Fetch valuation and profit from API\n        const { monthlyProfits, monthlyValuation } = await userAPI.getUserProfitValuation(session);\n\n        // Fetch Watchlist data from API\n        const { watchlist} = await userAPI.getUserWatchList(session);\n\n        return json({ session, user, balance, historical_gains, monthly_gains, businesses, profit: monthlyProfits, valuation: monthlyValuation, watchlist });\n    }\n    //Redirect to login if not logged in\n    else {\n      return redirect('/');\n    }\n  }\n  //Redirect to login if not logged in\n  else {\n    return redirectWithToast('/login', { type: 'error', title: 'Not Logged In!', description: 'You must be logged in to view this page' });\n  }\n}\n\nfunction Dashboard() {\n  \n  const [sidebarOpen, setSidebarOpen] = useState(false);\n\n  //Load the data from the loader\n  const { session, user, balance, historical_gains, monthly_gains, businesses, profit, valuation, watchlist, tab, leaderboard }  = useLoaderData< DashboardData>();\n\n  if (isMobile) {\n    return (\n      <div className='bg-gray-200'>\n        <div className=\"flex flex-col\">\n          <Sidebar sidebarOpen={sidebarOpen} setSidebarOpen={setSidebarOpen} userRole={user.role} />\n        </div>\n        <div className=\"items-center justify-between pl-[1vw] pr-[1vw] pt-[2vw] pb-[2vw]\">\n          <AccountBalance token={session} balance={balance} gains={historical_gains} investments={businesses} />\n        </div>\n        <div className=\"items-center justify-between pl-[1vw] pr-[1vw]\">\n          <Valuation profit={profit} valuation={valuation} />\n        </div>\n        <div className=\"items-center justify-between pl-[5vw] pr-[5vw]\">\n          <WatchList watchlist={watchlist} />\n        </div>\n      </div>\n      \n    );\n  }\n  else {\n    return (\n      <div className=\"flex overflow-hidden\">\n        <Sidebar sidebarOpen={sidebarOpen} setSidebarOpen={setSidebarOpen} userRole={user.role} />\n        <div className=\"flex-1 bg-gray-200\">\n          <div className=\"items-center justify-between pl-[5vw] pr-[5vw] pt-[2vw] pb-[2vw]\">\n            <AccountBalance token={session} balance={balance} gains={historical_gains} investments={businesses} />\n          </div>\n          <div className=\"items-center justify-between pl-[5vw] pr-[5vw]\">\n            <Valuation profit={profit} valuation={valuation} />\n          </div>\n          <div className=\"items-center justify-between pl-[5vw] pr-[5vw]\">\n            <WatchList watchlist={watchlist} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import { useState, ChangeEvent } from 'react';\nimport { LoaderFunction, json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { authSessionStorage } from '#app/utils/session.server.ts';\nimport { sessionKey } from '#app/utils/auth.server.ts';\nimport { redirect } from '@remix-run/node';\n\nimport Sidebar from \"#app/components/Sidebar\";\n\n//Redirect with Toast\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\n\n//API\n// @ts-ignore\nimport { userAPI } from '../../api/userAPI';\n\nimport { Pagination, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Box, Typography, IconButton } from '@mui/material';\nimport { FaArrowLeft, FaArrowRight } from \"react-icons/fa\";\n\n//isMobile\nimport { isMobile } from 'react-device-detect';\n\n//Interface\ninterface HistoryData {\n    _id: string;\n    type: string;\n    businessName: string;\n    price: number;\n    orderDate: string;\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n\n    //See if we are logged in by checking the session\n    const authSession = await authSessionStorage.getSession(\n          request.headers.get('cookie'),\n      )\n    const session = authSession.get(sessionKey);\n      \n    //Get User\n    if (session) {\n        const user = await userAPI.checklogintoken(session);\n\n        if (user) {\n            //Get History\n            const history = user.history.reverse();\n\n            return json({ history, session, role: user.role });  \n        }\n        else {\n            return redirect('/');\n        }\n    } else {\n        return redirectWithToast('/login', {\n            title: 'Login Required',\n            description: 'You need to be logged in to view this page',\n            type: 'error'\n        });\n    }\n\n}\n\nconst History = () => {\n    const { history, session, role } = useLoaderData<{ history: HistoryData[], session: string, role: string }>();\n    const [sidebarOpen, setSidebarOpen] = useState(false);\n\n    if (session) {\n        return (\n            <div className=\"flex flex-col sm:flex-row bg-gray-200\">\n                <Sidebar sidebarOpen={sidebarOpen} setSidebarOpen={setSidebarOpen} userRole={role}/>\n                <div className=\"container mx-auto p-4\">\n                    <h1 className=\"text-3xl font-bold mb-4 text-center\">Transaction History</h1>\n                    <TabContent title=\"Transaction History\" data={history} />\n                </div>\n            </div>\n        );\n    }\n};\n\nconst applyPagination = (\n    data: HistoryData[],\n    page: number,\n    limit: number\n  ): HistoryData[] => {\n    return data.slice(page * limit, page * limit + limit);\n  };\n\n  const capitalizeFirstLetter = (string: string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n  \n  const TabContent = ({ title, data }: { title: string; data: HistoryData[] }) => {\n    const [page, setPage] = useState(1);\n    const limit = 10;\n    const totalPages = Math.ceil(data.length / limit);\n  \n    const handlePreviousPage = () => {\n      if (page > 1) {\n        setPage(page - 1);\n      }\n    };\n  \n    const handleNextPage = () => {\n      if (page < totalPages) {\n        setPage(page + 1);\n      }\n    };\n  \n    const paginatedData = applyPagination(data, page - 1, limit);\n  \n    return (\n      <div>\n        <TableContainer component={Paper} className=\"overflow-y-auto w-full rounded-sm\">\n          <Table stickyHeader className=\"w-full\">\n            <TableHead>\n              <TableRow>\n                <TableCell className=\"text-left h-16\">Transaction Type</TableCell>\n                <TableCell className=\"text-left h-16\">Business Name</TableCell>\n                <TableCell className=\"text-left h-16\">Amount</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedData.map((history, index) => (\n                <TableRow key={history._id} className={index % 2 === 0 ? 'bg-gray-100' : 'bg-white'}>\n                  <TableCell className=\"h-10 pl-2\">\n                    <div>{capitalizeFirstLetter(history.type)}</div>\n                    <div className=\"text-xs text-gray-500\">{new Date(history.orderDate).toLocaleDateString()}</div>\n                  </TableCell>\n                  <TableCell className=\"h-10\">{history.type === 'buy' || history.type === 'sell' ? history.businessName : ''}</TableCell>\n                  <TableCell className={`h-10 ${['deposit', 'sell'].includes(history.type) ? 'text-green-500' : ['withdraw', 'buy', 'fee'].includes(history.type) ? 'text-red-500' : ''}`}>\n                    ${history.price.toFixed(2)}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" mt={4}>\n            <div className=\"flex mt-5 flex-row gap-2 justify-center\">\n                <IconButton onClick={handlePreviousPage} disabled={page === 1}>\n                    <FaArrowLeft />\n                </IconButton>\n                <Typography variant=\"body1\" mx={2}>\n                    Page {page} of {totalPages}\n                </Typography>\n                <IconButton onClick={handleNextPage} disabled={page === totalPages}>\n                    <FaArrowRight />\n                </IconButton>\n            </div>\n        </Box>\n      </div>\n    );\n  };\n\nexport default History;","import { api } from \"./config/axiosConfig\";\n\n//Toast\nimport { toast as showToast, toast } from 'sonner'\n\nexport const leaderboardAPI = {\n\n  getLeaderboard: async function (sessionToken) {\n    \n    try {\n      const response = await api.request({\n        url: `/users/getLeaderBoard`,\n        method: \"POST\",\n        data: {\n          token: sessionToken,\n        },\n      })\n\n      // returning the product returned by the API\n      return response\n    } catch (error) {\n    \n      showToast.error(\"Leaderboard Failed\", {\n        description: 'User not found',\n      })         \n    }\n  }\n}","import { useState, ChangeEvent } from 'react';\nimport { LoaderFunction, MetaFunction, json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { authSessionStorage } from '#app/utils/session.server.ts';\nimport { sessionKey } from '#app/utils/auth.server.ts';\n\nimport Sidebar from \"#app/components/Sidebar\";\n\n//API\n// @ts-ignore\nimport { leaderboardAPI } from '../../api/leaderboardAPI';\n// @ts-ignore\nimport { userAPI } from '../../api/userAPI';\n\nimport { Pagination, Box, Typography, IconButton } from '@mui/material';\nimport { FaArrowLeft, FaArrowRight } from \"react-icons/fa\";\n\n//IsMobile\nimport { isMobile } from 'react-device-detect';\n\n//Interface\ninterface LeaderboardData {\n    topMonthlyReturns: {\n            position: number;\n            username: string;\n            score: number;\n    }[],\n    topTotalReturns: {\n        position: number;\n        username: string;\n        score: number;\n    }[],\n    topMonthlyTrades: {\n        position: number;\n        username: string;\n        score: number;\n    }[],\n    topTotalTrades: {\n        position: number;\n        username: string;\n        score: number;\n    }[],\n}\n\ninterface UserPlacement {\n    id: number;\n    username: string;\n    amount: number;\n    date: string;\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n\n    //See if we are logged in by checking the session\n    const authSession = await authSessionStorage.getSession(\n          request.headers.get('cookie'),\n      )\n    const session = authSession.get(sessionKey);\n     \n    if (session) {\n        //Get User\n        const user = await userAPI.checklogintoken(session);\n\n        //Leaderboard\n        const leaderboard = await leaderboardAPI.getLeaderboard(session);\n\n        if (user) {\n            return json({ leaderboard: leaderboard.data, session, role: user.role, username: user.username });    \n        }\n        else {\n            return json({ leaderboard: leaderboard.data, session: null, role: null });\n        }\n    }\n    else {\n\n        //Leaderboard\n        const leaderboard = await leaderboardAPI.getLeaderboard(null);\n\n        return json({ leaderboard: leaderboard.data, session: null, role: null });\n    }\n}\n\n// Meta function to add social media headers\nexport const meta: MetaFunction = () => {\n\t\n\treturn [\n\t  { title: `Co-Owners Leaderboard` },\n\t  { property: \"og:title\", content: `Co-Owners Leaderboard` },\n\t  { property: \"og:description\", content: `The CommUnity Owners Monopoly Leaderboard` },\n\t  { property: \"og:image\", content: `https://co-owners.ca/logo.png` },\n\t  { property: \"og:url\", content: `https://co-owners.ca/leaderboard` },\n\t  { property: \"og:type\", content: \"website\" },\n\t  { name: \"twitter:card\", content: \"summary_large_image\" },\n\t  { name: \"twitter:title\", content: `Co-Owners Leaderboard` },\n\t  { name: \"twitter:description\", content: `The CommUnity Owners Monopoly Leaderboard` },\n\t  { name: \"twitter:image\", content: `https://co-owners.ca/logo.png` },\n\t  { name: \"twitter:url\", content: `https://co-owners.ca/leaderboard` },\n\t];\n};\n\nconst Leaderboard = () => {\n    const { leaderboard, session, role, username } = useLoaderData<{ leaderboard: LeaderboardData, session: string, role: string, username: string }>();\n    const [activeTab, setActiveTab] = useState('tab1');\n    const [sidebarOpen, setSidebarOpen] = useState(false);\n\n    const handleTabClick = (tab: string) => {\n        setActiveTab(tab);\n    };\n\n    let totalProfitsBoard = leaderboard.topTotalReturns;\n    let monthlyProfitsBoard = leaderboard.topMonthlyReturns;\n    let totalTransactionsBoard = leaderboard.topTotalTrades;\n    let monthlyTransactionsBoard = leaderboard.topMonthlyTrades;\n\n    if (session) {\n        return (\n            <div className=\"flex flex-col sm:flex-row bg-gray-200\">\n                <Sidebar sidebarOpen={sidebarOpen} setSidebarOpen={setSidebarOpen} userRole={role}/>\n                <div className=\"container mx-auto p-4\">\n                    <h1 className=\"text-3xl font-bold mb-4 text-center\">Leaderboard</h1>\n                    <div className=\"flex justify-center mb-4 lg:space-x-4\">\n                        <button\n                            className={`px-4 py-2 rounded ${activeTab === 'tab1' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'}`}\n                            onClick={() => handleTabClick('tab1')}\n                        >\n                            Monthly Profits\n                        </button>\n                        <button\n                            className={`px-4 py-2 rounded ${activeTab === 'tab2' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'}`}\n                            onClick={() => handleTabClick('tab2')}\n                        >\n                            Total Profits\n                        </button>\n                        <button\n                            className={`px-4 py-2 rounded ${activeTab === 'tab3' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'}`}\n                            onClick={() => handleTabClick('tab3')}\n                        >\n                            Monthly Transactions\n                        </button>\n                        <button\n                            className={`px-4 py-2 rounded ${activeTab === 'tab4' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'}`}\n                            onClick={() => handleTabClick('tab4')}\n                        >\n                            Total Transactions\n                        </button>\n                    </div>\n                    <div className=\"bg-white p-4 rounded-lg shadow-md\">\n                        {activeTab === 'tab1' && <TabContent title=\"Monthly Profits Leaderboard\" data={monthlyProfitsBoard} username={username}/>}\n                        {activeTab === 'tab2' && <TabContent title=\"Total Profits Leaderboard\" data={totalProfitsBoard} username={username}/>}\n                        {activeTab === 'tab3' && <TabContent title=\"Monthly Transactions Leaderboard\" data={monthlyTransactionsBoard} username={username}/>}\n                        {activeTab === 'tab4' && <TabContent title=\"Total Transactions Leaderboard\" data={totalTransactionsBoard} username={username}/>}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    else {\n        return (\n            <div className=\"container mx-auto p-4\">\n                <h1 className=\"text-3xl font-bold mb-4 text-center\">Leaderboard</h1>\n                <div className=\"flex justify-center mb-4 lg:space-x-4\">\n                    <button\n                        className={`px-4 py-2 rounded ${activeTab === 'tab1' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'}`}\n                        onClick={() => handleTabClick('tab1')}\n                    >\n                        Weekly Profits\n                    </button>\n                    <button\n                        className={`px-4 py-2 rounded ${activeTab === 'tab2' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'}`}\n                        onClick={() => handleTabClick('tab2')}\n                    >\n                        Total Profits\n                    </button>\n                    <button\n                        className={`px-4 py-2 rounded ${activeTab === 'tab3' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'}`}\n                        onClick={() => handleTabClick('tab3')}\n                    >\n                        Weekly Transactions\n                    </button>\n                    <button\n                        className={`px-4 py-2 rounded ${activeTab === 'tab4' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'}`}\n                        onClick={() => handleTabClick('tab4')}\n                    >\n                        Total Transactions\n                    </button>\n                </div>\n                <div className=\"bg-white p-4 rounded-lg shadow-md\">\n                    {activeTab === 'tab1' && <TabContent title=\"Monthly Profits Leaderboard\" data={monthlyProfitsBoard} username={username} />}\n                    {activeTab === 'tab2' && <TabContent title=\"Total Profits Leaderboard\" data={totalProfitsBoard} username={username} />}\n                    {activeTab === 'tab3' && <TabContent title=\"Monthly Transactions Leaderboard\" data={monthlyTransactionsBoard} username={username} />}\n                    {activeTab === 'tab4' && <TabContent title=\"Total Transactions Leaderboard\" data={totalTransactionsBoard} username={username} />}\n                </div>\n            </div>\n        );\n    }\n};\n\nconst applyPagination = (\n    data: { position: number; username: string; score: number }[],\n    page: number,\n    limit: number\n) => {\n    return data.slice(page * limit, page * limit + limit);\n};\n\nconst TabContent = ({ title, data, username }: { title: string; data: { position: number; username: string; score: number }[]; username: string; }) => {\n\n    const [page, setPage] = useState(1);\n    const limit = 10;\n    const totalPages = Math.ceil(data.length / limit);\n\n    const handlePreviousPage = () => {\n        if (page > 1) {\n          setPage(page - 1);\n        }\n      };\n    \n    const handleNextPage = () => {\n        if (page < totalPages) {\n            setPage(page + 1);\n        }\n    };\n\n    const paginatedData = applyPagination(data, page - 1, limit);\n\n    return (\n        <div>\n          <h2 className=\"text-xl font-bold mb-4\">{title}</h2>\n          <div className=\"overflow-y-auto\">\n            <ul className=\"space-y-2\">\n              {paginatedData.map((user, index) => (\n                <li\n                    key={user.position}\n                    className={`flex items-center justify-between p-4 rounded-lg shadow-md ${user.username === username ? 'bg-red-500 text-white' : index % 2 === 0 ? 'bg-gray-100' : 'bg-white'}`}\n                >\n                  <div className=\"flex items-center space-x-4\">\n                    <span className=\"text-md font-bold\">{user.position}</span>\n                    <span className=\"text-md\">{user.username}</span>\n                  </div>\n                  <span className=\"text-md font-semibold\">{title.includes(\"Profits\") ? '$' : ''}{user.score}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" mt={4}>\n            <div className=\"flex mt-5 flex-row gap-2 justify-center\">\n                <IconButton onClick={handlePreviousPage} disabled={page === 1}>\n                    <FaArrowLeft />\n                </IconButton>\n                <Typography variant=\"body1\" mx={2}>\n                    Page {page} of {totalPages}\n                </Typography>\n                <IconButton onClick={handleNextPage} disabled={page === totalPages}>\n                    <FaArrowRight />\n                </IconButton>\n            </div>\n          </Box>\n        </div>\n    );\n};\n\nexport default Leaderboard;","import { redirect, type LoaderFunctionArgs } from '@remix-run/node'\nimport { requireUserId, logout } from '#app/utils/auth.server.ts'\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst user = await requireUserId(request)\n\tif (!user) {\n\t\tconst requestUrl = new URL(request.url)\n\t\tconst loginParams = new URLSearchParams([\n\t\t\t['redirectTo', `${requestUrl.pathname}${requestUrl.search}`],\n\t\t])\n\t\tconst redirectTo = `/login?${loginParams}`\n\t\tawait logout({ request, redirectTo })\n\t\treturn redirect(redirectTo)\n\t}\n\treturn redirect(`/user`)\n}\n","import { generateRobotsTxt } from '@nasa-gcn/remix-seo'\nimport { type LoaderFunctionArgs } from '@remix-run/node'\nimport { getDomainUrl } from '#app/utils/misc.tsx'\n\nexport function loader({ request }: LoaderFunctionArgs) {\n\treturn generateRobotsTxt([\n\t\t{ type: 'sitemap', value: `${getDomainUrl(request)}/sitemap.xml` },\n\t])\n}\n","import { generateSitemap } from '@nasa-gcn/remix-seo'\nimport { type ServerBuild, type LoaderFunctionArgs } from '@remix-run/node'\nimport { getDomainUrl } from '#app/utils/misc.tsx'\n\nexport async function loader({ request, context }: LoaderFunctionArgs) {\n\tconst serverBuild = (await context.serverBuild) as { build: ServerBuild }\n\treturn generateSitemap(request, serverBuild.build.routes, {\n\t\tsiteUrl: getDomainUrl(request),\n\t\theaders: {\n\t\t\t'Cache-Control': `public, max-age=${60 * 5}`,\n\t\t},\n\t})\n}\n","import { json, type LoaderFunctionArgs } from '@remix-run/node'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { getDomainUrl } from '#app/utils/misc.tsx'\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst user = await requireUserId(request)\n\n\tconst domain = getDomainUrl(request)\n\n\treturn json({\n\t\tuser: {\n\t\t\t...user,\n\t\t\timage: user.image\n\t\t\t\t? {\n\t\t\t\t\t\t...user.image,\n\t\t\t\t\t\turl: `${domain}/resources/user-images/${user.image.id}`,\n\t\t\t\t\t}\n\t\t\t\t: null,\n\t\t},\n\t})\n}\n","import { json } from '@remix-run/node';\nimport { Resend } from 'resend';\n\nconst resend = new Resend(process.env.RESEND_API_KEY);\n\nexport const loader = async () => {\n  const { data, error } = await resend.emails.send({\n    from: 'peter.tang.lai@gmail.com',\n    to: 'peter.tang.lai@gmail.com',\n    subject: 'Hello world',\n    html: '<strong>It works!</strong>',\n  });\n\n  if (error) {\n    return json({ error }, 400);\n  }\n\n  return json(data, 200);\n};\n","import { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { json, type LoaderFunctionArgs } from '@remix-run/node'\nimport { Link, Outlet, useMatches, useLoaderData } from '@remix-run/react'\nimport { z } from 'zod'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { cn } from '#app/utils/misc.tsx'\nimport { useUser } from '#app/utils/user.ts'\nimport { useLocation } from 'react-router-dom';\n\n\nexport const BreadcrumbHandle = z.object({ breadcrumb: z.any() })\nexport type BreadcrumbHandle = z.infer<typeof BreadcrumbHandle>\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"file-text\">Edit Profile</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nconst BreadcrumbHandleMatch = z.object({\n\thandle: BreadcrumbHandle,\n})\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\n\t// Parse the URL and query parameters\n\tconst url = new URL(request.url);\n\tconst searchParams = new URLSearchParams(url.search);\n   \n\t// Retrieve the query parameters\n\tconst username = searchParams.get('username');\n\n\treturn json({\n\t\tusername\n\t})\n}\n\nexport default function EditUserProfile() {\n\n\tconst data = useLoaderData<typeof loader>()\n\n\tconst matches = useMatches()\n\tconst breadcrumbs = matches\n\t\t.map((m) => {\n\t\t\tconst result = BreadcrumbHandleMatch.safeParse(m)\n\t\t\tif (!result.success || !result.data.handle.breadcrumb) return null\n\t\t\treturn (\n\t\t\t\t<Link key={m.id} to={m.pathname} className=\"flex items-center\">\n\t\t\t\t\t{result.data.handle.breadcrumb}\n\t\t\t\t</Link>\n\t\t\t)\n\t\t})\n\t\t.filter(Boolean)\n\n\treturn (\n\t\t<div className=\"m-auto mb-24 mt-16 max-w-3xl\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<ul className=\"flex gap-3\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tclassName=\"text-muted-foreground\"\n\t\t\t\t\t\t\tto={`/user`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tProfile\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t{breadcrumbs.map((breadcrumb, i, arr) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tclassName={cn('flex items-center gap-3', {\n\t\t\t\t\t\t\t\t'text-muted-foreground': i < arr.length - 1,\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t‚ñ∂Ô∏è {breadcrumb}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<Spacer size=\"xs\" />\n\t\t\t<main className=\"mx-auto bg-muted px-6 py-8 md:container md:rounded-3xl\">\n\t\t\t\t<Outlet />\n\t\t\t</main>\n\t\t</div>\n\t)\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { invariantResponse } from '@epic-web/invariant'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tjson,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n} from '@remix-run/node'\nimport { Link, useFetcher, useLoaderData } from '@remix-run/react'\nimport { z } from 'zod'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireUserId, sessionKey } from '#app/utils/auth.server.ts'\nimport { getUserImgSrc, useDoubleCheck } from '#app/utils/misc.tsx'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { NameSchema, UsernameSchema } from '#app/utils/user-validation.ts'\nimport { useLocation } from 'react-router-dom';\n\n//API\n// @ts-ignore\nimport { userAPI } from '../../api/userAPI';\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nconst ProfileFormSchema = z.object({\n\tname: NameSchema.optional(),\n\tusername: UsernameSchema,\n\temail: z.string().email(),\n})\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\n\t// Parse the URL and query parameters\n\tconst url = new URL(request.url);\n\tconst searchParams = new URLSearchParams(url.search);\n   \n\t// Retrieve the query parameters\n\tconst username = searchParams.get('username');\n\tconst id = searchParams.get('id');\n\tconst email = searchParams.get('email');\n\tconst name = searchParams.get('name');\n\n\treturn json({\n\t\tusername,\n\t\tid, \n\t\tname,\n\t\temail,\n\t})\n}\n\ntype ProfileActionArgs = {\n\trequest: Request\n\tuserId: string\n\tformData: FormData\n}\nconst profileUpdateActionIntent = 'update-profile'\nconst signOutOfSessionsActionIntent = 'sign-out-of-sessions'\nconst deleteDataActionIntent = 'delete-data'\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst formData = await request.formData()\n\tconst intent = formData.get('intent')\n\tswitch (intent) {\n\t\tcase profileUpdateActionIntent: {\n\t\t\treturn profileUpdateAction({ request, userId, formData })\n\t\t}\n\t\tcase signOutOfSessionsActionIntent: {\n\t\t\treturn signOutOfSessionsAction({ request, userId, formData })\n\t\t}\n\t\tcase deleteDataActionIntent: {\n\t\t\treturn deleteDataAction({ request, userId, formData })\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Response(`Invalid intent \"${intent}\"`, { status: 400 })\n\t\t}\n\t}\n}\n\nexport default function EditUserProfile() {\n\tconst data = useLoaderData<typeof loader>()\n\n\treturn (\n\t\t<div className=\"flex flex-col gap-12\">\n\t\t\t<UpdateProfile />\n\n\t\t\t{/*<div className=\"col-span-6 my-6 h-1 border-b-[1.5px] border-foreground\" />\n\t\t\t<div className=\"col-span-full flex flex-col gap-6\">\n\t\t\t\t<div>\n\t\t\t\t\t<Link to=\"change-email\">\n\t\t\t\t\t\t<Icon name=\"envelope-closed\">\n\t\t\t\t\t\t\tChange email from {data.email}\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</div>*/}\n\t\t</div>\n\t)\n}\n\nasync function profileUpdateAction({ userId, formData }: ProfileActionArgs) {\n\n\tconst response = await userAPI.updateProfile(userId, formData.get('name'), formData.get('username'), formData.get('email'));\n\n\treturn json({\n\t\tresult: response.data,\n\t})\n}\n\nfunction UpdateProfile() {\n\tconst data = useLoaderData<typeof loader>()\n\n\tconst fetcher = useFetcher<typeof profileUpdateAction>()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'edit-profile',\n\t\tconstraint: getZodConstraint(ProfileFormSchema),\n\t\tlastResult: fetcher.data?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ProfileFormSchema })\n\t\t},\n\t\tdefaultValue: {\n\t\t\tusername: data.username,\n\t\t\tname: data.name,\n\t\t\temail: data.email,\n\t\t},\n\t})\n\n\treturn (\n\t\t<fetcher.Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t<div className=\"grid grid-cols-6 gap-x-10\">\n\t\t\t\t<Field\n\t\t\t\t\tclassName=\"col-span-3\"\n\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\thtmlFor: fields.username.id,\n\t\t\t\t\t\tchildren: 'Username',\n\t\t\t\t\t}}\n\t\t\t\t\tinputProps={getInputProps(fields.username, { type: 'text' })}\n\t\t\t\t\terrors={fields.username.errors}\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tclassName=\"col-span-3\"\n\t\t\t\t\tlabelProps={{ htmlFor: fields.name.id, children: 'Name' }}\n\t\t\t\t\tinputProps={getInputProps(fields.name, { type: 'text' })}\n\t\t\t\t\terrors={fields.name.errors}\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tclassName=\"col-span-3\"\n\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\thtmlFor: fields.username.id,\n\t\t\t\t\t\tchildren: 'Email',\n\t\t\t\t\t}}\n\t\t\t\t\tinputProps={getInputProps(fields.email, { type: 'text' })}\n\t\t\t\t\terrors={fields.email.errors}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t<div className=\"mt-8 flex justify-center\">\n\t\t\t\t<StatusButton\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tsize=\"wide\"\n\t\t\t\t\tname=\"intent\"\n\t\t\t\t\tvalue={profileUpdateActionIntent}\n\t\t\t\t\tstatus={\n\t\t\t\t\t\tfetcher.state !== 'idle' ? 'pending' : (form.status ?? 'idle')\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tSave changes\n\t\t\t\t</StatusButton>\n\t\t\t</div>\n\t\t</fetcher.Form>\n\t)\n}\n\nasync function signOutOfSessionsAction({ request, userId }: ProfileActionArgs) {\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst sessionId = authSession.get(sessionKey)\n\tinvariantResponse(\n\t\tsessionId,\n\t\t'You must be authenticated to sign out of other sessions',\n\t)\n\treturn json({ status: 'success' } as const)\n}\n\nfunction SignOutOfSessions() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst dc = useDoubleCheck()\n\n\t/*const fetcher = useFetcher<typeof signOutOfSessionsAction>()\n\tconst otherSessionsCount = data.user._count.sessions - 1\n\treturn (\n\t\t<div>\n\t\t\t{otherSessionsCount ? (\n\t\t\t\t<fetcher.Form method=\"POST\">\n\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t{...dc.getButtonProps({\n\t\t\t\t\t\t\ttype: 'submit',\n\t\t\t\t\t\t\tname: 'intent',\n\t\t\t\t\t\t\tvalue: signOutOfSessionsActionIntent,\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tvariant={dc.doubleCheck ? 'destructive' : 'default'}\n\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\tfetcher.state !== 'idle'\n\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t: (fetcher.data?.status ?? 'idle')\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon name=\"avatar\">\n\t\t\t\t\t\t\t{dc.doubleCheck\n\t\t\t\t\t\t\t\t? `Are you sure?`\n\t\t\t\t\t\t\t\t: `Sign out of ${otherSessionsCount} other sessions`}\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</StatusButton>\n\t\t\t\t</fetcher.Form>\n\t\t\t) : (\n\t\t\t\t<Icon name=\"avatar\">This is your only session</Icon>\n\t\t\t)}\n\t\t</div>\n\t)*/\n}\n\nasync function deleteDataAction({ userId }: ProfileActionArgs) {\n\treturn redirectWithToast('/', {\n\t\ttype: 'success',\n\t\ttitle: 'Data Deleted',\n\t\tdescription: 'All of your data has been deleted',\n\t})\n}\n\nfunction DeleteData() {\n\tconst dc = useDoubleCheck()\n\n\tconst fetcher = useFetcher<typeof deleteDataAction>()\n\treturn (\n\t\t<div>\n\t\t\t<fetcher.Form method=\"POST\">\n\t\t\t\t<StatusButton\n\t\t\t\t\t{...dc.getButtonProps({\n\t\t\t\t\t\ttype: 'submit',\n\t\t\t\t\t\tname: 'intent',\n\t\t\t\t\t\tvalue: deleteDataActionIntent,\n\t\t\t\t\t})}\n\t\t\t\t\tvariant={dc.doubleCheck ? 'destructive' : 'default'}\n\t\t\t\t\tstatus={fetcher.state !== 'idle' ? 'pending' : 'idle'}\n\t\t\t\t>\n\t\t\t\t\t<Icon name=\"trash\">\n\t\t\t\t\t\t{dc.doubleCheck ? `Are you sure?` : `Delete all your data`}\n\t\t\t\t\t</Icon>\n\t\t\t\t</StatusButton>\n\t\t\t</fetcher.Form>\n\t\t</div>\n\t)\n}\n","import { remember } from '@epic-web/remember'\nimport { PrismaClient } from '@prisma/client'\nimport chalk from 'chalk'\n\nexport const prisma = remember('prisma', () => {\n\t// NOTE: if you change anything in this function you'll need to restart\n\t// the dev server to see your changes.\n\n\t// Feel free to change this log threshold to something that makes sense for you\n\tconst logThreshold = 20\n\n\tconst client = new PrismaClient({\n\t\tlog: [\n\t\t\t{ level: 'query', emit: 'event' },\n\t\t\t{ level: 'error', emit: 'stdout' },\n\t\t\t{ level: 'warn', emit: 'stdout' },\n\t\t],\n\t})\n\tclient.$on('query', async (e) => {\n\t\tif (e.duration < logThreshold) return\n\t\tconst color =\n\t\t\te.duration < logThreshold * 1.1\n\t\t\t\t? 'green'\n\t\t\t\t: e.duration < logThreshold * 1.2\n\t\t\t\t\t? 'blue'\n\t\t\t\t\t: e.duration < logThreshold * 1.3\n\t\t\t\t\t\t? 'yellow'\n\t\t\t\t\t\t: e.duration < logThreshold * 1.4\n\t\t\t\t\t\t\t? 'redBright'\n\t\t\t\t\t\t\t: 'red'\n\t\tconst dur = chalk[color](`${e.duration}ms`)\n\t\tconsole.info(`prisma:query - ${dur} - ${e.query}`)\n\t})\n\tvoid client.$connect()\n\treturn client\n})\n","import { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tjson,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n} from '@remix-run/node'\nimport { useFetcher } from '@remix-run/react'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireRecentVerification } from '#app/routes/_auth+/verify.server.ts'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { useDoubleCheck } from '#app/utils/misc.tsx'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { type BreadcrumbHandle } from './profile.tsx'\nimport { twoFAVerificationType } from './profile.two-factor.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"lock-open-1\">Disable</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tawait requireRecentVerification(request)\n\treturn json({})\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tawait requireRecentVerification(request)\n\tconst userId = await requireUserId(request)\n\tawait prisma.verification.delete({\n\t\twhere: { target_type: { target: userId, type: twoFAVerificationType } },\n\t})\n\treturn redirectWithToast('/settings/profile/two-factor', {\n\t\ttitle: '2FA Disabled',\n\t\tdescription: 'Two factor authentication has been disabled.',\n\t})\n}\n\nexport default function TwoFactorDisableRoute() {\n\tconst disable2FAFetcher = useFetcher<typeof action>()\n\tconst dc = useDoubleCheck()\n\n\treturn (\n\t\t<div className=\"mx-auto max-w-sm\">\n\t\t\t<disable2FAFetcher.Form method=\"POST\">\n\t\t\t\t<p>\n\t\t\t\t\tDisabling two factor authentication is not recommended. However, if\n\t\t\t\t\tyou would like to do so, click here:\n\t\t\t\t</p>\n\t\t\t\t<StatusButton\n\t\t\t\t\tvariant=\"destructive\"\n\t\t\t\t\tstatus={disable2FAFetcher.state === 'loading' ? 'pending' : 'idle'}\n\t\t\t\t\t{...dc.getButtonProps({\n\t\t\t\t\t\tclassName: 'mx-auto',\n\t\t\t\t\t\tname: 'intent',\n\t\t\t\t\t\tvalue: 'disable',\n\t\t\t\t\t\ttype: 'submit',\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t{dc.doubleCheck ? 'Are you sure?' : 'Disable 2FA'}\n\t\t\t\t</StatusButton>\n\t\t\t</disable2FAFetcher.Form>\n\t\t</div>\n\t)\n}\n","import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tjson,\n\tredirect,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n} from '@remix-run/node'\nimport {\n\tForm,\n\tuseActionData,\n\tuseLoaderData,\n\tuseNavigation,\n} from '@remix-run/react'\nimport * as QRCode from 'qrcode'\nimport { z } from 'zod'\nimport { ErrorList, OTPField } from '#app/components/forms.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { isCodeValid } from '#app/routes/_auth+/verify.server.ts'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { getDomainUrl, useIsPending } from '#app/utils/misc.tsx'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { getTOTPAuthUri } from '#app/utils/totp.server.ts'\nimport { type BreadcrumbHandle } from './profile.tsx'\nimport { twoFAVerificationType } from './profile.two-factor.tsx'\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"check\">Verify</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nconst CancelSchema = z.object({ intent: z.literal('cancel') })\nconst VerifySchema = z.object({\n\tintent: z.literal('verify'),\n\tcode: z.string().min(6).max(6),\n})\n\nconst ActionSchema = z.discriminatedUnion('intent', [\n\tCancelSchema,\n\tVerifySchema,\n])\n\nexport const twoFAVerifyVerificationType = '2fa-verify'\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst verification = await prisma.verification.findUnique({\n\t\twhere: {\n\t\t\ttarget_type: { type: twoFAVerifyVerificationType, target: userId },\n\t\t},\n\t\tselect: {\n\t\t\tid: true,\n\t\t\talgorithm: true,\n\t\t\tsecret: true,\n\t\t\tperiod: true,\n\t\t\tdigits: true,\n\t\t},\n\t})\n\tif (!verification) {\n\t\treturn redirect('/settings/profile/two-factor')\n\t}\n\tconst user = await prisma.user.findUniqueOrThrow({\n\t\twhere: { id: userId },\n\t\tselect: { email: true },\n\t})\n\tconst issuer = new URL(getDomainUrl(request)).host\n\tconst otpUri = getTOTPAuthUri({\n\t\t...verification,\n\t\taccountName: user.email,\n\t\tissuer,\n\t})\n\tconst qrCode = await QRCode.toDataURL(otpUri)\n\treturn json({ otpUri, qrCode })\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst formData = await request.formData()\n\n\tconst submission = await parseWithZod(formData, {\n\t\tschema: () =>\n\t\t\tActionSchema.superRefine(async (data, ctx) => {\n\t\t\t\tif (data.intent === 'cancel') return null\n\t\t\t\tconst codeIsValid = await isCodeValid({\n\t\t\t\t\tcode: data.code,\n\t\t\t\t\ttype: twoFAVerifyVerificationType,\n\t\t\t\t\ttarget: userId,\n\t\t\t\t})\n\t\t\t\tif (!codeIsValid) {\n\t\t\t\t\tctx.addIssue({\n\t\t\t\t\t\tpath: ['code'],\n\t\t\t\t\t\tcode: z.ZodIssueCode.custom,\n\t\t\t\t\t\tmessage: `Invalid code`,\n\t\t\t\t\t})\n\t\t\t\t\treturn z.NEVER\n\t\t\t\t}\n\t\t\t}),\n\t\tasync: true,\n\t})\n\n\tif (submission.status !== 'success') {\n\t\treturn json(\n\t\t\t{ result: submission.reply() },\n\t\t\t{ status: submission.status === 'error' ? 400 : 200 },\n\t\t)\n\t}\n\n\tswitch (submission.value.intent) {\n\t\tcase 'cancel': {\n\t\t\tawait prisma.verification.deleteMany({\n\t\t\t\twhere: { type: twoFAVerifyVerificationType, target: userId },\n\t\t\t})\n\t\t\treturn redirect('/settings/profile/two-factor')\n\t\t}\n\t\tcase 'verify': {\n\t\t\tawait prisma.verification.update({\n\t\t\t\twhere: {\n\t\t\t\t\ttarget_type: { type: twoFAVerifyVerificationType, target: userId },\n\t\t\t\t},\n\t\t\t\tdata: { type: twoFAVerificationType },\n\t\t\t})\n\t\t\treturn redirectWithToast('/settings/profile/two-factor', {\n\t\t\t\ttype: 'success',\n\t\t\t\ttitle: 'Enabled',\n\t\t\t\tdescription: 'Two-factor authentication has been enabled.',\n\t\t\t})\n\t\t}\n\t}\n}\n\nexport default function TwoFactorRoute() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst actionData = useActionData<typeof action>()\n\tconst navigation = useNavigation()\n\n\tconst isPending = useIsPending()\n\tconst pendingIntent = isPending ? navigation.formData?.get('intent') : null\n\n\tconst [form, fields] = useForm({\n\t\tid: 'verify-form',\n\t\tconstraint: getZodConstraint(ActionSchema),\n\t\tlastResult: actionData?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ActionSchema })\n\t\t},\n\t})\n\tconst lastSubmissionIntent = fields.intent.value\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"flex flex-col items-center gap-4\">\n\t\t\t\t<img alt=\"qr code\" src={data.qrCode} className=\"h-56 w-56\" />\n\t\t\t\t<p>Scan this QR code with your authenticator app.</p>\n\t\t\t\t<p className=\"text-sm\">\n\t\t\t\t\tIf you cannot scan the QR code, you can manually add this account to\n\t\t\t\t\tyour authenticator app using this code:\n\t\t\t\t</p>\n\t\t\t\t<div className=\"p-3\">\n\t\t\t\t\t<pre\n\t\t\t\t\t\tclassName=\"whitespace-pre-wrap break-all text-sm\"\n\t\t\t\t\t\taria-label=\"One-time Password URI\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{data.otpUri}\n\t\t\t\t\t</pre>\n\t\t\t\t</div>\n\t\t\t\t<p className=\"text-sm\">\n\t\t\t\t\tOnce you've added the account, enter the code from your authenticator\n\t\t\t\t\tapp below. Once you enable 2FA, you will need to enter a code from\n\t\t\t\t\tyour authenticator app every time you log in or perform important\n\t\t\t\t\tactions. Do not lose access to your authenticator app, or you will\n\t\t\t\t\tlose access to your account.\n\t\t\t\t</p>\n\t\t\t\t<div className=\"flex w-full max-w-xs flex-col justify-center gap-4\">\n\t\t\t\t\t<Form method=\"POST\" {...getFormProps(form)} className=\"flex-1\">\n\t\t\t\t\t\t<div className=\"flex items-center justify-center\">\n\t\t\t\t\t\t\t<OTPField\n\t\t\t\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\t\t\t\thtmlFor: fields.code.id,\n\t\t\t\t\t\t\t\t\tchildren: 'Code',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\t\t...getInputProps(fields.code, { type: 'text' }),\n\t\t\t\t\t\t\t\t\tautoFocus: true,\n\t\t\t\t\t\t\t\t\tautoComplete: 'one-time-code',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\terrors={fields.code.errors}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"min-h-[32px] px-4 pb-3 pt-1\">\n\t\t\t\t\t\t\t<ErrorList id={form.errorId} errors={form.errors} />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"flex justify-between gap-4\">\n\t\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\t\t\tpendingIntent === 'verify'\n\t\t\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t\t\t: lastSubmissionIntent === 'verify'\n\t\t\t\t\t\t\t\t\t\t\t? (form.status ?? 'idle')\n\t\t\t\t\t\t\t\t\t\t\t: 'idle'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tname=\"intent\"\n\t\t\t\t\t\t\t\tvalue=\"verify\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\t\t\tpendingIntent === 'cancel'\n\t\t\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t\t\t: lastSubmissionIntent === 'cancel'\n\t\t\t\t\t\t\t\t\t\t\t? (form.status ?? 'idle')\n\t\t\t\t\t\t\t\t\t\t\t: 'idle'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tname=\"intent\"\n\t\t\t\t\t\t\t\tvalue=\"cancel\"\n\t\t\t\t\t\t\t\tdisabled={isPending}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tjson,\n\tredirect,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n} from '@remix-run/node'\nimport { Link, useFetcher, useLoaderData } from '@remix-run/react'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { generateTOTP } from '#app/utils/totp.server.ts'\nimport { twoFAVerificationType } from './profile.two-factor.tsx'\nimport { twoFAVerifyVerificationType } from './profile.two-factor.verify.tsx'\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst verification = await prisma.verification.findUnique({\n\t\twhere: { target_type: { type: twoFAVerificationType, target: userId } },\n\t\tselect: { id: true },\n\t})\n\treturn json({ is2FAEnabled: Boolean(verification) })\n}\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst { otp: _otp, ...config } = generateTOTP()\n\tconst verificationData = {\n\t\t...config,\n\t\ttype: twoFAVerifyVerificationType,\n\t\ttarget: userId,\n\t}\n\tawait prisma.verification.upsert({\n\t\twhere: {\n\t\t\ttarget_type: { target: userId, type: twoFAVerifyVerificationType },\n\t\t},\n\t\tcreate: verificationData,\n\t\tupdate: verificationData,\n\t})\n\treturn redirect('/settings/profile/two-factor/verify')\n}\n\nexport default function TwoFactorRoute() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst enable2FAFetcher = useFetcher<typeof action>()\n\n\treturn (\n\t\t<div className=\"flex flex-col gap-4\">\n\t\t\t{data.is2FAEnabled ? (\n\t\t\t\t<>\n\t\t\t\t\t<p className=\"text-lg\">\n\t\t\t\t\t\t<Icon name=\"check\">\n\t\t\t\t\t\t\tYou have enabled two-factor authentication.\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</p>\n\t\t\t\t\t<Link to=\"disable\">\n\t\t\t\t\t\t<Icon name=\"lock-open-1\">Disable 2FA</Icon>\n\t\t\t\t\t</Link>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<Icon name=\"lock-open-1\">\n\t\t\t\t\t\t\tYou have not enabled two-factor authentication yet.\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</p>\n\t\t\t\t\t<p className=\"text-sm\">\n\t\t\t\t\t\tTwo factor authentication adds an extra layer of security to your\n\t\t\t\t\t\taccount. You will need to enter a code from an authenticator app\n\t\t\t\t\t\tlike{' '}\n\t\t\t\t\t\t<a className=\"underline\" href=\"https://1password.com/\">\n\t\t\t\t\t\t\t1Password\n\t\t\t\t\t\t</a>{' '}\n\t\t\t\t\t\tto log in.\n\t\t\t\t\t</p>\n\t\t\t\t\t<enable2FAFetcher.Form method=\"POST\">\n\t\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tname=\"intent\"\n\t\t\t\t\t\t\tvalue=\"enable\"\n\t\t\t\t\t\t\tstatus={enable2FAFetcher.state === 'loading' ? 'pending' : 'idle'}\n\t\t\t\t\t\t\tclassName=\"mx-auto\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tEnable 2FA\n\t\t\t\t\t\t</StatusButton>\n\t\t\t\t\t</enable2FAFetcher.Form>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n","import { api } from \"./config/axiosConfig\";\n\n//Toast\nimport { toast } from 'react-toastify';\n\nexport const transactionAPI = {\n    \n    buyStock: async function (businessId, amount, token) {\n\n        try {\n            const response = await api.request({\n                url: `/trade/buyShare`,\n                method: \"POST\",\n                data: {\n                    businessId: businessId,\n                    price: amount,\n                    token: token\n                },\n            })\n            \n            // returning the product returned by the API\n            return response;\n        } catch (error) {\n\n            // Show error toast\n            toast.error('You have insufficient funds to buy this stock');\n\n            throw error; // Re-throw the error to be handled by the caller\n        }\n    },\n\n    sellStock: async function (businessId, amount, token) {\n\n        const response = await api.request({\n          url: `/trade/sellShare`,\n          method: \"POST\",\n          data: {\n            businessId: businessId,\n            price: amount,\n            token: token\n          },\n        })\n        \n        // returning the product returned by the API\n        return response;\n    },\n\n    sendPayment: async function (amount, token, redirectURL) {\n\n        const response = await api.request({\n          url: `/payment/sendPayment`,\n          method: \"POST\",\n          data: {\n            amount: amount,\n            token: token,\n            redirectURL: redirectURL\n          },\n        })\n        \n        // returning the product returned by the API\n        return response;\n    },\n\n    addToWatchlist: async function (businessId, token) {\n\n        const response = await api.request({\n          url: `/users/addToWatchlist`,\n          method: \"POST\",\n          data: {\n            businessId: businessId,\n            token: token\n          },\n        })\n\n        // returning the product returned by the API\n        return response;\n    },\n\n    removeFromWatchlist: async function (businessId, token) {\n        \n          const response = await api.request({\n            url: `/users/removeFromWatchlist`,\n            method: \"POST\",\n            data: {\n              businessId: businessId,\n              token: token\n            },\n          })\n  \n          // returning the product returned by the API\n          return response;\n      },\n\n      //Withdraw Payment\n      withdrawFunds: async function (amount, token) {\n        \n        const response = await api.request({\n          url: `/users/withdrawFunds`,\n          method: \"POST\",\n          data: {\n            amount: amount,\n            token: token\n          },\n        })\n        \n        // returning the product returned by the API\n        return response;\n      },\n\n      /*------------------- Receipts -------------------*/\n      //Upload Receipt\n      uploadReceipt: async function (businessId, fileUrl, sessionToken) {\n        \n        const response = await api.request({\n          url: `/trade/saveReceipt`,\n          method: \"POST\",\n          data: {\n            businessId: businessId,\n            receiptUrl: fileUrl,\n            sessionToken: sessionToken\n          },\n        })\n        \n        // returning the product returned by the API\n        return response;\n      },\n\n      //Get Receipts\n      getReceipts: async function (businessId) {\n        \n        const response = await api.request({\n          url: `/trade/getReceipts`,\n          method: \"GET\",\n        })\n        \n        // returning the product returned by the API\n        return response.data;\n      },\n\n      //Delete Receipt\n      deleteReceipt: async function (receiptId) {\n        \n        const response = await api.request({\n          url: `/trade/deleteReceipt`,\n          method: \"POST\",\n          data: {\n            receiptId: receiptId\n          },\n        })\n        \n        // returning the product returned by the API\n        return response;\n      },\n\n      //Process Receipt\n      processReceipt: async function (receiptId, amount) {\n        \n        const response = await api.request({\n          url: `/trade/processReceipt`,\n          method: \"POST\",\n          data: {\n            receiptId: receiptId,\n            amount: amount\n          },\n        })\n        \n        // returning the product returned by the API\n        return response;\n      },\n};","import React from 'react';\nimport useEmblaCarousel from 'embla-carousel-react';\nimport Autoplay from 'embla-carousel-autoplay';\n\nimport { LoaderFunction, json } from '@remix-run/node';\nimport { Meta, useLoaderData } from '@remix-run/react';\nimport { useCallback, useEffect, useState } from 'react';\nimport { MetaFunction } from '@remix-run/node';\nimport { sessionKey } from '#app/utils/auth.server.ts'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n} from 'chart.js';\n\n//Import API\n// @ts-ignore\nimport { generalAPI } from \"../../api/generalAPI.js\"; // Adjust the path as necessary\n// @ts-ignore\nimport { userAPI } from \"../../api/userAPI.js\"; // Adjust the path as necessary\n// @ts-ignore\nimport { transactionAPI } from \"../../api/transactionAPI.js\"; // Adjust the path as necessary\n\nimport { format } from 'date-fns';\nimport { handle } from '../settings+/profile.js';\nimport { Link } from '@remix-run/react';\nimport { useNavigate } from 'react-router-dom';\n\n//Toast\nimport { ToastContainer, toast as showToast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Loading Screen\nimport RingLoader from \"react-spinners/RingLoader\";\n\n\n\n//Embla\nimport '#app/styles/embla.css';\n\nimport { isMobile } from 'react-device-detect';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\n// Define the Business type\ninterface Business {\n  id: string;\n  name: string;\n  logo: string;\n  location: string;\n  coordinates: [number, number];\n  imageAssets: [\n    {\n      imagePath: string;\n    }\n  ]\n  maxPricePerShare: number;\n  growthPercentage: number;\n  valuation: [\n    {\n      valuation: number;\n      maxPricePerShare: number;\n      valDate: string;\n    }\n  ];\n  buyOrders: [\n    {\n      amount: number;\n      tradeDate: string;\n    }\n  ];\n  sellOrders: [\n    {\n      amount: number;\n      tradeDate: string;\n    }\n  ];\n}\n\n//Ownership Permissions\ninterface Ownership {\n  buy: boolean;\n  sell: boolean;\n  balance: number;\n  watchlist: boolean;\n}\n\nexport const options = {\n  responsive: true,\n  tension: 0.3 // 2. Set the tension (curvature) of the line to your liking.  (You may want to lower this a smidge.)\n};\n\n\n// Fetch business details\nexport const loader: LoaderFunction = async ({ params, request }) => {\n  const { id } = params;\n\n  // Fetch data here\n\tconst business = await generalAPI.getPublicCompany(id);\n\n  //See if we are logged in by checking the session\n  const authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n  const session = authSession.get(sessionKey);\n\n  //Set Session if we are logged in\n  if (session) {\n\n    //Get client ownership details of this business\n    const ownerPermissions = await userAPI.getUserOwnedStocks(session, id);\n\n    if (ownerPermissions) {\n      return json({business, token: session, ownerPermissions});\n    }\n    else {\n      return json({business});\n    }\n  }\n  else {\n    return json({business});\n  }\n};\n\n// Meta function to add social media headers\nexport const meta: MetaFunction = ({ data }: { data: any }) => {\n  if (!data || !data.business) {\n    return [];\n  }\n\n  const { business } = data;\n  \n  return [\n    { title: `Co-Owners: ${business.name}` },\n    { property: \"og:title\", content: `Co-Owners: ${business.name}` },\n    { property: \"og:description\", content: `${business.name} co-owners page` },\n    { property: \"og:image\", content: business.logo },\n    { property: \"og:url\", content: `https://co-owners.ca/stocks/${business.id}` },\n    { property: \"og:type\", content: \"website\" },\n    { name: \"twitter:card\", content: \"summary_large_image\" },\n    { name: \"twitter:title\", content: `Co-Owners: ${business.name}` },\n    { name: \"twitter:description\", content: `${business.name} co-owners page` },\n    { name: \"twitter:image\", content: business.logo },\n    { name: \"twitter:url\", content: `https://co-owners.ca/stocks/${business.id}` },\n  ];\n};\n\n\nexport default function BusinessDetails() {\n\n  const { business, token, ownerPermissions }  = useLoaderData<{ business: Business, token: string, ownerPermissions: Ownership}>();\n\n  const googleMapsLink = `https://www.google.com/maps?q=${business.coordinates[1]},${business.coordinates[0]}`;\n  \n  // State to manage user login status\n  const [isLoggedIn, setIsLoggedIn] = useState(token ? true : false);\n\n  const navigate = useNavigate();\n\n  const data = {\n    labels: business.valuation.map((entry) => format(new Date(entry.valDate), 'MMM yyyy')),\n    datasets: [\n      {\n        label: 'Max Current Price',\n        data: business.valuation.map((entry) => entry.maxPricePerShare),\n        borderColor: 'rgba(255, 99, 132, 1)',\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n        fill: {\n          target: \"origin\", // 3. Set the fill options\n          above: \"rgba(255, 0, 0, 0.3)\"\n        },\n        tension: 0.4, // Smooth out the lines\n      },\n    ],\n  };\n\n\n  // Handler for Buy button click\n  const handleBuyClick = (ownerPermissions: Ownership) => {\n\n    const buyLink = new URLSearchParams({\n      type: 'Buy',\n      businessId: business.id,\n      balance: ownerPermissions.balance.toString()\n    }).toString();\n\n    if (isLoggedIn) {\n      if (!ownerPermissions.buy) {\n\n        showToast.error('You already own this stock already, maximum ownership is one stock per business.');\n\n        return;\n      }\n      else {\n        // Perform buy action\n        navigate(`/transact?${buyLink}`);\n      }\n    } else {\n      // Redirect to login or show login prompt\n      console.log('User is not logged in. Redirect to login.');\n    }\n  };\n\n  // Handler for Sell button click\n  const handleSellClick = async (ownerPermissions: Ownership) => {\n\n    const sellLink = new URLSearchParams({\n      type: 'Sell',\n      businessId: business.id,\n      balance: ownerPermissions.balance.toString()\n    }).toString();\n\n    if (isLoggedIn) {\n      if (!ownerPermissions.sell) {\n\n        showToast.error('You do not have any shares to sell.');\n\n        console.log('User does not have permission to sell.');\n        return;\n      }\n      else {\n        // Perform sell action\n        console.log('User is logged in. Proceed with Sell action.');\n        navigate(`/transact?${sellLink}`);\n      }\n    } else {\n      // Redirect to login or show login prompt\n      console.log('User is not logged in. Redirect to login.');\n    }\n  };\n\n  // Handler for Watchlist button click\n  const handleWatchlistClick = async (ownerPermissions: Ownership) => {\n\n    if (isLoggedIn) {\n    \n      const response = await transactionAPI.addToWatchlist(business.id, token);\n\n      if (response.status === 200) {\n\n        showToast.success('Business added to watchlist.');\n\n        // Refresh the page after the toast message\n        setTimeout(() => {\n          window.location.reload();\n        }, 2000); // Adjust the timeout duration as needed\n      }\n      else {\n        showToast.error('Error adding business to watchlist.');\n      }\n    }\n  }; \n\n  // Handler for Remove Watchlist button click\n  const removeWatchlistClick = async (ownerPermissions: Ownership) => {\n\n    if (isLoggedIn) {\n\n      const response = await transactionAPI.removeFromWatchlist(business.id, token);\n\n      if (response.status === 200) {\n\n        showToast.success('Business removed from watchlist.');\n\n        // Refresh the page after the toast message\n        setTimeout(() => {\n          window.location.reload();\n        }, 2000); // Adjust the timeout duration as needed\n      }\n      else {\n        showToast.error('Error removing business from watchlist.');\n      }\n    }\n  }\n\n  /**\n   * Google Maps link to the business location\n   */\n  const googleMapsPanel = () => (\n    <div className=\"bg-gray-400\">\n      <div className=\"p-4 lg:w-3/4 sm:w-full mx-auto\">\n        <a href={googleMapsLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          <LoadScript googleMapsApiKey=\"AIzaSyCn_0w1J9f-e1m7YKb59DhsRIftV05XU7A\">\n            <GoogleMap\n              mapContainerStyle={{ width: '100%', height: '30vh', borderRadius: '1rem' }}\n              center={{ lat: business.coordinates[1], lng: business.coordinates[0] }}\n              zoom={15}\n            >\n              <Marker\n                key={business.id}\n                position={{ lat: business.coordinates[1], lng: business.coordinates[0] }}\n              />\n            </GoogleMap>\n          </LoadScript>\n        </a>\n      </div>\n    </div>\n  );\n\n  /**\n   * Button panel for buying and selling stock\n   */\n  const buttonPanel = (ownerPermissions: Ownership) => (\n    <div className=\"p-4 w-full sm:w-3/4 mx-auto flex flex-col sm:flex-row justify-center space-y-4 sm:space-y-0 sm:space-x-4 lg:gap-4\">\n      <button \n        className={`py-4 px-10 rounded-xl text-xl sm:text-2xl ${ownerPermissions && ownerPermissions.buy ? 'bg-green-500 text-white' : 'bg-gray-500 text-gray-300 cursor-not-allowed'}`}\n        onClick={(e) => handleBuyClick(ownerPermissions)}\n        disabled={!ownerPermissions || !ownerPermissions.buy}\n      >\n        Buy\n      </button>\n      <button \n        className={`py-4 px-10 rounded-xl text-xl sm:text-2xl ${ownerPermissions && ownerPermissions.sell ? 'bg-red-500 text-white' : 'bg-gray-500 text-gray-300 cursor-not-allowed'}`}\n        onClick={(e) => handleSellClick(ownerPermissions)}\n        disabled={!ownerPermissions || !ownerPermissions.sell}\n      >\n        Sell\n      </button>\n      <button \n        className={`py-4 px-10 rounded-xl text-xl sm:text-2xl ${ownerPermissions && !ownerPermissions.watchlist ? 'bg-blue-500 text-white' : 'bg-red-500 text-white'}`}\n        onClick={ownerPermissions && !ownerPermissions.watchlist ? () => handleWatchlistClick(ownerPermissions) : () => removeWatchlistClick(ownerPermissions)}\n        disabled={!ownerPermissions}\n      >\n        {!ownerPermissions || !ownerPermissions.watchlist ? \"Add to Watchlist\" : \"Remove from Watchlist\" }\n      </button>\n    </div>\n  );\n\n\n  /**\n   * Graph of the business valuation and Current Price\n   */\n  const graph = () => (\n    <div className=\"p-2 lg:p-4 w-full lg:w-3/4 mx-auto\">\n      <h2 className=\"text-2xl sm:text-3xl font-bold text-center lg:text-left\">Valuation</h2>\n      <Line data={data} />\n    </div>\n  );\n\n  /**\n   * Screenshot the Business\n   */\n\n  /**\n   * Buy and Sell open orders table\n   * @returns JSX.Element\n   */\n  const orderTable = () => (\n    <div className=\"bg-blue-400\">\n      <div className=\"p-4 w-full sm:w-3/4 mx-auto\">\n        <div className=\"grid grid-cols-1 gap-4 lg:grid-cols-2\">\n          <div>\n            <h3 className=\"text-lg font-bold text-white mb-3 text-center lg:text-left\">Sell Orders</h3>\n            <table className=\"min-w-full bg-white rounded-lg\">\n              <thead>\n                <tr>\n                  <th className=\"py-2 px-4 border-b text-left\">Price</th>\n                  <th className=\"py-2 px-4 border-b text-left\">Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                {business.sellOrders.map((order, index) => (\n                  <tr key={index}>\n                    <td className=\"py-2 px-4 border-b\">${order.amount.toFixed(2)}</td>\n                    <td className=\"py-2 px-4 border-b\">{new Date(order.tradeDate).toLocaleDateString()}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          <div>\n            <h3 className=\"text-lg font-bold text-white mb-3 text-center lg:text-left\">Buy Orders</h3>\n            <table className=\"min-w-full bg-white rounded-lg\">\n              <thead>\n                <tr>\n                  <th className=\"py-2 px-4 border-b text-left\">Price</th>\n                  <th className=\"py-2 px-4 border-b text-left\">Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                {business.buyOrders.map((order, index) => (\n                  <tr key={index}>\n                    <td className=\"py-2 px-4 border-b\">${order.amount.toFixed(2)}</td>\n                    <td className=\"py-2 px-4 border-b\">{new Date(order.tradeDate).toLocaleDateString()}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  /**\n   * Image Carousel of the Business\n   */\n  const ImageCarousel: React.FC = () => {\n    const [viewportRef, embla] = useEmblaCarousel({ loop: true }, [Autoplay()]);\n\n    return (\n      <div className=\"embla\">\n        <div className=\"embla__viewport\" ref={viewportRef}>\n          <div className=\"embla__container\">\n            {business.imageAssets.map((image, index) => (\n              <div className=\"embla__slide\" key={index}>\n                <div className=\"embla__slide__number\">\n                  <img src={image.imagePath} alt={business.name}/>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const uploadLink = new URLSearchParams({\n    businessName: business.name,\n    logoUrl: business.logo,\n    businessId: business.id,\n  }).toString();\n\n  if (isMobile) {\n    return (\n      <div>\n        {googleMapsPanel()}\n        <div className=\"bg-gray-200\">\n          <div className=\"flex flex-col w-3/4 mx-auto p-4\">\n            <div className=\"flex items-start flex-col justify-between items-center mb-4\">\n              <img src={business.logo} alt={`${business.name} Logo`} className=\"w-16 h-16 object-contain mb-2 sm:mb-0\" />\n            </div>\n            <div className=\"flex flex-col sm:items-start\">\n              <h1 className=\"text-2xl font-bold sm:text-left\">{business.name}</h1>\n              <p className=\"sm:text-left\">{business.location}</p>\n            </div>\n            <div className=\"text-center mt-5\">\n              <p className=\"text-3xl font-semibold\">${business.maxPricePerShare.toFixed(2)}</p>\n              <p className={`text-lg ${business.growthPercentage >= 0 ? 'text-green-500 ' : 'text-red-500'}`}>\n                {business.growthPercentage >= 0 ? '+' : ''}{business.growthPercentage.toFixed(2)}%\n              </p>\n            </div>\n            <div className=\"flex mt-4 justify-center\">\n              <Link to={`/upload?${uploadLink}`} >\n                <button className=\"bg-blue-500 text-white px-4 py-2 rounded\">\n                  Upload Reciept\n                </button>\n              </Link>\n            </div>\n          </div>\n        </div>\n        <ImageCarousel />\n        {graph()}\n        {buttonPanel(ownerPermissions)}\n        {orderTable()}\n      </div>\n    );\n  }\n\n  else {\n    return (\n      <div>\n        <ToastContainer position='top-center' />\n        {googleMapsPanel()}\n\n        <div className=\"bg-gray-200\">\n          <div className=\"flex flex-col w-3/4 mx-auto p-4\">\n            <div className=\"flex items-start justify-between items-center mb-4\">\n              <img src={business.logo} alt={`${business.name} Logo`} className=\"w-16 h-16 object-contain mb-2\" />\n            </div>\n            <div className=\"flex justify-between items-center w-full\">\n              <div className=\"flex flex-col\">\n                <h1 className=\"text-2xl font-bold\">{business.name}</h1>\n                <p className=\"text-left\">{business.location}</p>\n              </div>\n              <div className=\"text-right\">\n                <p className=\"text-3xl font-semibold\">${business.maxPricePerShare.toFixed(2)}</p>\n                <p className={`text-lg ${business.growthPercentage >= 0 ? 'text-green-500 ' : 'text-red-500'}`}>\n                  {business.growthPercentage >= 0 ? '+' : ''}{business.growthPercentage.toFixed(2)}%\n                </p>\n              </div>\n            </div>\n            <div className=\"mt-4\">\n              <Link to={`/upload?${uploadLink}`} >\n                <button className=\"bg-blue-500 text-white px-4 py-2 rounded\">\n                  Upload Reciept\n                </button>\n              </Link>\n            </div>\n          </div>\n        </div>\n        <ImageCarousel />\n        {graph()}\n        {buttonPanel(ownerPermissions)}\n        {orderTable()}\n      </div>\n    );\n  }\n}","import { useState, useEffect } from 'react';\n\nconst defaultCoordinates = { lat: 52.1505506, lng: -106.7468104 }; // Replace with your default coordinates\n\nexport function useUserLocation() {\n  const [userLocation, setUserLocation] = useState(null);\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setUserLocation({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          });\n        },\n        (error) => {\n          console.error(\"Error getting user location:\", error);\n          // Fallback to a default location if user denies location access\n          setUserLocation(defaultCoordinates);\n        }\n      );\n    } else {\n      // Fallback to a default location if geolocation is not supported\n      setUserLocation(defaultCoordinates);\n    }\n  }, []);\n  \n  return userLocation;\n}","import { LoaderFunction, json } from '@remix-run/node';\nimport { useLoaderData, useNavigate, Link } from '@remix-run/react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { useCallback, useEffect, useState } from 'react';\n\n//Import API\n// @ts-ignore\nimport { generalAPI } from \"../../api/generalAPI.js\"; // Adjust the path as necessary\n\n// Import custom hook\n// @ts-ignore\nimport { useUserLocation } from '../../hooks/userLocation.js'; // Adjust the path as necessary\n\n// Loading Screen\nimport RingLoader from \"react-spinners/RingLoader\";\n\n// Define the Business type\ninterface Business {\n  id: string;\n  name: string;\n  coordinates: {\n    type: string;\n    coordinates: [number, number];\n  };\n}\n\nexport const defaultCoordinates = { lat: 52.1505506, lng: -106.7468104 };\n\nexport default function Stocks() {\n  //const initialBusinesses = useLoaderData<Business[]>();\n  const [businesses, setBusinesses] = useState<Business[] | null>(null);\n  const navigate = useNavigate();\n  const userLocation = useUserLocation();\n\n  const handleMarkerClick = useCallback((id: string) => {\n    navigate(`/stocks/${id}`);\n  }, [navigate]);\n\n  useEffect(() => {\n    if (userLocation) {\n      // Fetch businesses based on user location\n      generalAPI.getLocalCompanies(userLocation.lat, userLocation.lng).then((data: Business[]) => {\n        \n        const transformedData = data.map((business: any) => ({\n          id: business._id,\n          name: business.name,\n          coordinates: business.coordinates,\n        }));\n        setBusinesses(transformedData);\n      });\n    }\n  }, [userLocation]);\n\n  if (!businesses) {\n    return (\n      <div className=\"flex justify-center items-center h-screen\">\n        <RingLoader\n          color={\"#000080\"}\n          loading={true}\n          size={100}\n          aria-label=\"Loading Maps\"\n        />    \n      </div>\n    );\n  }\n  else {\n    return (\n      <LoadScript googleMapsApiKey=\"AIzaSyCn_0w1J9f-e1m7YKb59DhsRIftV05XU7A\">\n        <GoogleMap\n          mapContainerStyle={{ width: '100%', height: '100vh' }}\n          center={userLocation || defaultCoordinates}\n          zoom={10}\n        >\n          {businesses.map((business) => (\n            <Marker\n              key={business.id}\n              position={{ lat: business.coordinates.coordinates[1], lng: business.coordinates.coordinates[0] }}\n              onClick={() => handleMarkerClick(business.id)}\n            />\n          ))}\n        </GoogleMap>\n      </LoadScript>\n    );\n  }\n}","import { useState } from 'react';\n\nimport { LoaderFunction, json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\n\n// Stripe services\nimport { Elements, useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\n\n//API Services\n// @ts-ignore\nimport { transactionAPI } from \"../../api/transactionAPI.js\"; \n\n//Toast\nimport { ToastContainer, toast as showToast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n//Navigation\nimport { useNavigate } from 'react-router-dom';\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  \n    const url = new URL(request.url);\n    const businessId = url.searchParams.get('businessId');\n    const amount = url.searchParams.get('amount');\n    const balance = url.searchParams.get('balance');\n    const token = url.searchParams.get('token');\n    const redirect = url.searchParams.get('redirect');\n    const type = url.searchParams.get('type') ? url.searchParams.get('type') : null;\n    const stripeKey = process.env.STRIPE_PUBLIC_KEY\n\n    return json({ businessId, amount, balance, token, redirect, stripeKey, type });\n};\n\n\ninterface CheckoutFormProps {\n    amount: number;\n    balance: number;\n    token: string;\n    redirectURL: string;\n    type: string;\n}\n\nconst CheckoutForm: React.FC<CheckoutFormProps> = ({ amount, balance, token, redirectURL, type }) => {\n  const [amountState, setAmountState] = useState(Number(amount).toFixed(2)); // Pre-suggested value in cents (e.g., $10.00)\n  const stripe = useStripe();\n  const elements = useElements();\n  const [loading, setLoading] = useState(false);\n\n  const navigate = useNavigate();\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setLoading(true);\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    if (type === 'withdraw') {\n\n      if (balance < Number(amountState)) { \n\n        showToast.error(\"Not enough funds to withdraw.\");\n\n        setLoading(false);\n        return;\n      }\n      \n      try {\n        const response = await transactionAPI.withdrawFunds(amountState, token, redirectURL);\n        if (response.status === 200) {\n          showToast.success(\"Your funds have been withdrawn successfully.\");\n\n          //Redirect to the redirectURL\n          navigate(redirectURL);\n        }\n      } catch (error) {\n        console.error('Error creating Checkout Session:', error); \n      } finally {\n        setLoading(false);\n      }\n    }\n    else {\n      try {\n          const response = await transactionAPI.sendPayment(amountState, token, redirectURL);\n\n          if (response.status === 200) {\n              const session = response.data;\n\n              // Redirect to Stripe Checkout\n              const { error } = await stripe.redirectToCheckout({ \n                  sessionId: session.id \n              });\n          } \n      } catch (error) {\n          console.error('Error creating Checkout Session:', error);\n      } finally {\n          setLoading(false);\n      }\n    }\n  };\n\n  const calculateProcessingAmount = (amount:number) => {\n    return amount * 0.029 + 0.3;\n  };\n\n  const calculateFinalAmount = (amount: number) => {\n    return amount - calculateProcessingAmount(amount);\n  };\n\n\n  const processingAmount = calculateProcessingAmount(Number(amountState));\n  const finalAmount = calculateFinalAmount(Number(amountState));\n\n\n  return (\n      <div className=\"w-full max-w-md mx-auto mt-8 shadow-2xl rounded-xl\">\n        <div className=\"bg-blue-100 text-blue-800 p-4 rounded-t-lg text-center flex items-center justify-center space-x-2\">\n          <img src=\"https://stripe.com/img/v3/home/twitter.png\" alt=\"Stripe Logo\" className=\"h-6\" />\n          <span>Payment processing powered by Stripe</span>\n        </div>\n        <form onSubmit={handleSubmit} className=\"flex flex-col items-center space-y-4 bg-white p-6 rounded-b-lg shadow-md\">\n          {/* Display balance if it is not null */}\n          {balance !== null && (\n            <>\n              <label htmlFor=\"balance\" className=\"mt-5 text-md font-semibold\">Account Balance</label>\n              <p className=\"text-lg\">${balance.toFixed(2)}</p>\n            </>\n          )}\n          <label htmlFor=\"amount\" className=\"mt-5 text-xl font-semibold\">{ (type === null || type === 'deposit') ? 'Deposit' : 'Withdraw'} Amount</label>\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-xl\">$</span>\n            <input\n              value={amountState}\n              onChange={(e) => setAmountState(e.target.value)}\n              id=\"amount\"\n              type=\"number\"\n              placeholder=\"Enter amount\"\n              className=\"py-2 px-4 rounded-xl text-xl\"\n              step=\"0.01\"\n              min=\"1\"\n            />\n          </div>\n          <div className=\"mt-4\">\n            <p className=\"text-md text-red-500\">Stripe Fee: ${processingAmount.toFixed(2)}</p>\n            <p className=\"text-xl\">Final { (type === null || type === 'deposit') ? 'Deposit' : 'Withdraw'} Amount: ${finalAmount.toFixed(2)}</p>\n          </div>\n          <button\n            type=\"submit\"\n            className={`bg-blue-500 text-white py-4 px-10 rounded-xl text-2xl mb-5 ${loading ? 'opacity-50 cursor-not-allowed' : ''}`}\n            disabled={!stripe || loading}\n          >\n            {loading ? 'Processing...' : (type === null || type === 'deposit') ? 'Deposit' : 'Withdraw' }\n          </button>\n        </form>\n      </div>\n  );\n};\n\nexport default function DepositPage() {\n\n    //Load the data from the loader\n    const { businessId, amount, balance, token, redirect, stripeKey, type }  = useLoaderData<{ businessId: string, amount: string, balance: string, token: string, redirect: string, stripeKey: string, type: string }>();\n\n    // Load Toast Message if businessId is provided\n    //if (businessId) {\n    //    showToast.error('Not enough funds to purchase stock, please make a deposit.');\n    //}\n\n    // Load your public key from Stripe\n    const stripePromise = loadStripe(stripeKey);\n\n    return (\n      <div>\n          <ToastContainer position='top-center' />\n          {businessId && (\n            <div className=\"bg-red-500 text-white text-center p-4 mb-4\">\n              Not enough funds to purchase stock, please make a deposit.\n            </div>\n          )}\n          <Elements stripe={stripePromise}>\n              <div className=\"p-4 w-3/4 mx-auto flex justify-center\">\n                  <CheckoutForm amount={Number(amount)} balance={Number(balance)} token={token} redirectURL={redirect} type={type}/>\n              </div>\n          </Elements>\n      </div>\n        \n    );\n}","import React, { useState } from 'react';\n\nimport { LoaderFunction, json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { sessionKey } from '#app/utils/auth.server.ts'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { useNavigate } from 'react-router-dom';\n\n//Import API\n// @ts-ignore\nimport { generalAPI } from \"../../api/generalAPI.js\";\n// @ts-ignore\nimport { transactionAPI } from \"../../api/transactionAPI.js\"; \n\n//Toast\nimport { ToastContainer, toast as showToast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { isMobile } from 'react-device-detect';\n\n// Define the Business type\ninterface Business {\n  id: string;\n  name: string;\n  logo: string;\n  location: string;\n  coordinates: [number, number];\n  maxPricePerShare: number;\n  growthPercentage: number;\n  valuation: [\n    {\n      valuation: number;\n      maxPricePerShare: number;\n      valDate: string;\n    }\n  ];\n  buyOrders: [\n    {\n      amount: number;\n      tradeDate: string;\n    }\n  ];\n  sellOrders: [\n    {\n      amount: number;\n      tradeDate: string;\n    }\n  ];\n}\n\ninterface ButtonPanelProps {\n  transactionType: string;\n  balance: number | null;\n}\n\n// Fetch business details\nexport const loader: LoaderFunction = async ({ request }) => {\n  \n  const url = new URL(request.url);\n  const businessId = url.searchParams.get('businessId');\n  const transactionType = url.searchParams.get('type');\n  const balance = url.searchParams.get('balance');\n  const message = url.searchParams.get('message');\n\n  // Fetch data here\n\tconst business = await generalAPI.getPublicCompany(businessId);\n\n  //See if we are logged in by checking the session\n  const authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n  const session = authSession.get(sessionKey);\n\n  //Set Session if we are logged in\n  if (session) {\n    if (message === 'deposit') {\n      return json({business, transactionType, balance, token: session, message: 'Deposit Successful'});\n    }\n    else {\n      return json({business, transactionType, balance, token: session});\n    }\n  }\n  else {\n    return json({business, transactionType});\n  }\n};\n\nexport default function BusinessDetails() {\n\n  const { business, transactionType, balance, token, message }  = useLoaderData<{ business: Business, transactionType: string, balance: string, token: string, message: string }>();\n\n  // State to manage user login status\n  const [isLoggedIn, setIsLoggedIn] = useState(token ? true : false);\n\n  // Hook to navigate programmatically\n  const navigate = useNavigate();\n\n  //Raise Toast if message\n  if (message) {\n    showToast.success('Deposit Successful');\n  }\n\n  // Handler for Buy button click\n  const handleBuyClick = async (buyPrice: number) => {\n\n    if (isLoggedIn) {\n      try {\n        // Perform buy action\n        const response = await transactionAPI.buyStock(business.id, buyPrice, token)\n\n        if (response && response.status === 200) {\n          showToast.success('Your buy order has been placed or completed successfully');\n\n          // Redirect to /dashboard\n          navigate('/dashboard');\n        }\n      } catch (error) {\n\n          const buyLink = new URLSearchParams({\n              type: 'Buy',\n              businessId: business.id,\n              balance: balance,\n              message: 'deposit'\n          }).toString();\n\n          const stripeFee = Math.ceil((buyPrice * 0.029 + 0.30) * 100) / 100;\n          const adminFee = 0.10;\n          const totalFee = Math.ceil((buyPrice + stripeFee + adminFee) * 100) / 100;\n\n          const redirectUrlParms = new URLSearchParams({\n              amount: totalFee.toFixed(2).toString(),\n              businessId: business.id,\n              balance: balance,\n              token: token,\n              redirect: `/transact?${buyLink}`,\n          }).toString();\n\n          //Not enough funds\n          const redirectUrl = '/stripe?' + redirectUrlParms;\n\n          // Redirect to Stripe Payment\n          navigate(redirectUrl);\n          \n          throw error;\n          \n      }\n    } else {\n\n      // Redirect to login or show login prompt\n      showToast.success('You must be logged in to buy stock');\n\n      // Redirect to /dashboard\n      navigate('/login');\n    }\n  };\n\n  // Handler for Sell button click\n  const handleSellClick = async (sellPrice: number) => {\n\n    if (isLoggedIn) {\n\n      // Perform buy action\n      const response = await transactionAPI.sellStock(business.id, sellPrice, token)\n\n      if (response.status === 200) {\n      \n        showToast.success('Your sell order has been placed or completed successfully');\n\n        // Redirect to /dashboard\n        navigate('/dashboard');\n      }\n    } else {\n\n      // Redirect to login or show login prompt\n      showToast.success('You must be logged in to sell your stock');\n\n      // Redirect to /dashboard\n      navigate('/login');\n    }\n  };\n  \n  /**\n   * Button panel for buying and selling stock\n   */\n  const ButtonPanel: React.FC<ButtonPanelProps> = ({ transactionType, balance }) => {\n    const [buyPrice, setBuyPrice] = useState<number | \"\">(0);\n    const [sellPrice, setSellPrice] = useState<number | \"\">(0);\n    \n    const handleBuySubmit = async (event: React.FormEvent) => {\n      \n      event.preventDefault();\n\n      //Check to see if buyPrice does not exceed Max Price Per Share\n      if (typeof buyPrice === 'number' && buyPrice > business.maxPricePerShare) {\n        \n        //Raise Toast\n        showToast.error('Your buy price cannot exceed the maximum allowed price per share');\n      }\n      else if (typeof buyPrice === 'number' && buyPrice > 0) {\n\n        const isConfirmed = window.confirm(`Are you sure you want to buy at $${sellPrice}?`);\n        if (isConfirmed) {\n          try {\n            await handleBuyClick(buyPrice as number);\n            // Handle success (e.g., show a success message)\n          } catch (error) {\n            // Handle error (e.g., show an error message)\n            console.error(error);\n          }\n        };\n      }\n    };\n  \n    const handleSellSubmit = async (event: React.FormEvent) => {\n\n      event.preventDefault();\n\n      //Check to see if buyPrice does not exceed Max Price Per Share\n      if (typeof sellPrice === 'number' && sellPrice > business.maxPricePerShare) {\n\n        //Raise Toast\n        showToast.error('Your sell price cannot exceed the maximum allowed price per share');\n\n      }\n      else if (typeof sellPrice === 'number' && sellPrice > 0) {\n        const isConfirmed = window.confirm(`Are you sure you want to sell at $${sellPrice}?`);\n        if (isConfirmed) {\n          try {\n            await handleSellClick(sellPrice as number);\n            // Handle success (e.g., show a success message)\n          } catch (error) {\n            // Handle error (e.g., show an error message)\n            console.error(error);\n          }\n        };\n      }\n    };\n\n    /** Price Validation */\n    const handlePriceChange = (setter: React.Dispatch<React.SetStateAction<number | ''>>) => (event: React.ChangeEvent<HTMLInputElement>) => {\n      const value = event.target.value;\n      \n      //Numbers and Decimale only\n      if (value === '' || /^\\d+(\\.\\d{0,2})?$/.test(value)) {\n        setter(Number(value));\n      }\n    };\n\n    if (transactionType === 'Buy') {\n      return (\n        <div className=\"p-4 w-full sm:w-3/4 lg:w-1/4 mx-auto flex justify-center shadow-2xl mt-3 mb-3 rounded-xl\">\n          <form onSubmit={handleBuySubmit} className=\"flex flex-col items-center space-y-4\">\n            {/* Display balance if it is not null */}\n            {balance !== null && (\n              <>\n                <label htmlFor=\"balance\" className=\"text-md font-semibold\">Account Balance</label>\n                <p className=\"text-lg\">${Number(balance).toFixed(2)}</p>\n              </>\n            )}\n            <label htmlFor=\"buyPrice\" className=\"text-xl font-semibold\">Buy Price</label>\n            <div className=\"flex items-center space-x-2\">\n              <span className=\"text-xl\">$</span>\n              <input\n                type=\"number\"\n                value={buyPrice}\n                onChange={handlePriceChange(setBuyPrice)}\n                placeholder=\"Enter buy price\"\n                className=\"py-2 px-4 rounded-xl text-xl\"\n                step=\"0.01\"\n              />\n            </div>\n            <div className=\"text-md text-right w-full\">Transaction Fee: $0.10</div>\n            <div className=\"text-xl text-right w-full\">Buy Price: \n              <span className=\"text-2xl text-blue-600\"> ${(buyPrice ? buyPrice + 0.10 : 0).toFixed(2)}</span>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"bg-green-500 text-white py-4 px-10 rounded-xl text-2xl w-full\"\n            >\n              Buy\n            </button>\n          </form>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"p-4 w-full sm:w-3/4 lg:w-1/4 mx-auto flex justify-center shadow-2xl mt-3 mb-3 rounded-xl\">\n          <form onSubmit={handleSellSubmit} className=\"flex flex-col items-center space-y-4\">\n            <label htmlFor=\"sellPrice\" className=\"text-xl font-semibold\">Sell Price</label>\n            <div className=\"flex items-center space-x-2\">\n              <span className=\"text-xl\">$</span>\n              <input\n                type=\"number\"\n                value={sellPrice}\n                onChange={handlePriceChange(setSellPrice)}\n                placeholder=\"Enter sell price\"\n                className=\"py-2 px-4 rounded-xl text-xl\"\n                step=\"0.01\"\n              />\n            </div>\n            <div className=\"text-md text-left w-full\">Transaction Fee: $0.10</div>\n            <div className=\"text-xl text-left w-full\">Sale Revenue: \n              <span className=\"text-2xl text-blue-600\"> ${(sellPrice ? sellPrice - 0.10 : 0).toFixed(2)}</span>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"bg-red-500 text-white py-4 px-10 rounded-xl text-2xl w-full\"\n            >\n              Sell\n            </button>\n          </form>\n        </div>\n      );\n    }\n  };\n\n  /**\n   * Buy and Sell open orders table\n   * @returns JSX.Element\n   */\n  const orderTable = () => (\n    <div className=\"bg-blue-400\">\n      <div className=\"p-4 w-full sm:w-3/4 mx-auto\">\n        <div className=\"grid grid-cols-1 gap-4 lg:grid-cols-2\">\n          <div>\n            <h3 className=\"text-lg font-bold text-white mb-3 text-center lg:text-left\">Sell Orders</h3>\n            <table className=\"min-w-full bg-white rounded-lg\">\n              <thead>\n                <tr>\n                  <th className=\"py-2 px-4 border-b text-left\">Price</th>\n                  <th className=\"py-2 px-4 border-b text-left\">Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                {business.sellOrders.map((order, index) => (\n                  <tr key={index}>\n                    <td className=\"py-2 px-4 border-b\">${order.amount.toFixed(2)}</td>\n                    <td className=\"py-2 px-4 border-b\">{new Date(order.tradeDate).toLocaleDateString()}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          <div>\n            <h3 className=\"text-lg font-bold text-white mb-3 text-center lg:text-left\">Buy Orders</h3>\n            <table className=\"min-w-full bg-white rounded-lg\">\n              <thead>\n                <tr>\n                  <th className=\"py-2 px-4 border-b text-left\">Price</th>\n                  <th className=\"py-2 px-4 border-b text-left\">Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                {business.buyOrders.map((order, index) => (\n                  <tr key={index}>\n                    <td className=\"py-2 px-4 border-b\">${order.amount.toFixed(2)}</td>\n                    <td className=\"py-2 px-4 border-b\">{new Date(order.tradeDate).toLocaleDateString()}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <ToastContainer position=\"top-center\" />\n      <div className=\"bg-gray-200\">\n        { isMobile ? (\n            <div className=\"flex flex-col w-3/4 mx-auto p-4\">\n              <div className=\"flex items-start flex-col justify-between items-center mb-4\">\n                <img src={business.logo} alt={`${business.name} Logo`} className=\"w-16 h-16 object-contain mb-2 sm:mb-0\" />\n              </div>\n              <div className=\"flex flex-col sm:items-start\">\n                <h1 className=\"text-2xl font-bold sm:text-left\">{business.name}</h1>\n                <p className=\"sm:text-left\">{business.location}</p>\n              </div>\n              <div className=\"text-center mt-5\">\n                <p className=\"text-3xl font-semibold\">${business.maxPricePerShare.toFixed(2)}</p>\n                <p className={`text-lg ${business.growthPercentage >= 0 ? 'text-green-500 ' : 'text-red-500'}`}>\n                  {business.growthPercentage >= 0 ? '+' : ''}{business.growthPercentage.toFixed(2)}%\n                </p>\n              </div>\n            </div>\n        ) : (\n          <div className=\"flex flex-col w-3/4 mx-auto p-4\">\n            <div className=\"flex items-start justify-between items-center mb-4\">\n              <img src={business.logo} alt={`${business.name} Logo`} className=\"w-16 h-16 object-contain mb-2\" />\n            </div>\n            <div className=\"flex justify-between items-center w-full\">\n              <div className=\"flex flex-col\">\n                <h1 className=\"text-2xl font-bold\">{business.name}</h1>\n                <p>{business.location}</p>\n              </div>\n              <div className=\"text-right\">\n                <p className=\"text-3xl font-semibold\">${business.maxPricePerShare.toFixed(2)}</p>\n                <p className={`text-lg ${business.growthPercentage >= 0 ? 'text-green-500 ' : 'text-red-500'}`}>\n                  {business.growthPercentage >= 0 ? '+' : ''}{business.growthPercentage.toFixed(2)}%\n                </p>\n              </div>\n            </div>\n          </div> \n        ) \n        }\n      </div>\n      <ButtonPanel transactionType={transactionType} balance={balance ? Number(balance) : null}/>\n      {orderTable()}\n    </div>\n  );\n}","import { Form, useActionData, useLoaderData } from '@remix-run/react';\nimport { json, redirect } from '@remix-run/node';\nimport type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport {\n\tredirectWithToast,\n} from '#app/utils/toast.server.ts'\nimport { Storage } from '@google-cloud/storage';\n\nimport { sessionKey } from '#app/utils/auth.server.ts'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\n\n//API\n// @ts-ignore\nimport { transactionAPI } from '../../api/transactionAPI';\n\nconst storage = new Storage();\nconst bucketName = 'receipts_sk';\n\nexport const loader: LoaderFunction = async ({ request }) => {\n\n  const url = new URL(request.url);\n  const businessName = url.searchParams.get('businessName');\n  const logoUrl = url.searchParams.get('logoUrl');\n  const businessId = url.searchParams.get('businessId');\n\n  //See if we are logged in by checking the session\n  const authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\n  if (authSession) {\n    const session = authSession.get(sessionKey);\n\n    return { businessName, logoUrl, businessId, session };\n  } else {\n    return { businessName, logoUrl, businessId };\n  }\n\n};\n\n\n/**\n * Upload Image to Google CLoud Storage while sending information to the server\n * @param param\n * @returns \n */\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const file = formData.get('image') as Blob | null;\n  const id = formData.get('id') as string | null;\n  const businessName = formData.get('businessname') as string | null;\n  const session = formData.get('session') as string | null;\n\n  if (!file || typeof file === 'string' || !id) {\n    return json({ error: 'No file uploaded or missing ID' }, { status: 400 });\n  }\n\n  try {\n\n    //Get original file name\n    const originalFileName = (file as File).name;\n    \n    //Get today's date and time in unix format\n    const date = new Date();\n    const unixDate = date.getTime();\n\n    //Get file extension\n    const file_extension = (file as File).name.split('.').pop();\n\n    const fileName = `${originalFileName}_${unixDate}.${file_extension}`;\n    const fileUpload = storage.bucket(bucketName).file(fileName);\n\n    const buffer = Buffer.from(await file.arrayBuffer());\n\n    await new Promise((resolve, reject) => {\n      const blobStream = fileUpload.createWriteStream({\n        resumable: false,\n        gzip: true,\n      });\n\n      blobStream\n        .on('finish', resolve)\n        .on('error', reject)\n        .end(buffer);\n    });\n\n    const upload = await transactionAPI.uploadReceipt(id, `https://storage.googleapis.com/${bucketName}/${fileName}`, session);\n\n    return redirectWithToast(\n      `/stocks/${id}`,\n      {\n        title: 'Upload Successful',\n        description: `Thank you for uploading your receipt for ${businessName}.`,\n      },\n    )\n  } catch (error) {\n    console.error('Failed to upload image:', error);\n    return json({ error: 'Failed to upload image' }, { status: 500 });\n  }\n};\n\nexport default function Upload() {\n  const { businessName, logoUrl, businessId, session } = useLoaderData<{\n    businessName: string;\n    logoUrl: string;\n    businessId: string;\n    session: string | undefined;\n  }>();\n  const actionData = useActionData<{ error?: string }>();\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100 p-4 sm:p-8\">\n      <div className=\"bg-white p-4 sm:p-8 rounded shadow-md w-full max-w-md\">\n        <img src={logoUrl} alt={`${businessName} Logo`} className=\"w-24 h-24 object-contain mb-4 mx-auto\" />\n        <h1 className=\"text-xl sm:text-2xl font-bold mb-4 text-center\">Upload Receipt for {businessName}</h1>\n        <Form method=\"post\" encType=\"multipart/form-data\" className=\"space-y-4\">\n          <input type=\"hidden\" name=\"id\" value={businessId} />\n          <input type=\"hidden\" name=\"businessname\" value={businessName} />\n          <input type=\"hidden\" name=\"session\" value={session} />\n          <div className=\"flex flex-col items-center\">\n            <label htmlFor=\"image\" className=\"block text-sm font-medium text-gray-700 text-center sm:text-left\">\n              Choose an image or pdf of the receipt\n            </label>\n            <input\n              type=\"file\"\n              name=\"image\"\n              id=\"image\"\n              className=\"mt-3 block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              required\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"w-full bg-blue-500 text-white py-2 px-4 rounded-xl hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\n          >\n            Upload\n          </button>\n        </Form>\n        {actionData?.error && (\n          <p className=\"mt-4 text-red-500 text-sm text-center\">{actionData.error}</p>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { Storage } from '@google-cloud/storage';\nimport type { LoaderFunction } from '@remix-run/node';\nimport path from 'path';\n\nimport { sessionKey } from '#app/utils/auth.server.ts'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { redirect } from '@remix-run/node';\n\n//API\n// @ts-ignore\nimport { transactionAPI } from '../../api/transactionAPI';\n// @ts-ignore\nimport { userAPI } from '../../api/userAPI';\n\nconst storage = new Storage();\nconst bucketName = 'receipts_sk';\n\n//Reciept Interface\ninterface Receipt {\n    userId: string;\n    _id: string;\n    businessId: string;\n    receiptUrl: string;\n    userName: string;\n    businessName: string;\n    signedUrl: string;\n    createdAt: Date;\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n\n    //Confirmed we are logged in as admin\n    const authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\n    const session = authSession.get(sessionKey);\n\n    if (session) {\n\n        //Get User\n        const user = await userAPI.checklogintoken(session);\n\n        if (user && user.role === \"admin\") {\n    \n            try {\n\n                const receipts = await transactionAPI.getReceipts();\n\n                const signedReceipts = await Promise.all(\n                    receipts.receipts.map(async (receipt: Receipt) => {\n                        const fileName = path.basename(receipt.receiptUrl);\n                        const file = storage.bucket(bucketName).file(fileName);\n                        const [url] = await file.getSignedUrl({\n                            action: 'read',\n                            expires: Date.now() + 1000 * 60 * 60, // 1 hour\n                        });\n                        console.log(url);\n                        return {\n                            ...receipt,\n                            signedUrl: url,\n                        };\n                    })\n                );\n\n                return json({ signedReceipts });\n            } catch (error) {\n                console.error('Error fetching files from Google Cloud Storage:', error);\n                return json({ error: 'Failed to fetch files' }, { status: 500 });\n            }\n        } else {\n            return redirect('/');\n        }\n    } else {\n        return redirect('/');\n    }\n};\n\nexport default function Receipts() {\n  const { signedReceipts } = useLoaderData<{ signedReceipts: Receipt[] }>();  \n  \n  const [selectedReceipt, setSelectedReceipt] = useState<{ _id: string; signedUrl: string; amount: string } | null>(null);\n\n  const handleOpenModal = (receipt: { _id: string; signedUrl: string }) => {\n    setSelectedReceipt({ _id: receipt._id, signedUrl: receipt.signedUrl, amount: '' });\n  };\n\n  const handleCloseModal = () => {\n    setSelectedReceipt(null);\n  };\n\n  const handleAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (selectedReceipt) {\n      setSelectedReceipt({ ...selectedReceipt, amount: event.target.value });\n    }\n  };\n\n  const handleSave = async () => {\n    // Handle save action here\n    console.log('Saved amount:', selectedReceipt?.amount);\n    console.log('Receipt ID:', selectedReceipt?._id);\n\n    // Server call to deal with receipt\n    await transactionAPI.processReceipt(selectedReceipt?._id, selectedReceipt?.amount);\n\n    // Close modal\n    handleCloseModal();\n\n    //Reload the page\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"container mx-auto p-4 sm:p-6\">\n        <h1 className=\"text-2xl sm:text-3xl font-bold mb-4 text-center sm:text-left\">Receipts</h1>\n        {signedReceipts && signedReceipts.length > 0 ? (\n            <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full bg-white\">\n                <thead>\n                <tr>\n                    <th className=\"py-2 px-4 border-b border-gray-200\">Business Name</th>\n                    <th className=\"py-2 px-4 border-b border-gray-200\">User Name</th>\n                    <th className=\"py-2 px-4 border-b border-gray-200\">Receipt URL</th>\n                </tr>\n                </thead>\n                <tbody>\n                {signedReceipts.map(receipt => (\n                    <tr key={receipt._id}>\n                    <td className=\"py-2 px-4 border-b border-gray-200 text-center\">{receipt.businessName}</td>\n                    <td className=\"py-2 px-4 border-b border-gray-200 text-center\">{receipt.userName || 'N/A'}</td>\n                    <td className=\"py-2 px-4 border-b border-gray-200 text-center\">\n                        <button onClick={() => handleOpenModal({ _id: receipt._id, signedUrl: receipt.signedUrl })} className=\"text-blue-500 hover:underline\">\n                        {receipt.receiptUrl}\n                        </button>\n                    </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n            </div>\n        ) : (\n            <p className=\"text-center\">No receipts found.</p>\n        )}\n\n        {selectedReceipt && (\n            <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 p-4\">\n            <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-md w-full\">\n                <img src={selectedReceipt.signedUrl} alt=\"Receipt\" className=\"mb-4 w-full h-auto\" />\n                <input\n                type=\"text\"\n                value={selectedReceipt.amount}\n                onChange={handleAmountChange}\n                placeholder=\"Enter amount\"\n                className=\"w-full p-2 border border-gray-300 rounded\"\n                />\n                <div className=\"flex justify-center gap-5 mt-5\">\n                <button onClick={handleCloseModal} className=\"bg-gray-500 text-white py-2 px-4 rounded hover:bg-gray-600\">\n                    Cancel\n                </button>\n                <button onClick={handleSave} className=\"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\">\n                    Save\n                </button>\n                </div>\n            </div>\n            </div>\n        )}\n    </div>\n  );\n}","import { invariantResponse } from '@epic-web/invariant'\nimport { json, LoaderFunction, type LoaderFunctionArgs } from '@remix-run/node'\nimport { Form, Link, useLoaderData, type MetaFunction } from '@remix-run/react'\nimport { GeneralErrorBoundary } from '#app/components/error-boundary.tsx'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { getUserImgSrc } from '#app/utils/misc.tsx'\nimport { useOptionalUser } from '#app/utils/user.ts'\nimport { sessionKey } from '#app/utils/auth.server.ts'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\n\nimport { redirect } from '@remix-run/node'\n\n//API Call\n// @ts-ignore\nimport { userAPI } from '../../api/userAPI';\n\n// Define the User type\ninterface User {\n\t_id: string;\n\tname: string;\n\tusername: string;\n\temail: string;\n\tbalance: number;\n\thistory: [{\n\t\ttype: string;\n\t\tprice: number;\n\t\tbusinessName: string;\n\t}];\n\tinvestments: [{\n\t\tisActive: boolean;\n\t}];\n\tcreatedAt: Date;\n}\n\nexport const loader: LoaderFunction = async ({ params, request }) => {\n\n\t//Get Token\n\t//See if we are logged in by checking the session\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n  \tconst session = authSession.get(sessionKey);\n\n\tif (session) {\n\t\t//Get User\n\t\tconst user = await userAPI.checklogintoken(session);\n\n\t\tif (user) {\n\t\t\treturn json({ user, userJoinedDisplay: new Date(user.createdAt).toLocaleDateString() })\n\t\t}\n\t\telse {\n\t\t\treturn redirect('/');\n\t\t}\n\t}\n\telse {\n\t\treturn redirect('/');\n\t}\n}\n\nexport default function ProfileRoute() {\n\t//const data = useLoaderData<typeof loader>()\n\t//const user = data.user\n\tconst { user, userJoinedDisplay }  = useLoaderData<{ user: User, userJoinedDisplay: Date}>();\n\n\tconst loggedInUser = useOptionalUser()\n\tconst isLoggedInUser = user._id === loggedInUser?._id\n\n\treturn (\n\t\t<div className=\"container mb-48 mt-36 flex flex-col items-center justify-center\">\n\t\t\t<Spacer size=\"4xs\" />\n\n\t\t\t<div className=\"container flex flex-col items-center rounded-3xl bg-muted p-12\">\n\n\t\t\t\t<Spacer size=\"sm\" />\n\n\t\t\t\t<div className=\"flex flex-col items-center\">\n\t\t\t\t\t<div className=\"flex flex-wrap items-center justify-center gap-4\">\n\t\t\t\t\t\t<h1 className=\"text-center text-h2\">{user.name}</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className=\"mt-2 text-center text-muted-foreground\">\n\t\t\t\t\t\tJoined: {userJoinedDisplay}\n\t\t\t\t\t</p>\n\t\t\t\t\t<div className=\"bg-white shadow-md rounded-lg p-6 w-full max-w-md mt-5\">\n\t\t\t\t\t\t<h2 className=\"text-2xl text-center font-bold mb-4\">User Statistics</h2>\n\t\t\t\t\t\t<div className=\"flex flex-row justify-between gap-4\">\n\t\t\t\t\t\t\t<div className=\"flex flex-col justify-between\">\n\t\t\t\t\t\t\t\t<span className=\"text-center text-lg\">{user.history.length}</span> \n\t\t\t\t\t\t\t\t<span className=\"text-sm\"> Trades Lifetime</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"flex flex-col justify-between\">\n\t\t\t\t\t\t\t\t<span className=\"text-center text-lg\">{user.investments.length}</span>\n\t\t\t\t\t\t\t\t<span className=\"text-sm\"> Investments Lifetime</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{isLoggedInUser ? (\n\t\t\t\t\t\t<Form action=\"/logout\" method=\"POST\" className=\"mt-3\">\n\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"link\" size=\"pill\">\n\t\t\t\t\t\t\t\t<Icon name=\"exit\" className=\"scale-125 max-md:scale-150\">\n\t\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t\t</Icon>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<div className=\"mt-10 flex gap-4\">\n\t\t\t\t\t\t\t<Button asChild>\n\t\t\t\t\t\t\t\t<Link to=\"/dashboard\" prefetch=\"intent\">\n\t\t\t\t\t\t\t\t\tDashboard\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Button>\t\n\t\t\t\t\t\t\t<Button asChild>\n\t\t\t\t\t\t\t\t<Link \n\t\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\t\tpathname: \"/settings/profile\",\n\t\t\t\t\t\t\t\t\t\tsearch: `?id=${user._id}&username=${user.username}&name=${user.name}&email=${user.email}`,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tprefetch=\"intent\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tEdit profile\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport function ErrorBoundary() {\n\treturn (\n\t\t<GeneralErrorBoundary\n\t\t\tstatusHandlers={{\n\t\t\t\t404: ({ params }) => (\n\t\t\t\t\t<p>No user with the username \"{params.username}\" exists</p>\n\t\t\t\t),\n\t\t\t}}\n\t\t/>\n\t)\n}\n"],"names":["key","time","_a","headers","href","toast","showToast","Sonner","colorSchemeHint","timeZoneHint","action","mode","cuid","init","redirect","cookie","options","user","meta","loader","ErrorBoundary","remember","handleVerification","SignupFormSchema","session","handle","TwoFactorRoute","VerifySchema","handleResetPasswordVerification","handleOnboardingVerification","handleChangeEmailVerification","handleLoginTwoFactorVerification","prisma","resend","address","preview","item","ChartJS","Tooltip","value","TabContent","applyPagination","EditUserProfile","BusinessDetails","entry","ownerPermissions","defaultCoordinates","useNavigate","amount","transactionType","balance","storage","bucketName"],"mappings":"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"}
{"version":3,"file":"index-CX1BUvFA.js","sources":["../../../app/routes/upload+/index.tsx"],"sourcesContent":["import { Form, useActionData, useLoaderData } from '@remix-run/react';\nimport { json, redirect } from '@remix-run/node';\nimport type { ActionFunction, LoaderFunction } from '@remix-run/node';\nimport {\n\tredirectWithToast,\n} from '#app/utils/toast.server.ts'\nimport { Storage } from '@google-cloud/storage';\n\nimport { sessionKey } from '#app/utils/auth.server.ts'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\n\n//API\n// @ts-ignore\nimport { transactionAPI } from '../../api/transactionAPI';\n\nconst storage = new Storage();\nconst bucketName = 'receipts_sk';\n\nexport const loader: LoaderFunction = async ({ request }) => {\n\n  const url = new URL(request.url);\n  const businessName = url.searchParams.get('businessName');\n  const logoUrl = url.searchParams.get('logoUrl');\n  const businessId = url.searchParams.get('businessId');\n\n  //See if we are logged in by checking the session\n  const authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\n  if (authSession) {\n    const session = authSession.get(sessionKey);\n\n    return { businessName, logoUrl, businessId, session };\n  } else {\n    return { businessName, logoUrl, businessId };\n  }\n\n};\n\n\n/**\n * Upload Image to Google CLoud Storage while sending information to the server\n * @param param\n * @returns \n */\nexport const action: ActionFunction = async ({ request }) => {\n  const formData = await request.formData();\n  const file = formData.get('image') as Blob | null;\n  const id = formData.get('id') as string | null;\n  const businessName = formData.get('businessname') as string | null;\n  const session = formData.get('session') as string | null;\n\n  if (!file || typeof file === 'string' || !id) {\n    return json({ error: 'No file uploaded or missing ID' }, { status: 400 });\n  }\n\n  try {\n\n    //Get original file name\n    const originalFileName = (file as File).name;\n    \n    //Get today's date and time in unix format\n    const date = new Date();\n    const unixDate = date.getTime();\n\n    //Get file extension\n    const file_extension = (file as File).name.split('.').pop();\n\n    const fileName = `${originalFileName}_${unixDate}.${file_extension}`;\n    const fileUpload = storage.bucket(bucketName).file(fileName);\n\n    const buffer = Buffer.from(await file.arrayBuffer());\n\n    await new Promise((resolve, reject) => {\n      const blobStream = fileUpload.createWriteStream({\n        resumable: false,\n        gzip: true,\n      });\n\n      blobStream\n        .on('finish', resolve)\n        .on('error', reject)\n        .end(buffer);\n    });\n\n    const upload = await transactionAPI.uploadReceipt(id, `https://storage.googleapis.com/${bucketName}/${fileName}`, session);\n\n    return redirectWithToast(\n      `/stocks/${id}`,\n      {\n        title: 'Upload Successful',\n        description: `Thank you for uploading your receipt for ${businessName}.`,\n      },\n    )\n  } catch (error) {\n    console.error('Failed to upload image:', error);\n    return json({ error: 'Failed to upload image' }, { status: 500 });\n  }\n};\n\nexport default function Upload() {\n  const { businessName, logoUrl, businessId, session } = useLoaderData<{\n    businessName: string;\n    logoUrl: string;\n    businessId: string;\n    session: string | undefined;\n  }>();\n  const actionData = useActionData<{ error?: string }>();\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100 p-4 sm:p-8\">\n      <div className=\"bg-white p-4 sm:p-8 rounded shadow-md w-full max-w-md\">\n        <img src={logoUrl} alt={`${businessName} Logo`} className=\"w-24 h-24 object-contain mb-4 mx-auto\" />\n        <h1 className=\"text-xl sm:text-2xl font-bold mb-4 text-center\">Upload Receipt for {businessName}</h1>\n        <Form method=\"post\" encType=\"multipart/form-data\" className=\"space-y-4\">\n          <input type=\"hidden\" name=\"id\" value={businessId} />\n          <input type=\"hidden\" name=\"businessname\" value={businessName} />\n          <input type=\"hidden\" name=\"session\" value={session} />\n          <div className=\"flex flex-col items-center\">\n            <label htmlFor=\"image\" className=\"block text-sm font-medium text-gray-700 text-center sm:text-left\">\n              Choose an image or pdf of the receipt\n            </label>\n            <input\n              type=\"file\"\n              name=\"image\"\n              id=\"image\"\n              className=\"mt-3 block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              required\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"w-full bg-blue-500 text-white py-2 px-4 rounded-xl hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\n          >\n            Upload\n          </button>\n        </Form>\n        {actionData?.error && (\n          <p className=\"mt-4 text-red-500 text-sm text-center\">{actionData.error}</p>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":["Upload","businessName","logoUrl","businessId","session","useLoaderData","actionData","useActionData","className","children","jsxs","jsx","src","alt","Form","method","encType","type","name","value","htmlFor","id","required","error"],"mappings":"iKAqGA,SAAwBA,GAAS,CAC/B,KAAM,CAAEC,aAAAA,EAAcC,QAAAA,EAASC,WAAAA,EAAYC,QAAAA,GAAYC,EAKpD,EACGC,EAAaC,IAEnB,aACG,MAAI,CAAAC,UAAU,uEACbC,SAACC,EAAA,KAAA,MAAA,CAAIF,UAAU,wDACbC,SAAA,CAACE,EAAA,IAAA,MAAA,CAAIC,IAAKV,EAASW,IAAK,GAAGZ,CAAY,QAASO,UAAU,uCAAwC,CAAA,EAClGE,EAAA,KAAC,KAAG,CAAAF,UAAU,iDAAiDC,SAAA,CAAA,sBAAoBR,CAAA,CAAa,CAAA,SAC/Fa,EAAK,CAAAC,OAAO,OAAOC,QAAQ,sBAAsBR,UAAU,YAC1DC,SAAA,CAAAE,EAAA,IAAC,SAAMM,KAAK,SAASC,KAAK,KAAKC,MAAOhB,CAAY,CAAA,QACjD,QAAM,CAAAc,KAAK,SAASC,KAAK,eAAeC,MAAOlB,CAAc,CAAA,QAC7D,QAAM,CAAAgB,KAAK,SAASC,KAAK,UAAUC,MAAOf,CAAS,CAAA,EACpDM,EAAA,KAAC,MAAI,CAAAF,UAAU,6BACbC,SAAA,CAAAE,EAAA,IAAC,QAAM,CAAAS,QAAQ,QAAQZ,UAAU,mEAAmEC,SAEpG,uCAAA,CAAA,EACAE,EAAA,IAAC,QAAA,CACCM,KAAK,OACLC,KAAK,QACLG,GAAG,QACHb,UAAU,qKACVc,SAAQ,EAAA,CACV,CAAA,CACF,CAAA,EACAX,EAAA,IAAC,SAAA,CACCM,KAAK,SACLT,UAAU,iJACXC,SAAA,QAAA,CAED,CAAA,CACF,CAAA,GACCH,GAAAA,YAAAA,EAAYiB,QACXZ,EAAAA,IAAC,KAAEH,UAAU,wCAAyCC,WAAWc,KAAM,CAAA,CAAA,EAE3E,CACF,CAAA,CAEJ"}
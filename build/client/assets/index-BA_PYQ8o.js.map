{"version":3,"file":"index-BA_PYQ8o.js","sources":["../../../app/routes/transact+/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { LoaderFunction, json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { sessionKey } from '#app/utils/auth.server.ts'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { useNavigate } from 'react-router-dom';\n\n//Import API\n// @ts-ignore\nimport { generalAPI } from \"../../api/generalAPI.js\";\n// @ts-ignore\nimport { transactionAPI } from \"../../api/transactionAPI.js\"; \n\n//Toast\nimport { ToastContainer, toast as showToast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { isMobile } from 'react-device-detect';\n\n// Define the Business type\ninterface Business {\n  id: string;\n  name: string;\n  logo: string;\n  location: string;\n  coordinates: [number, number];\n  maxPricePerShare: number;\n  growthPercentage: number;\n  valuation: [\n    {\n      valuation: number;\n      maxPricePerShare: number;\n      valDate: string;\n    }\n  ];\n  buyOrders: [\n    {\n      amount: number;\n      tradeDate: string;\n    }\n  ];\n  sellOrders: [\n    {\n      amount: number;\n      tradeDate: string;\n    }\n  ];\n}\n\ninterface ButtonPanelProps {\n  transactionType: string;\n  balance: number | null;\n}\n\n// Fetch business details\nexport const loader: LoaderFunction = async ({ request }) => {\n  \n  const url = new URL(request.url);\n  const businessId = url.searchParams.get('businessId');\n  const transactionType = url.searchParams.get('type');\n  const balance = url.searchParams.get('balance');\n  const message = url.searchParams.get('message');\n\n  // Fetch data here\n\tconst business = await generalAPI.getPublicCompany(businessId);\n\n  //See if we are logged in by checking the session\n  const authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n  const session = authSession.get(sessionKey);\n\n  //Set Session if we are logged in\n  if (session) {\n    if (message === 'deposit') {\n      return json({business, transactionType, balance, token: session, message: 'Deposit Successful'});\n    }\n    else {\n      return json({business, transactionType, balance, token: session});\n    }\n  }\n  else {\n    return json({business, transactionType});\n  }\n};\n\nexport default function BusinessDetails() {\n\n  const { business, transactionType, balance, token, message }  = useLoaderData<{ business: Business, transactionType: string, balance: string, token: string, message: string }>();\n\n  // State to manage user login status\n  const [isLoggedIn, setIsLoggedIn] = useState(token ? true : false);\n\n  // Hook to navigate programmatically\n  const navigate = useNavigate();\n\n  //Raise Toast if message\n  if (message) {\n    showToast.success('Deposit Successful');\n  }\n\n  // Handler for Buy button click\n  const handleBuyClick = async (buyPrice: number) => {\n\n    if (isLoggedIn) {\n      try {\n        // Perform buy action\n        const response = await transactionAPI.buyStock(business.id, buyPrice, token)\n\n        if (response && response.status === 200) {\n          showToast.success('Your buy order has been placed or completed successfully');\n\n          // Redirect to /dashboard\n          navigate('/dashboard');\n        }\n      } catch (error) {\n\n          const buyLink = new URLSearchParams({\n              type: 'Buy',\n              businessId: business.id,\n              balance: balance,\n              message: 'deposit'\n          }).toString();\n\n          const stripeFee = Math.ceil((buyPrice * 0.029 + 0.30) * 100) / 100;\n          const adminFee = 0.10;\n          const totalFee = Math.ceil((buyPrice + stripeFee + adminFee) * 100) / 100;\n\n          const redirectUrlParms = new URLSearchParams({\n              amount: totalFee.toFixed(2).toString(),\n              businessId: business.id,\n              balance: balance,\n              token: token,\n              redirect: `/transact?${buyLink}`,\n          }).toString();\n\n          //Not enough funds\n          const redirectUrl = '/stripe?' + redirectUrlParms;\n\n          // Redirect to Stripe Payment\n          navigate(redirectUrl);\n          \n          throw error;\n          \n      }\n    } else {\n\n      // Redirect to login or show login prompt\n      showToast.success('You must be logged in to buy stock');\n\n      // Redirect to /dashboard\n      navigate('/login');\n    }\n  };\n\n  // Handler for Sell button click\n  const handleSellClick = async (sellPrice: number) => {\n\n    if (isLoggedIn) {\n\n      // Perform buy action\n      const response = await transactionAPI.sellStock(business.id, sellPrice, token)\n\n      if (response.status === 200) {\n      \n        showToast.success('Your sell order has been placed or completed successfully');\n\n        // Redirect to /dashboard\n        navigate('/dashboard');\n      }\n    } else {\n\n      // Redirect to login or show login prompt\n      showToast.success('You must be logged in to sell your stock');\n\n      // Redirect to /dashboard\n      navigate('/login');\n    }\n  };\n  \n  /**\n   * Button panel for buying and selling stock\n   */\n  const ButtonPanel: React.FC<ButtonPanelProps> = ({ transactionType, balance }) => {\n    const [buyPrice, setBuyPrice] = useState<number | \"\">(0);\n    const [sellPrice, setSellPrice] = useState<number | \"\">(0);\n    \n    const handleBuySubmit = async (event: React.FormEvent) => {\n      \n      event.preventDefault();\n\n      //Check to see if buyPrice does not exceed Max Price Per Share\n      if (typeof buyPrice === 'number' && buyPrice > business.maxPricePerShare) {\n        \n        //Raise Toast\n        showToast.error('Your buy price cannot exceed the maximum allowed price per share');\n      }\n      else if (typeof buyPrice === 'number' && buyPrice > 0) {\n\n        const isConfirmed = window.confirm(`Are you sure you want to buy at $${sellPrice}?`);\n        if (isConfirmed) {\n          try {\n            await handleBuyClick(buyPrice as number);\n            // Handle success (e.g., show a success message)\n          } catch (error) {\n            // Handle error (e.g., show an error message)\n            console.error(error);\n          }\n        };\n      }\n    };\n  \n    const handleSellSubmit = async (event: React.FormEvent) => {\n\n      event.preventDefault();\n\n      //Check to see if buyPrice does not exceed Max Price Per Share\n      if (typeof sellPrice === 'number' && sellPrice > business.maxPricePerShare) {\n\n        //Raise Toast\n        showToast.error('Your sell price cannot exceed the maximum allowed price per share');\n\n      }\n      else if (typeof sellPrice === 'number' && sellPrice > 0) {\n        const isConfirmed = window.confirm(`Are you sure you want to sell at $${sellPrice}?`);\n        if (isConfirmed) {\n          try {\n            await handleSellClick(sellPrice as number);\n            // Handle success (e.g., show a success message)\n          } catch (error) {\n            // Handle error (e.g., show an error message)\n            console.error(error);\n          }\n        };\n      }\n    };\n\n    /** Price Validation */\n    const handlePriceChange = (setter: React.Dispatch<React.SetStateAction<number | ''>>) => (event: React.ChangeEvent<HTMLInputElement>) => {\n      const value = event.target.value;\n      \n      //Numbers and Decimale only\n      if (value === '' || /^\\d+(\\.\\d{0,2})?$/.test(value)) {\n        setter(Number(value));\n      }\n    };\n\n    if (transactionType === 'Buy') {\n      return (\n        <div className=\"p-4 w-full sm:w-3/4 lg:w-1/4 mx-auto flex justify-center shadow-2xl mt-3 mb-3 rounded-xl\">\n          <form onSubmit={handleBuySubmit} className=\"flex flex-col items-center space-y-4\">\n            {/* Display balance if it is not null */}\n            {balance !== null && (\n              <>\n                <label htmlFor=\"balance\" className=\"text-md font-semibold\">Account Balance</label>\n                <p className=\"text-lg\">${Number(balance).toFixed(2)}</p>\n              </>\n            )}\n            <label htmlFor=\"buyPrice\" className=\"text-xl font-semibold\">Buy Price</label>\n            <div className=\"flex items-center space-x-2\">\n              <span className=\"text-xl\">$</span>\n              <input\n                type=\"number\"\n                value={buyPrice}\n                onChange={handlePriceChange(setBuyPrice)}\n                placeholder=\"Enter buy price\"\n                className=\"py-2 px-4 rounded-xl text-xl\"\n                step=\"0.01\"\n              />\n            </div>\n            <div className=\"text-md text-right w-full\">Transaction Fee: $0.10</div>\n            <div className=\"text-xl text-right w-full\">Buy Price: \n              <span className=\"text-2xl text-blue-600\"> ${(buyPrice ? buyPrice + 0.10 : 0).toFixed(2)}</span>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"bg-green-500 text-white py-4 px-10 rounded-xl text-2xl w-full\"\n            >\n              Buy\n            </button>\n          </form>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"p-4 w-full sm:w-3/4 lg:w-1/4 mx-auto flex justify-center shadow-2xl mt-3 mb-3 rounded-xl\">\n          <form onSubmit={handleSellSubmit} className=\"flex flex-col items-center space-y-4\">\n            <label htmlFor=\"sellPrice\" className=\"text-xl font-semibold\">Sell Price</label>\n            <div className=\"flex items-center space-x-2\">\n              <span className=\"text-xl\">$</span>\n              <input\n                type=\"number\"\n                value={sellPrice}\n                onChange={handlePriceChange(setSellPrice)}\n                placeholder=\"Enter sell price\"\n                className=\"py-2 px-4 rounded-xl text-xl\"\n                step=\"0.01\"\n              />\n            </div>\n            <div className=\"text-md text-left w-full\">Transaction Fee: $0.10</div>\n            <div className=\"text-xl text-left w-full\">Sale Revenue: \n              <span className=\"text-2xl text-blue-600\"> ${(sellPrice ? sellPrice - 0.10 : 0).toFixed(2)}</span>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"bg-red-500 text-white py-4 px-10 rounded-xl text-2xl w-full\"\n            >\n              Sell\n            </button>\n          </form>\n        </div>\n      );\n    }\n  };\n\n  /**\n   * Buy and Sell open orders table\n   * @returns JSX.Element\n   */\n  const orderTable = () => (\n    <div className=\"bg-blue-400\">\n      <div className=\"p-4 w-full sm:w-3/4 mx-auto\">\n        <div className=\"grid grid-cols-1 gap-4 lg:grid-cols-2\">\n          <div>\n            <h3 className=\"text-lg font-bold text-white mb-3 text-center lg:text-left\">Sell Orders</h3>\n            <table className=\"min-w-full bg-white rounded-lg\">\n              <thead>\n                <tr>\n                  <th className=\"py-2 px-4 border-b text-left\">Price</th>\n                  <th className=\"py-2 px-4 border-b text-left\">Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                {business.sellOrders.map((order, index) => (\n                  <tr key={index}>\n                    <td className=\"py-2 px-4 border-b\">${order.amount.toFixed(2)}</td>\n                    <td className=\"py-2 px-4 border-b\">{new Date(order.tradeDate).toLocaleDateString()}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          <div>\n            <h3 className=\"text-lg font-bold text-white mb-3 text-center lg:text-left\">Buy Orders</h3>\n            <table className=\"min-w-full bg-white rounded-lg\">\n              <thead>\n                <tr>\n                  <th className=\"py-2 px-4 border-b text-left\">Price</th>\n                  <th className=\"py-2 px-4 border-b text-left\">Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                {business.buyOrders.map((order, index) => (\n                  <tr key={index}>\n                    <td className=\"py-2 px-4 border-b\">${order.amount.toFixed(2)}</td>\n                    <td className=\"py-2 px-4 border-b\">{new Date(order.tradeDate).toLocaleDateString()}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      <ToastContainer position=\"top-center\" />\n      <div className=\"bg-gray-200\">\n        { isMobile ? (\n            <div className=\"flex flex-col w-3/4 mx-auto p-4\">\n              <div className=\"flex items-start flex-col justify-between items-center mb-4\">\n                <img src={business.logo} alt={`${business.name} Logo`} className=\"w-16 h-16 object-contain mb-2 sm:mb-0\" />\n              </div>\n              <div className=\"flex flex-col sm:items-start\">\n                <h1 className=\"text-2xl font-bold sm:text-left\">{business.name}</h1>\n                <p className=\"sm:text-left\">{business.location}</p>\n              </div>\n              <div className=\"text-center mt-5\">\n                <p className=\"text-3xl font-semibold\">${business.maxPricePerShare.toFixed(2)}</p>\n                <p className={`text-lg ${business.growthPercentage >= 0 ? 'text-green-500 ' : 'text-red-500'}`}>\n                  {business.growthPercentage >= 0 ? '+' : ''}{business.growthPercentage.toFixed(2)}%\n                </p>\n              </div>\n            </div>\n        ) : (\n          <div className=\"flex flex-col w-3/4 mx-auto p-4\">\n            <div className=\"flex items-start justify-between items-center mb-4\">\n              <img src={business.logo} alt={`${business.name} Logo`} className=\"w-16 h-16 object-contain mb-2\" />\n            </div>\n            <div className=\"flex justify-between items-center w-full\">\n              <div className=\"flex flex-col\">\n                <h1 className=\"text-2xl font-bold\">{business.name}</h1>\n                <p>{business.location}</p>\n              </div>\n              <div className=\"text-right\">\n                <p className=\"text-3xl font-semibold\">${business.maxPricePerShare.toFixed(2)}</p>\n                <p className={`text-lg ${business.growthPercentage >= 0 ? 'text-green-500 ' : 'text-red-500'}`}>\n                  {business.growthPercentage >= 0 ? '+' : ''}{business.growthPercentage.toFixed(2)}%\n                </p>\n              </div>\n            </div>\n          </div> \n        ) \n        }\n      </div>\n      <ButtonPanel transactionType={transactionType} balance={balance ? Number(balance) : null}/>\n      {orderTable()}\n    </div>\n  );\n}"],"names":["BusinessDetails","business","transactionType","balance","token","message","useLoaderData","isLoggedIn","setIsLoggedIn","useState","navigate","useNavigate","showToast","success","handleBuyClick","buyPrice","response","transactionAPI","buyStock","id","status","error","buyLink","URLSearchParams","type","businessId","toString","stripeFee","Math","ceil","totalFee","redirectUrl","amount","toFixed","redirect","handleSellClick","sellPrice","sellStock","ButtonPanel","setBuyPrice","setSellPrice","handleBuySubmit","event","preventDefault","maxPricePerShare","window","confirm","console","handleSellSubmit","handlePriceChange","setter","value","target","test","Number","jsx","className","children","onSubmit","jsxs","Fragment","htmlFor","onChange","placeholder","step","orderTable","sellOrders","map","order","index","Date","tradeDate","toLocaleDateString","buyOrders","ToastContainer","position","src","logo","alt","name","location","growthPercentage"],"mappings":"4WAuFA,SAAwBA,GAAkB,CAExC,KAAM,CAAEC,SAAAA,EAAUC,gBAAAA,EAAiBC,QAAAA,EAASC,MAAAA,EAAOC,QAAAA,GAAaC,EAAgH,EAG1K,CAACC,EAAYC,CAAa,EAAIC,EAAS,SAAAL,EAAAA,CAAoB,EAG3DM,EAAWC,IAGbN,GACFO,EAAUC,QAAQ,oBAAoB,EAIlC,MAAAC,EAAiB,MAAOC,GAAqB,CAEjD,GAAIR,EACE,GAAA,CAEF,MAAMS,EAAW,MAAMC,EAAeC,SAASjB,EAASkB,GAAIJ,EAAUX,CAAK,EAEvEY,GAAYA,EAASI,SAAW,MAClCR,EAAUC,QAAQ,0DAA0D,EAG5EH,EAAS,YAAY,SAEhBW,EAAO,CAEN,MAAAC,EAAU,IAAIC,gBAAgB,CAChCC,KAAM,MACNC,WAAYxB,EAASkB,GACrBhB,QAAAA,EACAE,QAAS,SACb,CAAC,EAAEqB,SAAS,EAENC,EAAYC,KAAKC,MAAMd,EAAW,KAAQ,IAAQ,GAAG,EAAI,IAEzDe,EAAWF,KAAKC,MAAMd,EAAWY,EADtB,IAC8C,GAAG,EAAI,IAWhEI,EAAc,WATK,IAAIR,gBAAgB,CACzCS,OAAQF,EAASG,QAAQ,CAAC,EAAEP,SAAS,EACrCD,WAAYxB,EAASkB,GACrBhB,QAAAA,EACAC,MAAAA,EACA8B,SAAU,aAAaZ,CAAO,EAClC,CAAC,EAAEI,SAAS,EAMZhB,MAAAA,EAASqB,CAAW,EAEdV,CAEV,MAIAT,EAAUC,QAAQ,oCAAoC,EAGtDH,EAAS,QAAQ,GAKfyB,EAAkB,MAAOC,GAAsB,CAE/C7B,GAGe,MAAMU,EAAeoB,UAAUpC,EAASkB,GAAIiB,EAAWhC,CAAK,GAEhEgB,SAAW,MAEtBR,EAAUC,QAAQ,2DAA2D,EAG7EH,EAAS,YAAY,IAKvBE,EAAUC,QAAQ,0CAA0C,EAG5DH,EAAS,QAAQ,IAOf4B,EAA0CA,CAAC,CAAEpC,gBAAAA,EAAiBC,QAAAA,CAAQ,IAAM,CAChF,KAAM,CAACY,EAAUwB,CAAW,EAAI9B,WAAsB,CAAC,EACjD,CAAC2B,EAAWI,CAAY,EAAI/B,WAAsB,CAAC,EAEnDgC,EAAkB,MAAOC,GAA2B,CAKxD,GAHAA,EAAMC,eAAe,EAGjB,OAAO5B,GAAa,UAAYA,EAAWd,EAAS2C,iBAGtDhC,EAAUS,MAAM,kEAAkE,UAE3E,OAAON,GAAa,UAAYA,EAAW,GAE9B8B,OAAOC,QAAQ,oCAAoCV,CAAS,GAAG,EAE7E,GAAA,CACF,MAAMtB,EAAeC,CAAkB,QAEhCM,EAAO,CAEd0B,QAAQ1B,MAAMA,CAAK,CACrB,GAKA2B,EAAmB,MAAON,GAA2B,CAKzD,GAHAA,EAAMC,eAAe,EAGjB,OAAOP,GAAc,UAAYA,EAAYnC,EAAS2C,iBAGxDhC,EAAUS,MAAM,mEAAmE,UAG5E,OAAOe,GAAc,UAAYA,EAAY,GAChCS,OAAOC,QAAQ,qCAAqCV,CAAS,GAAG,EAE9E,GAAA,CACF,MAAMD,EAAgBC,CAAmB,QAElCf,EAAO,CAEd0B,QAAQ1B,MAAMA,CAAK,CACrB,GAMA4B,EAAqBC,GAA+DR,GAA+C,CACjI,MAAAS,EAAQT,EAAMU,OAAOD,OAGvBA,IAAU,IAAM,oBAAoBE,KAAKF,CAAK,IACzCD,EAAAI,OAAOH,CAAK,CAAC,GAIxB,OAAIjD,IAAoB,MAEpBqD,EAAAA,IAAC,OAAIC,UAAU,2FACbC,gBAAC,OAAK,CAAAC,SAAUjB,EAAiBe,UAAU,uCAExCC,SAAA,CAAAtD,IAAY,MAETwD,EAAAA,KAAAC,EAAAA,SAAA,CAAAH,SAAA,CAAAF,EAAA,IAAC,QAAM,CAAAM,QAAQ,UAAUL,UAAU,wBAAwBC,SAAe,iBAAA,CAAA,EAC1EE,EAAA,KAAC,IAAE,CAAAH,UAAU,UAAUC,SAAA,CAAA,IAAEH,OAAOnD,CAAO,EAAE8B,QAAQ,CAAC,CAAA,CAAE,CAAA,CAAA,CACtD,CAAA,QAED,QAAM,CAAA4B,QAAQ,WAAWL,UAAU,wBAAwBC,SAAS,WAAA,CAAA,EACrEE,EAAA,KAAC,MAAI,CAAAH,UAAU,8BACbC,SAAA,CAACF,EAAA,IAAA,OAAA,CAAKC,UAAU,UAAUC,SAAC,GAAA,CAAA,EAC3BF,EAAA,IAAC,QAAA,CACC/B,KAAK,SACL2B,MAAOpC,EACP+C,SAAUb,EAAkBV,CAAW,EACvCwB,YAAY,kBACZP,UAAU,+BACVQ,KAAK,MAAA,CACP,CAAA,CACF,CAAA,EACCT,EAAA,IAAA,MAAA,CAAIC,UAAU,4BAA4BC,SAAsB,wBAAA,CAAA,EACjEE,EAAA,KAAC,MAAI,CAAAH,UAAU,4BAA4BC,SAAA,CAAA,aACzCE,EAAA,KAAC,OAAK,CAAAH,UAAU,yBAAyBC,SAAA,CAAA,MAAI1C,EAAWA,EAAW,GAAO,GAAGkB,QAAQ,CAAC,CAAA,CAAE,CAAA,CAAA,CAC1F,CAAA,EACAsB,EAAA,IAAC,SAAA,CACC/B,KAAK,SACLgC,UAAU,gEACXC,SAAA,KAAA,CAED,CAAA,EACF,CACF,CAAA,EAIAF,EAAAA,IAAC,OAAIC,UAAU,2FACbC,gBAAC,OAAK,CAAAC,SAAUV,EAAkBQ,UAAU,uCAC1CC,SAAA,CAAAF,EAAA,IAAC,QAAM,CAAAM,QAAQ,YAAYL,UAAU,wBAAwBC,SAAU,YAAA,CAAA,EACvEE,EAAA,KAAC,MAAI,CAAAH,UAAU,8BACbC,SAAA,CAACF,EAAA,IAAA,OAAA,CAAKC,UAAU,UAAUC,SAAC,GAAA,CAAA,EAC3BF,EAAA,IAAC,QAAA,CACC/B,KAAK,SACL2B,MAAOf,EACP0B,SAAUb,EAAkBT,CAAY,EACxCuB,YAAY,mBACZP,UAAU,+BACVQ,KAAK,MAAA,CACP,CAAA,CACF,CAAA,EACCT,EAAA,IAAA,MAAA,CAAIC,UAAU,2BAA2BC,SAAsB,wBAAA,CAAA,EAChEE,EAAA,KAAC,MAAI,CAAAH,UAAU,2BAA2BC,SAAA,CAAA,gBACxCE,EAAA,KAAC,OAAK,CAAAH,UAAU,yBAAyBC,SAAA,CAAA,MAAIrB,EAAYA,EAAY,GAAO,GAAGH,QAAQ,CAAC,CAAA,CAAE,CAAA,CAAA,CAC5F,CAAA,EACAsB,EAAA,IAAC,SAAA,CACC/B,KAAK,SACLgC,UAAU,8DACXC,SAAA,MAAA,CAED,CAAA,EACF,CACF,CAAA,GASAQ,EAAaA,IAChBV,EAAA,IAAA,MAAA,CAAIC,UAAU,cACbC,SAACF,EAAA,IAAA,MAAA,CAAIC,UAAU,8BACbC,SAACE,EAAA,KAAA,MAAA,CAAIH,UAAU,wCACbC,SAAA,CAAAE,EAAA,KAAC,MACC,CAAAF,SAAA,CAACF,EAAA,IAAA,KAAA,CAAGC,UAAU,6DAA6DC,SAAW,aAAA,CAAA,EACtFE,EAAA,KAAC,QAAM,CAAAH,UAAU,iCACfC,SAAA,CAACF,EAAA,IAAA,QAAA,CACCE,gBAAC,KACC,CAAAA,SAAA,CAACF,EAAA,IAAA,KAAA,CAAGC,UAAU,+BAA+BC,SAAK,OAAA,CAAA,EACjDF,EAAA,IAAA,KAAA,CAAGC,UAAU,+BAA+BC,SAAI,MAAA,CAAA,CAAA,EACnD,CACF,CAAA,EACAF,EAAA,IAAC,SACEE,SAASxD,EAAAiE,WAAWC,IAAI,CAACC,EAAOC,IAC/BV,EAAA,KAAC,KACC,CAAAF,SAAA,CAACE,EAAA,KAAA,KAAA,CAAGH,UAAU,qBAAqBC,SAAA,CAAA,IAAEW,EAAMpC,OAAOC,QAAQ,CAAC,CAAA,CAAE,CAAA,EAC7DsB,EAAA,IAAC,KAAG,CAAAC,UAAU,qBAAsBC,SAAA,IAAIa,KAAKF,EAAMG,SAAS,EAAEC,mBAAmB,CAAE,CAAA,CAAA,CAF5E,EAAAH,CAGT,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,SACC,MACC,CAAAZ,SAAA,CAACF,EAAA,IAAA,KAAA,CAAGC,UAAU,6DAA6DC,SAAU,YAAA,CAAA,EACrFE,EAAA,KAAC,QAAM,CAAAH,UAAU,iCACfC,SAAA,CAACF,EAAA,IAAA,QAAA,CACCE,gBAAC,KACC,CAAAA,SAAA,CAACF,EAAA,IAAA,KAAA,CAAGC,UAAU,+BAA+BC,SAAK,OAAA,CAAA,EACjDF,EAAA,IAAA,KAAA,CAAGC,UAAU,+BAA+BC,SAAI,MAAA,CAAA,CAAA,EACnD,CACF,CAAA,EACAF,EAAA,IAAC,SACEE,SAASxD,EAAAwE,UAAUN,IAAI,CAACC,EAAOC,IAC9BV,EAAA,KAAC,KACC,CAAAF,SAAA,CAACE,EAAA,KAAA,KAAA,CAAGH,UAAU,qBAAqBC,SAAA,CAAA,IAAEW,EAAMpC,OAAOC,QAAQ,CAAC,CAAA,CAAE,CAAA,EAC7DsB,EAAA,IAAC,KAAG,CAAAC,UAAU,qBAAsBC,SAAA,IAAIa,KAAKF,EAAMG,SAAS,EAAEC,mBAAmB,CAAE,CAAA,CAAA,CAF5E,EAAAH,CAGT,CACD,CACH,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,EACF,CACF,CAAA,EAGF,cACG,MACC,CAAAZ,SAAA,CAACF,EAAA,IAAAmB,EAAA,CAAeC,SAAS,YAAa,CAAA,EACtCpB,EAAA,IAAC,OAAIC,UAAU,cACXC,WACGE,EAAA,KAAA,MAAA,CAAIH,UAAU,kCACbC,SAAA,CAAAF,EAAA,IAAC,MAAI,CAAAC,UAAU,8DACbC,SAAAF,EAAA,IAAC,OAAIqB,IAAK3E,EAAS4E,KAAMC,IAAK,GAAG7E,EAAS8E,IAAI,QAASvB,UAAU,wCAAwC,CAC3G,CAAA,EACAG,EAAA,KAAC,MAAI,CAAAH,UAAU,+BACbC,SAAA,CAAAF,EAAA,IAAC,KAAG,CAAAC,UAAU,kCAAmCC,SAAAxD,EAAS8E,IAAK,CAAA,EAC9DxB,EAAA,IAAA,IAAA,CAAEC,UAAU,eAAgBC,WAASuB,QAAS,CAAA,CAAA,CACjD,CAAA,EACArB,EAAA,KAAC,MAAI,CAAAH,UAAU,mBACbC,SAAA,CAACE,EAAA,KAAA,IAAA,CAAEH,UAAU,yBAAyBC,SAAA,CAAA,IAAExD,EAAS2C,iBAAiBX,QAAQ,CAAC,CAAA,CAAE,CAAA,EAC7E0B,EAAA,KAAC,KAAEH,UAAW,WAAWvD,EAASgF,kBAAoB,EAAI,kBAAoB,cAAc,GACzFxB,SAAA,CAASxD,EAAAgF,kBAAoB,EAAI,IAAM,GAAIhF,EAASgF,iBAAiBhD,QAAQ,CAAC,EAAE,GAAA,CACnF,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CACF,EAEF0B,EAAA,KAAC,MAAI,CAAAH,UAAU,kCACbC,SAAA,CAAAF,EAAA,IAAC,MAAI,CAAAC,UAAU,qDACbC,SAAAF,EAAA,IAAC,OAAIqB,IAAK3E,EAAS4E,KAAMC,IAAK,GAAG7E,EAAS8E,IAAI,QAASvB,UAAU,gCAAgC,CACnG,CAAA,EACAG,EAAA,KAAC,MAAI,CAAAH,UAAU,2CACbC,SAAA,CAACE,EAAA,KAAA,MAAA,CAAIH,UAAU,gBACbC,SAAA,CAAAF,EAAA,IAAC,KAAG,CAAAC,UAAU,qBAAsBC,SAAAxD,EAAS8E,IAAK,CAAA,EAClDxB,EAAA,IAAC,IAAG,CAAAE,SAAAxD,EAAS+E,QAAS,CAAA,CAAA,CACxB,CAAA,EACArB,EAAA,KAAC,MAAI,CAAAH,UAAU,aACbC,SAAA,CAACE,EAAA,KAAA,IAAA,CAAEH,UAAU,yBAAyBC,SAAA,CAAA,IAAExD,EAAS2C,iBAAiBX,QAAQ,CAAC,CAAA,CAAE,CAAA,EAC7E0B,EAAA,KAAC,KAAEH,UAAW,WAAWvD,EAASgF,kBAAoB,EAAI,kBAAoB,cAAc,GACzFxB,SAAA,CAASxD,EAAAgF,kBAAoB,EAAI,IAAM,GAAIhF,EAASgF,iBAAiBhD,QAAQ,CAAC,EAAE,GAAA,CACnF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,EACF,CAGJ,CAAA,EACAsB,EAAA,IAACjB,GAAYpC,gBAAAA,EAAkCC,QAASA,EAAUmD,OAAOnD,CAAO,EAAI,IAAK,CAAA,EACxF8D,EAAW,CAAA,CACd,CAAA,CAEJ"}
{"version":3,"file":"profile-DRYvpP_m.js","sources":["../../../app/routes/settings+/profile.tsx"],"sourcesContent":["import { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport { json, type LoaderFunctionArgs } from '@remix-run/node'\nimport { Link, Outlet, useMatches, useLoaderData } from '@remix-run/react'\nimport { z } from 'zod'\nimport { Spacer } from '#app/components/spacer.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { requireUserId } from '#app/utils/auth.server.ts'\nimport { cn } from '#app/utils/misc.tsx'\nimport { useUser } from '#app/utils/user.ts'\nimport { useLocation } from 'react-router-dom';\n\n\nexport const BreadcrumbHandle = z.object({ breadcrumb: z.any() })\nexport type BreadcrumbHandle = z.infer<typeof BreadcrumbHandle>\n\nexport const handle: BreadcrumbHandle & SEOHandle = {\n\tbreadcrumb: <Icon name=\"file-text\">Edit Profile</Icon>,\n\tgetSitemapEntries: () => null,\n}\n\nconst BreadcrumbHandleMatch = z.object({\n\thandle: BreadcrumbHandle,\n})\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\n\t// Parse the URL and query parameters\n\tconst url = new URL(request.url);\n\tconst searchParams = new URLSearchParams(url.search);\n   \n\t// Retrieve the query parameters\n\tconst username = searchParams.get('username');\n\n\treturn json({\n\t\tusername\n\t})\n}\n\nexport default function EditUserProfile() {\n\n\tconst data = useLoaderData<typeof loader>()\n\n\tconst matches = useMatches()\n\tconst breadcrumbs = matches\n\t\t.map((m) => {\n\t\t\tconst result = BreadcrumbHandleMatch.safeParse(m)\n\t\t\tif (!result.success || !result.data.handle.breadcrumb) return null\n\t\t\treturn (\n\t\t\t\t<Link key={m.id} to={m.pathname} className=\"flex items-center\">\n\t\t\t\t\t{result.data.handle.breadcrumb}\n\t\t\t\t</Link>\n\t\t\t)\n\t\t})\n\t\t.filter(Boolean)\n\n\treturn (\n\t\t<div className=\"m-auto mb-24 mt-16 max-w-3xl\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<ul className=\"flex gap-3\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tclassName=\"text-muted-foreground\"\n\t\t\t\t\t\t\tto={`/user`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tProfile\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t{breadcrumbs.map((breadcrumb, i, arr) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tclassName={cn('flex items-center gap-3', {\n\t\t\t\t\t\t\t\t'text-muted-foreground': i < arr.length - 1,\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t▶️ {breadcrumb}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<Spacer size=\"xs\" />\n\t\t\t<main className=\"mx-auto bg-muted px-6 py-8 md:container md:rounded-3xl\">\n\t\t\t\t<Outlet />\n\t\t\t</main>\n\t\t</div>\n\t)\n}\n"],"names":["BreadcrumbHandle","z","object","breadcrumb","any","handle","jsx","Icon","name","children","getSitemapEntries","BreadcrumbHandleMatch","EditUserProfile","useLoaderData","breadcrumbs","useMatches","map","m","result","safeParse","success","data","Link","to","pathname","className","id","filter","Boolean","jsxs","i","arr","cn","length","Spacer","size","Outlet"],"mappings":"uWAYa,MAAAA,EAAmBC,EAAEC,OAAO,CAAEC,WAAYF,EAAEG,IAAI,CAAE,CAAC,EAGnDC,EAAuC,CACnDF,WAAYG,EAAA,IAACC,EAAK,CAAAC,KAAK,YAAYC,SAAY,cAAA,CAAA,EAC/CC,kBAAmBA,IAAM,IAC1B,EAEMC,EAAwBV,EAAEC,OAAO,CACtCG,OAAQL,CACT,CAAC,EAgBD,SAAwBY,GAAkB,CAE5BC,EAA6B,EAG1C,MAAMC,EADUC,IAEdC,IAAKC,GAAM,CACL,MAAAC,EAASP,EAAsBQ,UAAUF,CAAC,EAC5C,MAAA,CAACC,EAAOE,SAAW,CAACF,EAAOG,KAAKhB,OAAOF,WAAmB,KAE5DG,EAAAA,IAAAgB,EAAA,CAAgBC,GAAIN,EAAEO,SAAUC,UAAU,oBACzChB,SAAAS,EAAOG,KAAKhB,OAAOF,UADV,EAAAc,EAAES,EAEb,CAEF,CAAC,EACAC,OAAOC,OAAO,EAGf,OAAAC,EAAAA,KAAC,MAAI,CAAAJ,UAAU,+BACdhB,SAAA,CAAAH,EAAA,IAAC,OAAImB,UAAU,YACdhB,SAACoB,EAAA,KAAA,KAAA,CAAGJ,UAAU,aACbhB,SAAA,CAAAH,EAAA,IAAC,KACA,CAAAG,SAAAH,EAAA,IAACgB,EAAA,CACAG,UAAU,wBACVF,GAAI,QACJd,SAAA,UAED,CACD,CAAA,EACCK,EAAYE,IAAI,CAACb,EAAY2B,EAAGC,IAChCF,EAAA,KAAC,KAAA,CAEAJ,UAAWO,EAAG,0BAA2B,CACxC,wBAAyBF,EAAIC,EAAIE,OAAS,CAC3C,CAAC,EACDxB,SAAA,CAAA,MACIN,CAAA,GALC2B,CAMN,CACA,CAAA,EACF,CACD,CAAA,EACAxB,EAAA,IAAC4B,EAAO,CAAAC,KAAK,IAAK,CAAA,QACjB,OAAK,CAAAV,UAAU,yDACfhB,SAAAH,EAAAA,IAAC8B,IAAO,CACT,CAAA,CAAA,CACD,CAAA,CAEF"}
{"version":3,"file":"profile.index-CzsioT8P.js","sources":["../../../app/routes/settings+/profile.index.tsx"],"sourcesContent":["import { getFormProps, getInputProps, useForm } from '@conform-to/react'\nimport { getZodConstraint, parseWithZod } from '@conform-to/zod'\nimport { invariantResponse } from '@epic-web/invariant'\nimport { type SEOHandle } from '@nasa-gcn/remix-seo'\nimport {\n\tjson,\n\ttype LoaderFunctionArgs,\n\ttype ActionFunctionArgs,\n} from '@remix-run/node'\nimport { Link, useFetcher, useLoaderData } from '@remix-run/react'\nimport { z } from 'zod'\nimport { ErrorList, Field } from '#app/components/forms.tsx'\nimport { Button } from '#app/components/ui/button.tsx'\nimport { Icon } from '#app/components/ui/icon.tsx'\nimport { StatusButton } from '#app/components/ui/status-button.tsx'\nimport { requireUserId, sessionKey } from '#app/utils/auth.server.ts'\nimport { prisma } from '#app/utils/db.server.ts'\nimport { getUserImgSrc, useDoubleCheck } from '#app/utils/misc.tsx'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { redirectWithToast } from '#app/utils/toast.server.ts'\nimport { NameSchema, UsernameSchema } from '#app/utils/user-validation.ts'\nimport { twoFAVerificationType } from './profile.two-factor.tsx'\nimport { useLocation } from 'react-router-dom';\n\n//API\nimport { userAPI } from '../../api/userAPI';\n\nexport const handle: SEOHandle = {\n\tgetSitemapEntries: () => null,\n}\n\nconst ProfileFormSchema = z.object({\n\tname: NameSchema.optional(),\n\tusername: UsernameSchema,\n\temail: z.string().email(),\n})\n\nexport async function loader({ request }: LoaderFunctionArgs) {\n\n\t// Parse the URL and query parameters\n\tconst url = new URL(request.url);\n\tconst searchParams = new URLSearchParams(url.search);\n   \n\t// Retrieve the query parameters\n\tconst username = searchParams.get('username');\n\tconst id = searchParams.get('id');\n\tconst email = searchParams.get('email');\n\tconst name = searchParams.get('name');\n\n\treturn json({\n\t\tusername,\n\t\tid, \n\t\tname,\n\t\temail,\n\t})\n}\n\ntype ProfileActionArgs = {\n\trequest: Request\n\tuserId: string\n\tformData: FormData\n}\nconst profileUpdateActionIntent = 'update-profile'\nconst signOutOfSessionsActionIntent = 'sign-out-of-sessions'\nconst deleteDataActionIntent = 'delete-data'\n\nexport async function action({ request }: ActionFunctionArgs) {\n\tconst userId = await requireUserId(request)\n\tconst formData = await request.formData()\n\tconst intent = formData.get('intent')\n\tswitch (intent) {\n\t\tcase profileUpdateActionIntent: {\n\t\t\treturn profileUpdateAction({ request, userId, formData })\n\t\t}\n\t\tcase signOutOfSessionsActionIntent: {\n\t\t\treturn signOutOfSessionsAction({ request, userId, formData })\n\t\t}\n\t\tcase deleteDataActionIntent: {\n\t\t\treturn deleteDataAction({ request, userId, formData })\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new Response(`Invalid intent \"${intent}\"`, { status: 400 })\n\t\t}\n\t}\n}\n\nexport default function EditUserProfile() {\n\tconst data = useLoaderData<typeof loader>()\n\n\treturn (\n\t\t<div className=\"flex flex-col gap-12\">\n\t\t\t<UpdateProfile />\n\n\t\t\t{/*<div className=\"col-span-6 my-6 h-1 border-b-[1.5px] border-foreground\" />\n\t\t\t<div className=\"col-span-full flex flex-col gap-6\">\n\t\t\t\t<div>\n\t\t\t\t\t<Link to=\"change-email\">\n\t\t\t\t\t\t<Icon name=\"envelope-closed\">\n\t\t\t\t\t\t\tChange email from {data.email}\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</div>*/}\n\t\t</div>\n\t)\n}\n\nasync function profileUpdateAction({ userId, formData }: ProfileActionArgs) {\n\n\tconst response = await userAPI.updateProfile(userId, formData.get('name'), formData.get('username'), formData.get('email'));\n\n\treturn json({\n\t\tresult: response.data,\n\t})\n}\n\nfunction UpdateProfile() {\n\tconst data = useLoaderData<typeof loader>()\n\n\tconst fetcher = useFetcher<typeof profileUpdateAction>()\n\n\tconst [form, fields] = useForm({\n\t\tid: 'edit-profile',\n\t\tconstraint: getZodConstraint(ProfileFormSchema),\n\t\tlastResult: fetcher.data?.result,\n\t\tonValidate({ formData }) {\n\t\t\treturn parseWithZod(formData, { schema: ProfileFormSchema })\n\t\t},\n\t\tdefaultValue: {\n\t\t\tusername: data.username,\n\t\t\tname: data.name,\n\t\t\temail: data.email,\n\t\t},\n\t})\n\n\treturn (\n\t\t<fetcher.Form method=\"POST\" {...getFormProps(form)}>\n\t\t\t<div className=\"grid grid-cols-6 gap-x-10\">\n\t\t\t\t<Field\n\t\t\t\t\tclassName=\"col-span-3\"\n\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\thtmlFor: fields.username.id,\n\t\t\t\t\t\tchildren: 'Username',\n\t\t\t\t\t}}\n\t\t\t\t\tinputProps={getInputProps(fields.username, { type: 'text' })}\n\t\t\t\t\terrors={fields.username.errors}\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tclassName=\"col-span-3\"\n\t\t\t\t\tlabelProps={{ htmlFor: fields.name.id, children: 'Name' }}\n\t\t\t\t\tinputProps={getInputProps(fields.name, { type: 'text' })}\n\t\t\t\t\terrors={fields.name.errors}\n\t\t\t\t/>\n\t\t\t\t<Field\n\t\t\t\t\tclassName=\"col-span-3\"\n\t\t\t\t\tlabelProps={{\n\t\t\t\t\t\thtmlFor: fields.username.id,\n\t\t\t\t\t\tchildren: 'Email',\n\t\t\t\t\t}}\n\t\t\t\t\tinputProps={getInputProps(fields.email, { type: 'text' })}\n\t\t\t\t\terrors={fields.email.errors}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<ErrorList errors={form.errors} id={form.errorId} />\n\n\t\t\t<div className=\"mt-8 flex justify-center\">\n\t\t\t\t<StatusButton\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tsize=\"wide\"\n\t\t\t\t\tname=\"intent\"\n\t\t\t\t\tvalue={profileUpdateActionIntent}\n\t\t\t\t\tstatus={\n\t\t\t\t\t\tfetcher.state !== 'idle' ? 'pending' : (form.status ?? 'idle')\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tSave changes\n\t\t\t\t</StatusButton>\n\t\t\t</div>\n\t\t</fetcher.Form>\n\t)\n}\n\nasync function signOutOfSessionsAction({ request, userId }: ProfileActionArgs) {\n\tconst authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\tconst sessionId = authSession.get(sessionKey)\n\tinvariantResponse(\n\t\tsessionId,\n\t\t'You must be authenticated to sign out of other sessions',\n\t)\n\tawait prisma.session.deleteMany({\n\t\twhere: {\n\t\t\tuserId,\n\t\t\tid: { not: sessionId },\n\t\t},\n\t})\n\treturn json({ status: 'success' } as const)\n}\n\nfunction SignOutOfSessions() {\n\tconst data = useLoaderData<typeof loader>()\n\tconst dc = useDoubleCheck()\n\n\t/*const fetcher = useFetcher<typeof signOutOfSessionsAction>()\n\tconst otherSessionsCount = data.user._count.sessions - 1\n\treturn (\n\t\t<div>\n\t\t\t{otherSessionsCount ? (\n\t\t\t\t<fetcher.Form method=\"POST\">\n\t\t\t\t\t<StatusButton\n\t\t\t\t\t\t{...dc.getButtonProps({\n\t\t\t\t\t\t\ttype: 'submit',\n\t\t\t\t\t\t\tname: 'intent',\n\t\t\t\t\t\t\tvalue: signOutOfSessionsActionIntent,\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tvariant={dc.doubleCheck ? 'destructive' : 'default'}\n\t\t\t\t\t\tstatus={\n\t\t\t\t\t\t\tfetcher.state !== 'idle'\n\t\t\t\t\t\t\t\t? 'pending'\n\t\t\t\t\t\t\t\t: (fetcher.data?.status ?? 'idle')\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon name=\"avatar\">\n\t\t\t\t\t\t\t{dc.doubleCheck\n\t\t\t\t\t\t\t\t? `Are you sure?`\n\t\t\t\t\t\t\t\t: `Sign out of ${otherSessionsCount} other sessions`}\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</StatusButton>\n\t\t\t\t</fetcher.Form>\n\t\t\t) : (\n\t\t\t\t<Icon name=\"avatar\">This is your only session</Icon>\n\t\t\t)}\n\t\t</div>\n\t)*/\n}\n\nasync function deleteDataAction({ userId }: ProfileActionArgs) {\n\tawait prisma.user.delete({ where: { id: userId } })\n\treturn redirectWithToast('/', {\n\t\ttype: 'success',\n\t\ttitle: 'Data Deleted',\n\t\tdescription: 'All of your data has been deleted',\n\t})\n}\n\nfunction DeleteData() {\n\tconst dc = useDoubleCheck()\n\n\tconst fetcher = useFetcher<typeof deleteDataAction>()\n\treturn (\n\t\t<div>\n\t\t\t<fetcher.Form method=\"POST\">\n\t\t\t\t<StatusButton\n\t\t\t\t\t{...dc.getButtonProps({\n\t\t\t\t\t\ttype: 'submit',\n\t\t\t\t\t\tname: 'intent',\n\t\t\t\t\t\tvalue: deleteDataActionIntent,\n\t\t\t\t\t})}\n\t\t\t\t\tvariant={dc.doubleCheck ? 'destructive' : 'default'}\n\t\t\t\t\tstatus={fetcher.state !== 'idle' ? 'pending' : 'idle'}\n\t\t\t\t>\n\t\t\t\t\t<Icon name=\"trash\">\n\t\t\t\t\t\t{dc.doubleCheck ? `Are you sure?` : `Delete all your data`}\n\t\t\t\t\t</Icon>\n\t\t\t\t</StatusButton>\n\t\t\t</fetcher.Form>\n\t\t</div>\n\t)\n}\n"],"names":["handle","getSitemapEntries","ProfileFormSchema","z","object","name","NameSchema","optional","username","UsernameSchema","email","string","profileUpdateActionIntent","EditUserProfile","useLoaderData","className","children","jsx","UpdateProfile","data","fetcher","useFetcher","form","fields","useForm","id","constraint","getZodConstraint","lastResult","result","onValidate","formData","parseWithZod","schema","defaultValue","jsxs","Form","method","getFormProps","Field","labelProps","htmlFor","inputProps","getInputProps","type","errors","ErrorList","errorId","StatusButton","size","value","status","state"],"mappings":"yqBA2BO,MAAMA,EAAoB,CAChCC,kBAAmBA,IAAM,IAC1B,EAEMC,EAAoBC,EAAEC,OAAO,CAClCC,KAAMC,EAAWC,SAAS,EAC1BC,SAAUC,EACVC,MAAOP,EAAEQ,OAAO,EAAED,MAAM,CACzB,CAAC,EA2BKE,EAA4B,iBAwBlC,SAAwBC,GAAkB,CAC5BC,OAAAA,EAA6B,QAGxC,MAAI,CAAAC,UAAU,uBACdC,SAAAC,EAAAA,IAACC,IAAc,CAYhB,CAAA,CAEF,CAWA,SAASA,GAAgB,OACxB,MAAMC,EAAOL,IAEPM,EAAUC,IAEV,CAACC,EAAMC,CAAM,EAAIC,EAAQ,CAC9BC,GAAI,eACJC,WAAYC,EAAiBzB,CAAiB,EAC9C0B,YAAYR,EAAAA,EAAQD,OAARC,YAAAA,EAAcS,OAC1BC,WAAW,CAAEC,SAAAA,CAAS,EAAG,CACxB,OAAOC,EAAaD,EAAU,CAAEE,OAAQ/B,CAAkB,CAAC,CAC5D,EACAgC,aAAc,CACb1B,SAAUW,EAAKX,SACfH,KAAMc,EAAKd,KACXK,MAAOS,EAAKT,KACb,CACD,CAAC,EAGA,OAAAyB,EAAA,KAACf,EAAQgB,KAAR,CAAaC,OAAO,OAAQ,GAAGC,EAAahB,CAAI,EAChDN,SAAA,CAACmB,EAAA,KAAA,MAAA,CAAIpB,UAAU,4BACdC,SAAA,CAAAC,EAAA,IAACsB,EAAA,CACAxB,UAAU,aACVyB,WAAY,CACXC,QAASlB,EAAOf,SAASiB,GACzBT,SAAU,UACX,EACA0B,WAAYC,EAAcpB,EAAOf,SAAU,CAAEoC,KAAM,MAAO,CAAC,EAC3DC,OAAQtB,EAAOf,SAASqC,MAAA,CACzB,EACA5B,EAAA,IAACsB,EAAA,CACAxB,UAAU,aACVyB,WAAY,CAAEC,QAASlB,EAAOlB,KAAKoB,GAAIT,SAAU,MAAO,EACxD0B,WAAYC,EAAcpB,EAAOlB,KAAM,CAAEuC,KAAM,MAAO,CAAC,EACvDC,OAAQtB,EAAOlB,KAAKwC,MAAA,CACrB,EACA5B,EAAA,IAACsB,EAAA,CACAxB,UAAU,aACVyB,WAAY,CACXC,QAASlB,EAAOf,SAASiB,GACzBT,SAAU,OACX,EACA0B,WAAYC,EAAcpB,EAAOb,MAAO,CAAEkC,KAAM,MAAO,CAAC,EACxDC,OAAQtB,EAAOb,MAAMmC,MAAA,CACtB,CAAA,CACD,CAAA,QAECC,EAAU,CAAAD,OAAQvB,EAAKuB,OAAQpB,GAAIH,EAAKyB,OAAS,CAAA,EAElD9B,EAAA,IAAC,MAAI,CAAAF,UAAU,2BACdC,SAAAC,EAAA,IAAC+B,EAAA,CACAJ,KAAK,SACLK,KAAK,OACL5C,KAAK,SACL6C,MAAOtC,EACPuC,OACC/B,EAAQgC,QAAU,OAAS,UAAa9B,EAAK6B,QAAU,OAExDnC,SAAA,eAED,CACD,CAAA,CAAA,CACD,CAAA,CAEF"}
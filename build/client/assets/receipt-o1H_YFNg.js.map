{"version":3,"file":"receipt-o1H_YFNg.js","sources":["../../../app/routes/upload+/receipt.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { json } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { Storage } from '@google-cloud/storage';\nimport type { LoaderFunction } from '@remix-run/node';\nimport path from 'path';\n\nimport { sessionKey } from '#app/utils/auth.server.ts'\nimport { authSessionStorage } from '#app/utils/session.server.ts'\nimport { redirect } from '@remix-run/node';\n\n//API\n// @ts-ignore\nimport { transactionAPI } from '../../api/transactionAPI';\n// @ts-ignore\nimport { userAPI } from '../../api/userAPI';\n\nconst storage = new Storage();\nconst bucketName = 'receipts_sk';\n\n//Reciept Interface\ninterface Receipt {\n    userId: string;\n    _id: string;\n    businessId: string;\n    receiptUrl: string;\n    userName: string;\n    businessName: string;\n    signedUrl: string;\n    createdAt: Date;\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n\n    //Confirmed we are logged in as admin\n    const authSession = await authSessionStorage.getSession(\n\t\trequest.headers.get('cookie'),\n\t)\n\n    const session = authSession.get(sessionKey);\n\n    if (session) {\n\n        //Get User\n        const user = await userAPI.checklogintoken(session);\n\n        if (user && user.role === \"admin\") {\n    \n            try {\n\n                const receipts = await transactionAPI.getReceipts();\n\n                const signedReceipts = await Promise.all(\n                    receipts.receipts.map(async (receipt: Receipt) => {\n                        const fileName = path.basename(receipt.receiptUrl);\n                        const file = storage.bucket(bucketName).file(fileName);\n                        const [url] = await file.getSignedUrl({\n                            action: 'read',\n                            expires: Date.now() + 1000 * 60 * 60, // 1 hour\n                        });\n                        console.log(url);\n                        return {\n                            ...receipt,\n                            signedUrl: url,\n                        };\n                    })\n                );\n\n                return json({ signedReceipts });\n            } catch (error) {\n                console.error('Error fetching files from Google Cloud Storage:', error);\n                return json({ error: 'Failed to fetch files' }, { status: 500 });\n            }\n        } else {\n            return redirect('/');\n        }\n    } else {\n        return redirect('/');\n    }\n};\n\nexport default function Receipts() {\n  const { signedReceipts } = useLoaderData<{ signedReceipts: Receipt[] }>();  \n  \n  const [selectedReceipt, setSelectedReceipt] = useState<{ _id: string; signedUrl: string; amount: string } | null>(null);\n\n  const handleOpenModal = (receipt: { _id: string; signedUrl: string }) => {\n    setSelectedReceipt({ _id: receipt._id, signedUrl: receipt.signedUrl, amount: '' });\n  };\n\n  const handleCloseModal = () => {\n    setSelectedReceipt(null);\n  };\n\n  const handleAmountChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (selectedReceipt) {\n      setSelectedReceipt({ ...selectedReceipt, amount: event.target.value });\n    }\n  };\n\n  const handleSave = async () => {\n    // Handle save action here\n    console.log('Saved amount:', selectedReceipt?.amount);\n    console.log('Receipt ID:', selectedReceipt?._id);\n\n    // Server call to deal with receipt\n    await transactionAPI.processReceipt(selectedReceipt?._id, selectedReceipt?.amount);\n\n    // Close modal\n    handleCloseModal();\n\n    //Reload the page\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"container mx-auto p-4 sm:p-6\">\n        <h1 className=\"text-2xl sm:text-3xl font-bold mb-4 text-center sm:text-left\">Receipts</h1>\n        {signedReceipts && signedReceipts.length > 0 ? (\n            <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full bg-white\">\n                <thead>\n                <tr>\n                    <th className=\"py-2 px-4 border-b border-gray-200\">Business Name</th>\n                    <th className=\"py-2 px-4 border-b border-gray-200\">User Name</th>\n                    <th className=\"py-2 px-4 border-b border-gray-200\">Receipt URL</th>\n                </tr>\n                </thead>\n                <tbody>\n                {signedReceipts.map(receipt => (\n                    <tr key={receipt._id}>\n                    <td className=\"py-2 px-4 border-b border-gray-200 text-center\">{receipt.businessName}</td>\n                    <td className=\"py-2 px-4 border-b border-gray-200 text-center\">{receipt.userName || 'N/A'}</td>\n                    <td className=\"py-2 px-4 border-b border-gray-200 text-center\">\n                        <button onClick={() => handleOpenModal({ _id: receipt._id, signedUrl: receipt.signedUrl })} className=\"text-blue-500 hover:underline\">\n                        {receipt.receiptUrl}\n                        </button>\n                    </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n            </div>\n        ) : (\n            <p className=\"text-center\">No receipts found.</p>\n        )}\n\n        {selectedReceipt && (\n            <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 p-4\">\n            <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-md w-full\">\n                <img src={selectedReceipt.signedUrl} alt=\"Receipt\" className=\"mb-4 w-full h-auto\" />\n                <input\n                type=\"text\"\n                value={selectedReceipt.amount}\n                onChange={handleAmountChange}\n                placeholder=\"Enter amount\"\n                className=\"w-full p-2 border border-gray-300 rounded\"\n                />\n                <div className=\"flex justify-center gap-5 mt-5\">\n                <button onClick={handleCloseModal} className=\"bg-gray-500 text-white py-2 px-4 rounded hover:bg-gray-600\">\n                    Cancel\n                </button>\n                <button onClick={handleSave} className=\"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600\">\n                    Save\n                </button>\n                </div>\n            </div>\n            </div>\n        )}\n    </div>\n  );\n}"],"names":["Receipts","signedReceipts","useLoaderData","selectedReceipt","setSelectedReceipt","useState","handleOpenModal","receipt","_id","signedUrl","amount","handleCloseModal","handleAmountChange","event","target","value","handleSave","console","log","transactionAPI","processReceipt","window","location","reload","jsxs","className","children","jsx","length","map","businessName","userName","onClick","receiptUrl","src","alt","type","onChange","placeholder"],"mappings":"wQAiFA,SAAwBA,GAAW,CAC3B,KAAA,CAAEC,eAAAA,CAAe,EAAIC,EAA6C,EAElE,CAACC,EAAiBC,CAAkB,EAAIC,WAAoE,IAAI,EAEhHC,EAAmBC,GAAgD,CACpDH,EAAA,CAAEI,IAAKD,EAAQC,IAAKC,UAAWF,EAAQE,UAAWC,OAAQ,EAAG,CAAC,GAG7EC,EAAmBA,IAAM,CAC7BP,EAAmB,IAAI,GAGnBQ,EAAsBC,GAA+C,CACrEV,GACFC,EAAmB,CAAE,GAAGD,EAAiBO,OAAQG,EAAMC,OAAOC,KAAM,CAAC,GAInEC,EAAa,SAAY,CAErBC,QAAAC,IAAI,gBAAiBf,GAAAA,YAAAA,EAAiBO,MAAM,EAC5CO,QAAAC,IAAI,cAAef,GAAAA,YAAAA,EAAiBK,GAAG,EAG/C,MAAMW,EAAeC,eAAejB,GAAAA,YAAAA,EAAiBK,IAAKL,GAAAA,YAAAA,EAAiBO,MAAM,EAGhEC,IAGjBU,OAAOC,SAASC,UAIhB,OAAAC,EAAAA,KAAC,MAAI,CAAAC,UAAU,+BACXC,SAAA,CAACC,EAAA,IAAA,KAAA,CAAGF,UAAU,+DAA+DC,SAAQ,UAAA,CAAA,EACpFzB,GAAkBA,EAAe2B,OAAS,EACvCD,EAAA,IAAC,MAAI,CAAAF,UAAU,kBACfC,SAAAF,EAAA,KAAC,QAAM,CAAAC,UAAU,sBACbC,SAAA,CAACC,EAAA,IAAA,QAAA,CACDD,gBAAC,KACG,CAAAA,SAAA,CAACC,EAAA,IAAA,KAAA,CAAGF,UAAU,qCAAqCC,SAAa,eAAA,CAAA,EAC/DC,EAAA,IAAA,KAAA,CAAGF,UAAU,qCAAqCC,SAAS,WAAA,CAAA,EAC3DC,EAAA,IAAA,KAAA,CAAGF,UAAU,qCAAqCC,SAAW,aAAA,CAAA,CAAA,EAClE,CACA,CAAA,QACC,QACA,CAAAA,SAAAzB,EAAe4B,IAAItB,UACf,KACD,CAAAmB,SAAA,CAAAC,EAAA,IAAC,KAAG,CAAAF,UAAU,iDAAkDC,SAAAnB,EAAQuB,YAAa,CAAA,QACpF,KAAG,CAAAL,UAAU,iDAAkDC,SAAAnB,EAAQwB,UAAY,KAAM,CAAA,EAC1FJ,EAAA,IAAC,MAAGF,UAAU,iDACVC,eAAC,SAAO,CAAAM,QAASA,IAAM1B,EAAgB,CAAEE,IAAKD,EAAQC,IAAKC,UAAWF,EAAQE,SAAU,CAAC,EAAGgB,UAAU,gCACrGC,SAAQnB,EAAA0B,WACT,CACJ,CAAA,CAAA,CAPS,EAAA1B,EAAQC,GAQjB,CACH,CACD,CAAA,CAAA,EACJ,EACA,EAEAmB,EAAA,IAAC,IAAE,CAAAF,UAAU,cAAcC,SAAkB,qBAAA,EAGhDvB,SACI,MAAI,CAAAsB,UAAU,4EACfC,SAACF,EAAA,KAAA,MAAA,CAAIC,UAAU,oDACXC,SAAA,CAAAC,EAAA,IAAC,OAAIO,IAAK/B,EAAgBM,UAAW0B,IAAI,UAAUV,UAAU,oBAAqB,CAAA,EAClFE,EAAA,IAAC,QAAA,CACDS,KAAK,OACLrB,MAAOZ,EAAgBO,OACvB2B,SAAUzB,EACV0B,YAAY,eACZb,UAAU,2CAAA,CACV,EACAD,EAAA,KAAC,MAAI,CAAAC,UAAU,iCACfC,SAAA,CAAAC,EAAA,IAAC,SAAO,CAAAK,QAASrB,EAAkBc,UAAU,6DAA6DC,SAE1G,QAAA,CAAA,QACC,SAAO,CAAAM,QAAShB,EAAYS,UAAU,6DAA6DC,SAEpG,MAAA,CAAA,CAAA,CACA,CAAA,CAAA,EACJ,CACA,CAAA,CAAA,CAER,CAAA,CAEJ"}